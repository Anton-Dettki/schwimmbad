{
  "version": 3,
  "sources": ["../../@schedule-x/current-time/dist/core.js"],
  "sourcesContent": ["import 'preact/jsx-runtime';\n\nclass NumberRangeError extends Error {\n    constructor(min, max) {\n        super(`Number must be between ${min} and ${max}.`);\n        Object.defineProperty(this, \"min\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: min\n        });\n        Object.defineProperty(this, \"max\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: max\n        });\n    }\n}\n\nconst doubleDigit = (number) => {\n    if (number < 0 || number > 99)\n        throw new NumberRangeError(0, 99);\n    return String(number).padStart(2, '0');\n};\n\nconst toDateString = (date) => {\n    return `${date.getFullYear()}-${doubleDigit(date.getMonth() + 1)}-${doubleDigit(date.getDate())}`;\n};\nconst toTimeString = (date) => {\n    return `${doubleDigit(date.getHours())}:${doubleDigit(date.getMinutes())}`;\n};\nconst toDateTimeString = (date) => {\n    return `${toDateString(date)} ${toTimeString(date)}`;\n};\n\nconst timePointToPercentage = (timePointsInDay, dayBoundaries, timePoint) => {\n    if (timePoint < dayBoundaries.start) {\n        const firstDayTimePoints = 2400 - dayBoundaries.start;\n        return ((timePoint + firstDayTimePoints) / timePointsInDay) * 100;\n    }\n    return ((timePoint - dayBoundaries.start) / timePointsInDay) * 100;\n};\n\nclass InvalidTimeStringError extends Error {\n    constructor(timeString) {\n        super(`Invalid time string: ${timeString}`);\n    }\n}\n\n// regex for strings between 00:00 and 23:59\nconst timeStringRegex = /^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$/;\n\nconst toIntegers = (dateTimeSpecification) => {\n    const hours = dateTimeSpecification.slice(11, 13), minutes = dateTimeSpecification.slice(14, 16);\n    return {\n        year: Number(dateTimeSpecification.slice(0, 4)),\n        month: Number(dateTimeSpecification.slice(5, 7)) - 1,\n        date: Number(dateTimeSpecification.slice(8, 10)),\n        hours: hours !== '' ? Number(hours) : undefined,\n        minutes: minutes !== '' ? Number(minutes) : undefined,\n    };\n};\n\nconst minuteTimePointMultiplier = 1.6666666666666667; // 100 / 60\nconst timePointsFromString = (timeString) => {\n    if (!timeStringRegex.test(timeString) && timeString !== '24:00')\n        throw new InvalidTimeStringError(timeString);\n    const [hoursInt, minutesInt] = timeString\n        .split(':')\n        .map((time) => parseInt(time, 10));\n    let minutePoints = (minutesInt * minuteTimePointMultiplier).toString();\n    if (minutePoints.split('.')[0].length < 2)\n        minutePoints = `0${minutePoints}`;\n    return Number(hoursInt + minutePoints);\n};\n\nconst timeFromDateTime = (dateTime) => {\n    return dateTime.slice(11);\n};\n\nconst getYCoordinateInTimeGrid = (dateTimeString, dayBoundaries, pointsPerDay) => {\n    return timePointToPercentage(pointsPerDay, dayBoundaries, timePointsFromString(timeFromDateTime(dateTimeString)));\n};\n\nconst definePlugin = (name, definition) => {\n    definition.name = name;\n    return definition;\n};\n\nvar WeekDay;\n(function (WeekDay) {\n    WeekDay[WeekDay[\"SUNDAY\"] = 0] = \"SUNDAY\";\n    WeekDay[WeekDay[\"MONDAY\"] = 1] = \"MONDAY\";\n    WeekDay[WeekDay[\"TUESDAY\"] = 2] = \"TUESDAY\";\n    WeekDay[WeekDay[\"WEDNESDAY\"] = 3] = \"WEDNESDAY\";\n    WeekDay[WeekDay[\"THURSDAY\"] = 4] = \"THURSDAY\";\n    WeekDay[WeekDay[\"FRIDAY\"] = 5] = \"FRIDAY\";\n    WeekDay[WeekDay[\"SATURDAY\"] = 6] = \"SATURDAY\";\n})(WeekDay || (WeekDay = {}));\n\nWeekDay.MONDAY;\n\nconst addMinutes = (to, nMinutes) => {\n    const { year, month, date, hours, minutes } = toIntegers(to);\n    const isDateTimeString = hours !== undefined && minutes !== undefined;\n    const jsDate = new Date(year, month, date, hours !== null && hours !== void 0 ? hours : 0, minutes !== null && minutes !== void 0 ? minutes : 0);\n    jsDate.setMinutes(jsDate.getMinutes() + nMinutes);\n    if (isDateTimeString) {\n        return toDateTimeString(jsDate);\n    }\n    return toDateString(jsDate);\n};\n\nclass CurrentTimePluginImpl {\n    constructor(config = {}) {\n        Object.defineProperty(this, \"config\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: config\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'currentTime'\n        });\n        Object.defineProperty(this, \"$app\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"observer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: null\n        });\n        if (typeof config.timeZoneOffset === 'number') {\n            if (config.timeZoneOffset < -720 || config.timeZoneOffset > 840) {\n                throw new Error(`Invalid time zone offset: ` + config.timeZoneOffset);\n            }\n        }\n    }\n    onRender($app) {\n        this.$app = $app;\n        this.observer = new MutationObserver((mutationList) => {\n            for (const mutation of mutationList) {\n                if (mutation.type === 'childList') {\n                    this.setIndicator();\n                }\n            }\n        });\n        const calendarWrapper = $app.elements.calendarWrapper;\n        if (!calendarWrapper) {\n            throw new Error('Calendar wrapper not found');\n        }\n        this.observer.observe(calendarWrapper, {\n            childList: true,\n            subtree: true,\n        });\n    }\n    setIndicator(isRecursion = false) {\n        const todayDateString = toDateString(new Date());\n        let nowDateTimeString = toDateTimeString(new Date());\n        if (this.config.timeZoneOffset) {\n            nowDateTimeString = addMinutes(nowDateTimeString, this.config.timeZoneOffset);\n        }\n        const todayElement = this.$app.elements.calendarWrapper.querySelector(`[data-time-grid-date=\"${todayDateString}\"]`);\n        if (!todayElement)\n            return;\n        const existingIndicator = todayElement.querySelector('.sx__current-time-indicator');\n        if (existingIndicator && isRecursion)\n            existingIndicator.remove();\n        if (todayElement && !existingIndicator) {\n            const currentTimeIndicator = document.createElement('div');\n            currentTimeIndicator.classList.add('sx__current-time-indicator');\n            const top = getYCoordinateInTimeGrid(nowDateTimeString, this.$app.config.dayBoundaries.value, this.$app.config.timePointsPerDay) + '%';\n            currentTimeIndicator.style.top = top;\n            todayElement.appendChild(currentTimeIndicator);\n            if (this.config.fullWeekWidth) {\n                this.createFullWidthIndicator(top);\n            }\n            setTimeout(this.setIndicator.bind(this, true), 60000 - (Date.now() % 60000));\n        }\n    }\n    createFullWidthIndicator(top) {\n        const fullWeekTimeIndicator = document.createElement('div');\n        fullWeekTimeIndicator.classList.add('sx__current-time-indicator-full-week');\n        fullWeekTimeIndicator.style.top = top;\n        const weekGridWrapper = document.querySelector('.sx__week-grid');\n        const existingFullWeekIndicator = weekGridWrapper === null || weekGridWrapper === void 0 ? void 0 : weekGridWrapper.querySelector('.sx__current-time-indicator-full-week');\n        if (existingFullWeekIndicator) {\n            existingFullWeekIndicator.remove();\n        }\n        if (weekGridWrapper) {\n            weekGridWrapper.appendChild(fullWeekTimeIndicator);\n        }\n    }\n    destroy() {\n        if (this.observer) {\n            this.observer.disconnect();\n        }\n    }\n}\nconst createCurrentTimePlugin = (config) => {\n    return definePlugin('currentTime', new CurrentTimePluginImpl(config));\n};\n\nexport { createCurrentTimePlugin };\n"],
  "mappings": "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",
  "names": ["WeekDay"]
}
