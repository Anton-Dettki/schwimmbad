{
  "version": 3,
  "sources": ["../../preact/src/constants.js", "../../preact/src/util.js", "../../preact/src/options.js", "../../preact/src/create-element.js", "../../preact/src/component.js", "../../preact/src/diff/props.js", "../../preact/src/create-context.js", "../../preact/src/diff/children.js", "../../preact/src/diff/index.js", "../../preact/src/render.js", "../../preact/src/clone-element.js", "../../preact/src/diff/catch-error.js", "../../preact/jsx-runtime/src/utils.js", "../../preact/src/constants.js", "../../preact/jsx-runtime/src/index.js", "../../preact/hooks/src/index.js", "../../@preact/signals-core/src/index.ts", "../../@preact/signals/src/index.ts"],
  "sourcesContent": ["/** Normal hydration that attaches to a DOM tree but does not diff it. */\nexport const MODE_HYDRATE = 1 << 5;\n/** Signifies this VNode suspended on the previous render */\nexport const MODE_SUSPENDED = 1 << 7;\n/** Indicates that this node needs to be inserted while patching children */\nexport const INSERT_VNODE = 1 << 2;\n/** Indicates a VNode has been matched with another VNode in the diff */\nexport const MATCHED = 1 << 1;\n\n/** Reset all mode flags */\nexport const RESET_MODE = ~(MODE_HYDRATE | MODE_SUSPENDED);\n\nexport const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\nexport const XHTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\nexport const MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n\nexport const NULL = null;\nexport const UNDEFINED = undefined;\nexport const EMPTY_OBJ = /** @type {any} */ ({});\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL =\n\t/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n", "import { EMPTY_ARR } from './constants';\n\nexport const isArray = Array.isArray;\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-expect-error We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {import('./index').ContainerNode} node The node to remove\n */\nexport function removeNode(node) {\n\tif (node && node.parentNode) node.parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n", "import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n", "import { slice } from './util';\nimport options from './options';\nimport { NULL, UNDEFINED } from './constants';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component constructor for this\n * virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the\n * virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != NULL) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === UNDEFINED) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, NULL);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\t/** @type {import('./internal').VNode} */\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: NULL,\n\t\t_parent: NULL,\n\t\t_depth: 0,\n\t\t_dom: NULL,\n\t\t_component: NULL,\n\t\tconstructor: UNDEFINED,\n\t\t_original: original == NULL ? ++vnodeId : original,\n\t\t_index: -1,\n\t\t_flags: 0\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == NULL && options.vnode != NULL) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: NULL };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != NULL && vnode.constructor == UNDEFINED;\n", "import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\nimport { MODE_HYDRATE, NULL } from './constants';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function BaseComponent(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nBaseComponent.prototype.setState = function (update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != NULL && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == NULL) return;\n\n\tif (this._vnode) {\n\t\tif (callback) {\n\t\t\tthis._stateCallbacks.push(callback);\n\t\t}\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nBaseComponent.prototype.forceUpdate = function (callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](https://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {ComponentChildren | void}\n */\nBaseComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == NULL) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._index + 1)\n\t\t\t: NULL;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != NULL && sibling._dom != NULL) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : NULL;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet oldVNode = component._vnode,\n\t\toldDom = oldVNode._dom,\n\t\tcommitQueue = [],\n\t\trefQueue = [];\n\n\tif (component._parentDom) {\n\t\tconst newVNode = assign({}, oldVNode);\n\t\tnewVNode._original = oldVNode._original + 1;\n\t\tif (options.vnode) options.vnode(newVNode);\n\n\t\tdiff(\n\t\t\tcomponent._parentDom,\n\t\t\tnewVNode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tcomponent._parentDom.namespaceURI,\n\t\t\toldVNode._flags & MODE_HYDRATE ? [oldDom] : NULL,\n\t\t\tcommitQueue,\n\t\t\toldDom == NULL ? getDomSibling(oldVNode) : oldDom,\n\t\t\t!!(oldVNode._flags & MODE_HYDRATE),\n\t\t\trefQueue\n\t\t);\n\n\t\tnewVNode._original = oldVNode._original;\n\t\tnewVNode._parent._children[newVNode._index] = newVNode;\n\t\tcommitRoot(commitQueue, newVNode, refQueue);\n\n\t\tif (newVNode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(newVNode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != NULL && vnode._component != NULL) {\n\t\tvnode._dom = vnode._component.base = NULL;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != NULL && child._dom != NULL) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/**\n * @param {import('./internal').Component} a\n * @param {import('./internal').Component} b\n */\nconst depthSort = (a, b) => a._vnode._depth - b._vnode._depth;\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet c,\n\t\tl = 1;\n\n\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t// process() calls from getting scheduled while `queue` is still being consumed.\n\twhile (rerenderQueue.length) {\n\t\t// Keep the rerender queue sorted by (depth, insertion order). The queue\n\t\t// will initially be sorted on the first iteration only if it has more than 1 item.\n\t\t//\n\t\t// New items can be added to the queue e.g. when rerendering a provider, so we want to\n\t\t// keep the order from top to bottom with those new items so we can handle them in a\n\t\t// single pass\n\t\tif (rerenderQueue.length > l) {\n\t\t\trerenderQueue.sort(depthSort);\n\t\t}\n\n\t\tc = rerenderQueue.shift();\n\t\tl = rerenderQueue.length;\n\n\t\tif (c._dirty) {\n\t\t\trenderComponent(c);\n\t\t}\n\t}\n\tprocess._rerenderCount = 0;\n}\n\nprocess._rerenderCount = 0;\n", "import { IS_NON_DIMENSIONAL, NULL, SVG_NAMESPACE } from '../constants';\nimport options from '../options';\n\nfunction setStyle(style, key, value) {\n\tif (key[0] == '-') {\n\t\tstyle.setProperty(key, value == NULL ? '' : value);\n\t} else if (value == NULL) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\nconst CAPTURE_REGEX = /(PointerCapture)$|Capture$/i;\n\n// A logical clock to solve issues like https://github.com/preactjs/preact/issues/3927.\n// When the DOM performs an event it leaves micro-ticks in between bubbling up which means that\n// an event can trigger on a newly reated DOM-node while the event bubbles up.\n//\n// Originally inspired by Vue\n// (https://github.com/vuejs/core/blob/caeb8a68811a1b0f79/packages/runtime-dom/src/modules/events.ts#L90-L101),\n// but modified to use a logical clock instead of Date.now() in case event handlers get attached\n// and events get dispatched during the same millisecond.\n//\n// The clock is incremented after each new event dispatch. This allows 1 000 000 new events\n// per second for over 280 years before the value reaches Number.MAX_SAFE_INTEGER (2**53 - 1).\nlet eventClock = 0;\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {string} namespace Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, namespace) {\n\tlet useCapture;\n\n\to: if (name == 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] == 'o' && name[1] == 'n') {\n\t\tuseCapture = name != (name = name.replace(CAPTURE_REGEX, '$1'));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (\n\t\t\tname.toLowerCase() in dom ||\n\t\t\tname == 'onFocusOut' ||\n\t\t\tname == 'onFocusIn'\n\t\t)\n\t\t\tname = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tvalue._attached = eventClock;\n\t\t\t\tdom.addEventListener(\n\t\t\t\t\tname,\n\t\t\t\t\tuseCapture ? eventProxyCapture : eventProxy,\n\t\t\t\t\tuseCapture\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tvalue._attached = oldValue._attached;\n\t\t\t}\n\t\t} else {\n\t\t\tdom.removeEventListener(\n\t\t\t\tname,\n\t\t\t\tuseCapture ? eventProxyCapture : eventProxy,\n\t\t\t\tuseCapture\n\t\t\t);\n\t\t}\n\t} else {\n\t\tif (namespace == SVG_NAMESPACE) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink(H|:h)/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname != 'width' &&\n\t\t\tname != 'height' &&\n\t\t\tname != 'href' &&\n\t\t\tname != 'list' &&\n\t\t\tname != 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname != 'tabIndex' &&\n\t\t\tname != 'download' &&\n\t\t\tname != 'rowSpan' &&\n\t\t\tname != 'colSpan' &&\n\t\t\tname != 'role' &&\n\t\t\tname != 'popover' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == NULL ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// aria- and data- attributes have no boolean representation.\n\t\t// A `false` value is different from the attribute not being\n\t\t// present, so we can't remove it. For non-boolean aria\n\t\t// attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost too many bytes. On top of\n\t\t// that other frameworks generally stringify `false`.\n\n\t\tif (typeof value == 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (value != NULL && (value !== false || name[4] == '-')) {\n\t\t\tdom.setAttribute(name, name == 'popover' && value == true ? '' : value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Create an event proxy function.\n * @param {boolean} useCapture Is the event handler for the capture phase.\n * @private\n */\nfunction createEventProxy(useCapture) {\n\t/**\n\t * Proxy an event to hooked event handlers\n\t * @param {import('../internal').PreactEvent} e The event object from the browser\n\t * @private\n\t */\n\treturn function (e) {\n\t\tif (this._listeners) {\n\t\t\tconst eventHandler = this._listeners[e.type + useCapture];\n\t\t\tif (e._dispatched == NULL) {\n\t\t\t\te._dispatched = eventClock++;\n\n\t\t\t\t// When `e._dispatched` is smaller than the time when the targeted event\n\t\t\t\t// handler was attached we know we have bubbled up to an element that was added\n\t\t\t\t// during patching the DOM.\n\t\t\t} else if (e._dispatched < eventHandler._attached) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn eventHandler(options.event ? options.event(e) : e);\n\t\t}\n\t};\n}\n\nconst eventProxy = createEventProxy(false);\nconst eventProxyCapture = createEventProxy(true);\n", "import { enqueueRender } from './component';\nimport { NULL } from './constants';\n\nexport let i = 0;\n\nexport function createContext(defaultValue) {\n\tfunction Context(props) {\n\t\tif (!this.getChildContext) {\n\t\t\t/** @type {Set<import('./internal').Component> | null} */\n\t\t\tlet subs = new Set();\n\t\t\tlet ctx = {};\n\t\t\tctx[Context._id] = this;\n\n\t\t\tthis.getChildContext = () => ctx;\n\n\t\t\tthis.componentWillUnmount = () => {\n\t\t\t\tsubs = NULL;\n\t\t\t};\n\n\t\t\tthis.shouldComponentUpdate = function (_props) {\n\t\t\t\t// @ts-expect-error even\n\t\t\t\tif (this.props.value !== _props.value) {\n\t\t\t\t\tsubs.forEach(c => {\n\t\t\t\t\t\tc._force = true;\n\t\t\t\t\t\tenqueueRender(c);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.sub = c => {\n\t\t\t\tsubs.add(c);\n\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\tif (subs) {\n\t\t\t\t\t\tsubs.delete(c);\n\t\t\t\t\t}\n\t\t\t\t\tif (old) old.call(c);\n\t\t\t\t};\n\t\t\t};\n\t\t}\n\n\t\treturn props.children;\n\t}\n\n\tContext._id = '__cC' + i++;\n\tContext._defaultValue = defaultValue;\n\n\t/** @type {import('./internal').FunctionComponent} */\n\tContext.Consumer = (props, contextValue) => {\n\t\treturn props.children(contextValue);\n\t};\n\n\t// we could also get rid of _contextRef entirely\n\tContext.Provider =\n\t\tContext._contextRef =\n\t\tContext.Consumer.contextType =\n\t\t\tContext;\n\n\treturn Context;\n}\n", "import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport {\n\tEMPTY_OBJ,\n\tEMPTY_ARR,\n\tINSERT_VNODE,\n\tMATCHED,\n\tUNDEFINED,\n\tNULL\n} from '../constants';\nimport { isArray } from '../util';\nimport { getDomSibling } from '../component';\n\n/**\n * @typedef {import('../internal').ComponentChildren} ComponentChildren\n * @typedef {import('../internal').Component} Component\n * @typedef {import('../internal').PreactElement} PreactElement\n * @typedef {import('../internal').VNode} VNode\n */\n\n/**\n * Diff the children of a virtual node\n * @param {PreactElement} parentDom The DOM element whose children are being\n * diffed\n * @param {ComponentChildren[]} renderResult\n * @param {VNode} newParentVNode The new virtual node whose children should be\n * diff'ed against oldParentVNode\n * @param {VNode} oldParentVNode The old virtual node whose children should be\n * diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by\n * getChildContext\n * @param {string} namespace Current namespace of the DOM node (HTML, SVG, or MathML)\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {PreactElement} oldDom The current attached DOM element any new dom\n * elements should be placed around. Likely `null` on first render (except when\n * hydrating). Can be a sibling DOM element when diffing Fragments that have\n * siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tnamespace,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating,\n\trefQueue\n) {\n\tlet i,\n\t\t/** @type {VNode} */\n\t\toldVNode,\n\t\t/** @type {VNode} */\n\t\tchildVNode,\n\t\t/** @type {PreactElement} */\n\t\tnewDom,\n\t\t/** @type {PreactElement} */\n\t\tfirstChildDom;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\t/** @type {VNode[]} */\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet newChildrenLength = renderResult.length;\n\n\toldDom = constructNewChildrenArray(\n\t\tnewParentVNode,\n\t\trenderResult,\n\t\toldChildren,\n\t\toldDom,\n\t\tnewChildrenLength\n\t);\n\n\tfor (i = 0; i < newChildrenLength; i++) {\n\t\tchildVNode = newParentVNode._children[i];\n\t\tif (childVNode == NULL) continue;\n\n\t\t// At this point, constructNewChildrenArray has assigned _index to be the\n\t\t// matchingIndex for this VNode's oldVNode (or -1 if there is no oldVNode).\n\t\tif (childVNode._index === -1) {\n\t\t\toldVNode = EMPTY_OBJ;\n\t\t} else {\n\t\t\toldVNode = oldChildren[childVNode._index] || EMPTY_OBJ;\n\t\t}\n\n\t\t// Update childVNode._index to its final index\n\t\tchildVNode._index = i;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tlet result = diff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tnamespace,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating,\n\t\t\trefQueue\n\t\t);\n\n\t\t// Adjust DOM nodes\n\t\tnewDom = childVNode._dom;\n\t\tif (childVNode.ref && oldVNode.ref != childVNode.ref) {\n\t\t\tif (oldVNode.ref) {\n\t\t\t\tapplyRef(oldVNode.ref, NULL, childVNode);\n\t\t\t}\n\t\t\trefQueue.push(\n\t\t\t\tchildVNode.ref,\n\t\t\t\tchildVNode._component || newDom,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t}\n\n\t\tif (firstChildDom == NULL && newDom != NULL) {\n\t\t\tfirstChildDom = newDom;\n\t\t}\n\n\t\tif (\n\t\t\tchildVNode._flags & INSERT_VNODE ||\n\t\t\toldVNode._children === childVNode._children\n\t\t) {\n\t\t\toldDom = insert(childVNode, oldDom, parentDom);\n\t\t} else if (typeof childVNode.type == 'function' && result !== UNDEFINED) {\n\t\t\toldDom = result;\n\t\t} else if (newDom) {\n\t\t\toldDom = newDom.nextSibling;\n\t\t}\n\n\t\t// Unset diffing flags\n\t\tchildVNode._flags &= ~(INSERT_VNODE | MATCHED);\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\treturn oldDom;\n}\n\n/**\n * @param {VNode} newParentVNode\n * @param {ComponentChildren[]} renderResult\n * @param {VNode[]} oldChildren\n */\nfunction constructNewChildrenArray(\n\tnewParentVNode,\n\trenderResult,\n\toldChildren,\n\toldDom,\n\tnewChildrenLength\n) {\n\t/** @type {number} */\n\tlet i;\n\t/** @type {VNode} */\n\tlet childVNode;\n\t/** @type {VNode} */\n\tlet oldVNode;\n\n\tlet oldChildrenLength = oldChildren.length,\n\t\tremainingOldChildren = oldChildrenLength;\n\n\tlet skew = 0;\n\n\tnewParentVNode._children = new Array(newChildrenLength);\n\tfor (i = 0; i < newChildrenLength; i++) {\n\t\t// @ts-expect-error We are reusing the childVNode variable to hold both the\n\t\t// pre and post normalized childVNode\n\t\tchildVNode = renderResult[i];\n\n\t\tif (\n\t\t\tchildVNode == NULL ||\n\t\t\ttypeof childVNode == 'boolean' ||\n\t\t\ttypeof childVNode == 'function'\n\t\t) {\n\t\t\tnewParentVNode._children[i] = NULL;\n\t\t\tcontinue;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint' ||\n\t\t\tchildVNode.constructor == String\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tNULL,\n\t\t\t\tchildVNode,\n\t\t\t\tNULL,\n\t\t\t\tNULL,\n\t\t\t\tNULL\n\t\t\t);\n\t\t} else if (isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tNULL,\n\t\t\t\tNULL,\n\t\t\t\tNULL\n\t\t\t);\n\t\t} else if (childVNode.constructor === UNDEFINED && childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tchildVNode.ref ? childVNode.ref : NULL,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\tconst skewedIndex = i + skew;\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Temporarily store the matchingIndex on the _index property so we can pull\n\t\t// out the oldVNode in diffChildren. We'll override this to the VNode's\n\t\t// final index after using this property to get the oldVNode\n\t\tconst matchingIndex = (childVNode._index = findMatchingIndex(\n\t\t\tchildVNode,\n\t\t\toldChildren,\n\t\t\tskewedIndex,\n\t\t\tremainingOldChildren\n\t\t));\n\n\t\toldVNode = NULL;\n\t\tif (matchingIndex !== -1) {\n\t\t\toldVNode = oldChildren[matchingIndex];\n\t\t\tremainingOldChildren--;\n\t\t\tif (oldVNode) {\n\t\t\t\toldVNode._flags |= MATCHED;\n\t\t\t}\n\t\t}\n\n\t\t// Here, we define isMounting for the purposes of the skew diffing\n\t\t// algorithm. Nodes that are unsuspending are considered mounting and we detect\n\t\t// this by checking if oldVNode._original === null\n\t\tconst isMounting = oldVNode == NULL || oldVNode._original === NULL;\n\n\t\tif (isMounting) {\n\t\t\tif (matchingIndex == -1) {\n\t\t\t\t// When the array of children is growing we need to decrease the skew\n\t\t\t\t// as we are adding a new element to the array.\n\t\t\t\t// Example:\n\t\t\t\t// [1, 2, 3] --> [0, 1, 2, 3]\n\t\t\t\t// oldChildren   newChildren\n\t\t\t\t//\n\t\t\t\t// The new element is at index 0, so our skew is 0,\n\t\t\t\t// we need to decrease the skew as we are adding a new element.\n\t\t\t\t// The decrease will cause us to compare the element at position 1\n\t\t\t\t// with value 1 with the element at position 0 with value 0.\n\t\t\t\t//\n\t\t\t\t// A linear concept is applied when the array is shrinking,\n\t\t\t\t// if the length is unchanged we can assume that no skew\n\t\t\t\t// changes are needed.\n\t\t\t\tif (newChildrenLength > oldChildrenLength) {\n\t\t\t\t\tskew--;\n\t\t\t\t} else if (newChildrenLength < oldChildrenLength) {\n\t\t\t\t\tskew++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we are mounting a DOM VNode, mark it for insertion\n\t\t\tif (typeof childVNode.type != 'function') {\n\t\t\t\tchildVNode._flags |= INSERT_VNODE;\n\t\t\t}\n\t\t} else if (matchingIndex != skewedIndex) {\n\t\t\t// When we move elements around i.e. [0, 1, 2] --> [1, 0, 2]\n\t\t\t// --> we diff 1, we find it at position 1 while our skewed index is 0 and our skew is 0\n\t\t\t//     we set the skew to 1 as we found an offset.\n\t\t\t// --> we diff 0, we find it at position 0 while our skewed index is at 2 and our skew is 1\n\t\t\t//     this makes us increase the skew again.\n\t\t\t// --> we diff 2, we find it at position 2 while our skewed index is at 4 and our skew is 2\n\t\t\t//\n\t\t\t// this becomes an optimization question where currently we see a 1 element offset as an insertion\n\t\t\t// or deletion i.e. we optimize for [0, 1, 2] --> [9, 0, 1, 2]\n\t\t\t// while a more than 1 offset we see as a swap.\n\t\t\t// We could probably build heuristics for having an optimized course of action here as well, but\n\t\t\t// might go at the cost of some bytes.\n\t\t\t//\n\t\t\t// If we wanted to optimize for i.e. only swaps we'd just do the last two code-branches and have\n\t\t\t// only the first item be a re-scouting and all the others fall in their skewed counter-part.\n\t\t\t// We could also further optimize for swaps\n\t\t\tif (matchingIndex == skewedIndex - 1) {\n\t\t\t\tskew--;\n\t\t\t} else if (matchingIndex == skewedIndex + 1) {\n\t\t\t\tskew++;\n\t\t\t} else {\n\t\t\t\tif (matchingIndex > skewedIndex) {\n\t\t\t\t\tskew--;\n\t\t\t\t} else {\n\t\t\t\t\tskew++;\n\t\t\t\t}\n\n\t\t\t\t// Move this VNode's DOM if the original index (matchingIndex) doesn't\n\t\t\t\t// match the new skew index (i + new skew)\n\t\t\t\t// In the former two branches we know that it matches after skewing\n\t\t\t\tchildVNode._flags |= INSERT_VNODE;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove remaining oldChildren if there are any. Loop forwards so that as we\n\t// unmount DOM from the beginning of the oldChildren, we can adjust oldDom to\n\t// point to the next child, which needs to be the first DOM node that won't be\n\t// unmounted.\n\tif (remainingOldChildren) {\n\t\tfor (i = 0; i < oldChildrenLength; i++) {\n\t\t\toldVNode = oldChildren[i];\n\t\t\tif (oldVNode != NULL && (oldVNode._flags & MATCHED) == 0) {\n\t\t\t\tif (oldVNode._dom == oldDom) {\n\t\t\t\t\toldDom = getDomSibling(oldVNode);\n\t\t\t\t}\n\n\t\t\t\tunmount(oldVNode, oldVNode);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * @param {VNode} parentVNode\n * @param {PreactElement} oldDom\n * @param {PreactElement} parentDom\n * @returns {PreactElement}\n */\nfunction insert(parentVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\n\tif (typeof parentVNode.type == 'function') {\n\t\tlet children = parentVNode._children;\n\t\tfor (let i = 0; children && i < children.length; i++) {\n\t\t\tif (children[i]) {\n\t\t\t\t// If we enter this code path on sCU bailout, where we copy\n\t\t\t\t// oldVNode._children to newVNode._children, we need to update the old\n\t\t\t\t// children's _parent pointer to point to the newVNode (parentVNode\n\t\t\t\t// here).\n\t\t\t\tchildren[i]._parent = parentVNode;\n\t\t\t\toldDom = insert(children[i], oldDom, parentDom);\n\t\t\t}\n\t\t}\n\n\t\treturn oldDom;\n\t} else if (parentVNode._dom != oldDom) {\n\t\tif (oldDom && parentVNode.type && !parentDom.contains(oldDom)) {\n\t\t\toldDom = getDomSibling(parentVNode);\n\t\t}\n\t\tparentDom.insertBefore(parentVNode._dom, oldDom || NULL);\n\t\toldDom = parentVNode._dom;\n\t}\n\n\tdo {\n\t\toldDom = oldDom && oldDom.nextSibling;\n\t} while (oldDom != NULL && oldDom.nodeType == 8);\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {ComponentChildren} children The unflattened children of a virtual\n * node\n * @returns {VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == NULL || typeof children == 'boolean') {\n\t} else if (isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\n/**\n * @param {VNode} childVNode\n * @param {VNode[]} oldChildren\n * @param {number} skewedIndex\n * @param {number} remainingOldChildren\n * @returns {number}\n */\nfunction findMatchingIndex(\n\tchildVNode,\n\toldChildren,\n\tskewedIndex,\n\tremainingOldChildren\n) {\n\tconst key = childVNode.key;\n\tconst type = childVNode.type;\n\tlet oldVNode = oldChildren[skewedIndex];\n\n\t// We only need to perform a search if there are more children\n\t// (remainingOldChildren) to search. However, if the oldVNode we just looked\n\t// at skewedIndex was not already used in this diff, then there must be at\n\t// least 1 other (so greater than 1) remainingOldChildren to attempt to match\n\t// against. So the following condition checks that ensuring\n\t// remainingOldChildren > 1 if the oldVNode is not already used/matched. Else\n\t// if the oldVNode was null or matched, then there could needs to be at least\n\t// 1 (aka `remainingOldChildren > 0`) children to find and compare against.\n\t//\n\t// If there is an unkeyed functional VNode, that isn't a built-in like our Fragment,\n\t// we should not search as we risk re-using state of an unrelated VNode. (reverted for now)\n\tlet shouldSearch =\n\t\t// (typeof type != 'function' || type === Fragment || key) &&\n\t\tremainingOldChildren >\n\t\t(oldVNode != NULL && (oldVNode._flags & MATCHED) == 0 ? 1 : 0);\n\n\tif (\n\t\t(oldVNode === NULL && childVNode.key == null) ||\n\t\t(oldVNode &&\n\t\t\tkey == oldVNode.key &&\n\t\t\ttype === oldVNode.type &&\n\t\t\t(oldVNode._flags & MATCHED) == 0)\n\t) {\n\t\treturn skewedIndex;\n\t} else if (shouldSearch) {\n\t\tlet x = skewedIndex - 1;\n\t\tlet y = skewedIndex + 1;\n\t\twhile (x >= 0 || y < oldChildren.length) {\n\t\t\tif (x >= 0) {\n\t\t\t\toldVNode = oldChildren[x];\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\t(oldVNode._flags & MATCHED) == 0 &&\n\t\t\t\t\tkey == oldVNode.key &&\n\t\t\t\t\ttype === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\treturn x;\n\t\t\t\t}\n\t\t\t\tx--;\n\t\t\t}\n\n\t\t\tif (y < oldChildren.length) {\n\t\t\t\toldVNode = oldChildren[y];\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\t(oldVNode._flags & MATCHED) == 0 &&\n\t\t\t\t\tkey == oldVNode.key &&\n\t\t\t\t\ttype === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\treturn y;\n\t\t\t\t}\n\t\t\t\ty++;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn -1;\n}\n", "import {\n\tEMPTY_OBJ,\n\tMATH_NAMESPACE,\n\tMODE_HYDRATE,\n\tMODE_SUSPENDED,\n\tNULL,\n\tRESET_MODE,\n\tSVG_NAMESPACE,\n\tUNDEFINED,\n\tXHTML_NAMESPACE\n} from '../constants';\nimport { BaseComponent, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { setProperty } from './props';\nimport { assign, isArray, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * @typedef {import('../internal').ComponentChildren} ComponentChildren\n * @typedef {import('../internal').Component} Component\n * @typedef {import('../internal').PreactElement} PreactElement\n * @typedef {import('../internal').VNode} VNode\n */\n\n/**\n * @template {any} T\n * @typedef {import('../internal').Ref<T>} Ref<T>\n */\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {PreactElement} parentDom The parent of the DOM element\n * @param {VNode} newVNode The new virtual node\n * @param {VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by\n * getChildContext\n * @param {string} namespace Current namespace of the DOM node (HTML, SVG, or MathML)\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {PreactElement} oldDom The current attached DOM element any new dom\n * elements should be placed around. Likely `null` on first render (except when\n * hydrating). Can be a sibling DOM element when diffing Fragments that have\n * siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tnamespace,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating,\n\trefQueue\n) {\n\t/** @type {any} */\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== UNDEFINED) return NULL;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._flags & MODE_SUSPENDED) {\n\t\tisHydrating = !!(oldVNode._flags & MODE_HYDRATE);\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\touter: if (typeof newType == 'function') {\n\t\ttry {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\t\t\tconst isClassComponent =\n\t\t\t\t'prototype' in newType && newType.prototype.render;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif (isClassComponent) {\n\t\t\t\t\t// @ts-expect-error The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-expect-error Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new BaseComponent(\n\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (isClassComponent && c._nextState == NULL) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\n\t\t\tif (isClassComponent && newType.getDerivedStateFromProps != NULL) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\t\t\tc._vnode = newVNode;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tisClassComponent &&\n\t\t\t\t\tnewType.getDerivedStateFromProps == NULL &&\n\t\t\t\t\tc.componentWillMount != NULL\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (isClassComponent && c.componentDidMount != NULL) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tisClassComponent &&\n\t\t\t\t\tnewType.getDerivedStateFromProps == NULL &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != NULL\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t!c._force &&\n\t\t\t\t\t((c.shouldComponentUpdate != NULL &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\t\tnewVNode._original == oldVNode._original)\n\t\t\t\t) {\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original != oldVNode._original) {\n\t\t\t\t\t\t// When we are dealing with a bail because of sCU we have to update\n\t\t\t\t\t\t// the props, state and dirty-state.\n\t\t\t\t\t\t// when we are dealing with strict-equality we don't as the child could still\n\t\t\t\t\t\t// be dirtied see #3883\n\t\t\t\t\t\tc.props = newProps;\n\t\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t\tc._dirty = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.some(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\n\t\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t\t}\n\t\t\t\t\tc._stateCallbacks = [];\n\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != NULL) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (isClassComponent && c.componentDidUpdate != NULL) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc._parentDom = parentDom;\n\t\t\tc._force = false;\n\n\t\t\tlet renderHook = options._render,\n\t\t\t\tcount = 0;\n\t\t\tif (isClassComponent) {\n\t\t\t\tc.state = c._nextState;\n\t\t\t\tc._dirty = false;\n\n\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t}\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t} else {\n\t\t\t\tdo {\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\t\t// Handle setState called in render, see #2553\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t} while (c._dirty && ++count < 25);\n\t\t\t}\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != NULL) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (isClassComponent && !isNew && c.getSnapshotBeforeUpdate != NULL) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != NULL && tmp.type === Fragment && tmp.key == NULL;\n\t\t\tlet renderResult = tmp;\n\n\t\t\tif (isTopLevelFragment) {\n\t\t\t\trenderResult = cloneNode(tmp.props.children);\n\t\t\t}\n\n\t\t\toldDom = diffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tisArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tnamespace,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating,\n\t\t\t\trefQueue\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._flags &= RESET_MODE;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = NULL;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tnewVNode._original = NULL;\n\t\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\t\tif (isHydrating || excessDomChildren != NULL) {\n\t\t\t\tif (e.then) {\n\t\t\t\t\tnewVNode._flags |= isHydrating\n\t\t\t\t\t\t? MODE_HYDRATE | MODE_SUSPENDED\n\t\t\t\t\t\t: MODE_SUSPENDED;\n\n\t\t\t\t\twhile (oldDom && oldDom.nodeType == 8 && oldDom.nextSibling) {\n\t\t\t\t\t\toldDom = oldDom.nextSibling;\n\t\t\t\t\t}\n\n\t\t\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = NULL;\n\t\t\t\t\tnewVNode._dom = oldDom;\n\t\t\t\t} else {\n\t\t\t\t\tfor (let i = excessDomChildren.length; i--; ) {\n\t\t\t\t\t\tremoveNode(excessDomChildren[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t}\n\t\t\toptions._catchError(e, newVNode, oldVNode);\n\t\t}\n\t} else if (\n\t\texcessDomChildren == NULL &&\n\t\tnewVNode._original == oldVNode._original\n\t) {\n\t\tnewVNode._children = oldVNode._children;\n\t\tnewVNode._dom = oldVNode._dom;\n\t} else {\n\t\toldDom = newVNode._dom = diffElementNodes(\n\t\t\toldVNode._dom,\n\t\t\tnewVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tnamespace,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\tisHydrating,\n\t\t\trefQueue\n\t\t);\n\t}\n\n\tif ((tmp = options.diffed)) tmp(newVNode);\n\n\treturn newVNode._flags & MODE_SUSPENDED ? undefined : oldDom;\n}\n\n/**\n * @param {Array<Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {VNode} root\n */\nexport function commitRoot(commitQueue, root, refQueue) {\n\tfor (let i = 0; i < refQueue.length; i++) {\n\t\tapplyRef(refQueue[i], refQueue[++i], refQueue[++i]);\n\t}\n\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-expect-error Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-expect-error See above comment on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\nfunction cloneNode(node) {\n\tif (typeof node !== 'object' || node == NULL) {\n\t\treturn node;\n\t}\n\n\tif (isArray(node)) {\n\t\treturn node.map(cloneNode);\n\t}\n\n\treturn assign({}, node);\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {PreactElement} dom The DOM element representing the virtual nodes\n * being diffed\n * @param {VNode} newVNode The new virtual node\n * @param {VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {string} namespace Current namespace of the DOM node (HTML, SVG, or MathML)\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n * @returns {PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tnamespace,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating,\n\trefQueue\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = /** @type {string} */ (newVNode.type);\n\t/** @type {any} */\n\tlet i;\n\t/** @type {{ __html?: string }} */\n\tlet newHtml;\n\t/** @type {{ __html?: string }} */\n\tlet oldHtml;\n\t/** @type {ComponentChildren} */\n\tlet newChildren;\n\tlet value;\n\tlet inputValue;\n\tlet checked;\n\n\t// Tracks entering and exiting namespaces when descending through the tree.\n\tif (nodeType == 'svg') namespace = SVG_NAMESPACE;\n\telse if (nodeType == 'math') namespace = MATH_NAMESPACE;\n\telse if (!namespace) namespace = XHTML_NAMESPACE;\n\n\tif (excessDomChildren != NULL) {\n\t\tfor (i = 0; i < excessDomChildren.length; i++) {\n\t\t\tvalue = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tvalue &&\n\t\t\t\t'setAttribute' in value == !!nodeType &&\n\t\t\t\t(nodeType ? value.localName == nodeType : value.nodeType == 3)\n\t\t\t) {\n\t\t\t\tdom = value;\n\t\t\t\texcessDomChildren[i] = NULL;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == NULL) {\n\t\tif (nodeType == NULL) {\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tdom = document.createElementNS(\n\t\t\tnamespace,\n\t\t\tnodeType,\n\t\t\tnewProps.is && newProps\n\t\t);\n\n\t\t// we are creating a new node, so we can assume this is a new subtree (in\n\t\t// case we are hydrating), this deopts the hydrate\n\t\tif (isHydrating) {\n\t\t\tif (options._hydrationMismatch)\n\t\t\t\toptions._hydrationMismatch(newVNode, excessDomChildren);\n\t\t\tisHydrating = false;\n\t\t}\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = NULL;\n\t}\n\n\tif (nodeType === NULL) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\t// If we are in a situation where we are not hydrating but are using\n\t\t// existing DOM (e.g. replaceNode) we should read the existing DOM\n\t\t// attributes to diff them\n\t\tif (!isHydrating && excessDomChildren != NULL) {\n\t\t\toldProps = {};\n\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\tvalue = dom.attributes[i];\n\t\t\t\toldProps[value.name] = value.value;\n\t\t\t}\n\t\t}\n\n\t\tfor (i in oldProps) {\n\t\t\tvalue = oldProps[i];\n\t\t\tif (i == 'children') {\n\t\t\t} else if (i == 'dangerouslySetInnerHTML') {\n\t\t\t\toldHtml = value;\n\t\t\t} else if (!(i in newProps)) {\n\t\t\t\tif (\n\t\t\t\t\t(i == 'value' && 'defaultValue' in newProps) ||\n\t\t\t\t\t(i == 'checked' && 'defaultChecked' in newProps)\n\t\t\t\t) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tsetProperty(dom, i, NULL, value, namespace);\n\t\t\t}\n\t\t}\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tfor (i in newProps) {\n\t\t\tvalue = newProps[i];\n\t\t\tif (i == 'children') {\n\t\t\t\tnewChildren = value;\n\t\t\t} else if (i == 'dangerouslySetInnerHTML') {\n\t\t\t\tnewHtml = value;\n\t\t\t} else if (i == 'value') {\n\t\t\t\tinputValue = value;\n\t\t\t} else if (i == 'checked') {\n\t\t\t\tchecked = value;\n\t\t\t} else if (\n\t\t\t\t(!isHydrating || typeof value == 'function') &&\n\t\t\t\toldProps[i] !== value\n\t\t\t) {\n\t\t\t\tsetProperty(dom, i, value, oldProps[i], namespace);\n\t\t\t}\n\t\t}\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\tif (\n\t\t\t\t!isHydrating &&\n\t\t\t\t(!oldHtml ||\n\t\t\t\t\t(newHtml.__html !== oldHtml.__html &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML))\n\t\t\t) {\n\t\t\t\tdom.innerHTML = newHtml.__html;\n\t\t\t}\n\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\tif (oldHtml) dom.innerHTML = '';\n\n\t\t\tdiffChildren(\n\t\t\t\t// @ts-expect-error\n\t\t\t\tnewVNode.type === 'template' ? dom.content : dom,\n\t\t\t\tisArray(newChildren) ? newChildren : [newChildren],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tnodeType == 'foreignObject' ? XHTML_NAMESPACE : namespace,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating,\n\t\t\t\trefQueue\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != NULL) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tremoveNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// As above, don't diff props during hydration\n\t\tif (!isHydrating) {\n\t\t\ti = 'value';\n\t\t\tif (nodeType == 'progress' && inputValue == NULL) {\n\t\t\t\tdom.removeAttribute('value');\n\t\t\t} else if (\n\t\t\t\tinputValue !== UNDEFINED &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(inputValue !== dom[i] ||\n\t\t\t\t\t(nodeType == 'progress' && !inputValue) ||\n\t\t\t\t\t// This is only for IE 11 to fix <select> value not being updated.\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\n\t\t\t\t\t(nodeType == 'option' && inputValue !== oldProps[i]))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, i, inputValue, oldProps[i], namespace);\n\t\t\t}\n\n\t\t\ti = 'checked';\n\t\t\tif (checked !== UNDEFINED && checked !== dom[i]) {\n\t\t\t\tsetProperty(dom, i, checked, oldProps[i], namespace);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {Ref<any> & { _unmount?: unknown }} ref\n * @param {any} value\n * @param {VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') {\n\t\t\tlet hasRefUnmount = typeof ref._unmount == 'function';\n\t\t\tif (hasRefUnmount) {\n\t\t\t\t// @ts-ignore TS doesn't like moving narrowing checks into variables\n\t\t\t\tref._unmount();\n\t\t\t}\n\n\t\t\tif (!hasRefUnmount || value != NULL) {\n\t\t\t\t// Store the cleanup function on the function\n\t\t\t\t// instance object itself to avoid shape\n\t\t\t\t// transitioning vnode\n\t\t\t\tref._unmount = ref(value);\n\t\t\t}\n\t\t} else ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {VNode} vnode The virtual node to unmount\n * @param {VNode} parentVNode The parent of the VNode that initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) {\n\t\t\tapplyRef(r, NULL, parentVNode);\n\t\t}\n\t}\n\n\tif ((r = vnode._component) != NULL) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = NULL;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(\n\t\t\t\t\tr[i],\n\t\t\t\t\tparentVNode,\n\t\t\t\t\tskipRemove || typeof vnode.type != 'function'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove) {\n\t\tremoveNode(vnode._dom);\n\t}\n\n\tvnode._component = vnode._parent = vnode._dom = UNDEFINED;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n", "import { EMPTY_OBJ, NULL } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\t// https://github.com/preactjs/preact/issues/3794\n\tif (parentDom == document) {\n\t\tparentDom = document.documentElement;\n\t}\n\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode == 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? NULL\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = ((!isHydrating && replaceNode) || parentDom)._children =\n\t\tcreateElement(Fragment, NULL, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [],\n\t\trefQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.namespaceURI,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t\t? NULL\n\t\t\t\t: parentDom.firstChild\n\t\t\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t\t\t: NULL,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t\t? oldVNode._dom\n\t\t\t\t: parentDom.firstChild,\n\t\tisHydrating,\n\t\trefQueue\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode, refQueue);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n", "import { assign, slice } from './util';\nimport { createVNode } from './create-element';\nimport { NULL, UNDEFINED } from './constants';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its\n * children.\n * @param {import('./internal').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./internal').ComponentChildren>} rest Any additional arguments will be used\n * as replacement children.\n * @returns {import('./internal').VNode}\n */\nexport function cloneElement(vnode, props, children) {\n\tlet normalizedProps = assign({}, vnode.props),\n\t\tkey,\n\t\tref,\n\t\ti;\n\n\tlet defaultProps;\n\n\tif (vnode.type && vnode.type.defaultProps) {\n\t\tdefaultProps = vnode.type.defaultProps;\n\t}\n\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse if (props[i] === UNDEFINED && defaultProps !== UNDEFINED) {\n\t\t\tnormalizedProps[i] = defaultProps[i];\n\t\t} else {\n\t\t\tnormalizedProps[i] = props[i];\n\t\t}\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\treturn createVNode(\n\t\tvnode.type,\n\t\tnormalizedProps,\n\t\tkey || vnode.key,\n\t\tref || vnode.ref,\n\t\tNULL\n\t);\n}\n", "import { NULL } from '../constants';\n\n/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw the error that was caught (except\n * for unmounting when this parameter is the highest parent that was being\n * unmounted)\n * @param {import('../internal').VNode} [oldVNode]\n * @param {import('../internal').ErrorInfo} [errorInfo]\n */\nexport function _catchError(error, vnode, oldVNode, errorInfo) {\n\t/** @type {import('../internal').Component} */\n\tlet component,\n\t\t/** @type {import('../internal').ComponentType} */\n\t\tctor,\n\t\t/** @type {boolean} */\n\t\thandled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != NULL) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != NULL) {\n\t\t\t\t\tcomponent.componentDidCatch(error, errorInfo || {});\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n", "const ENCODED_ENTITIES = /[\"&<]/;\n\n/** @param {string} str */\nexport function encodeEntities(str) {\n\t// Skip all work for strings with no entities needing encoding:\n\tif (str.length === 0 || ENCODED_ENTITIES.test(str) === false) return str;\n\n\tlet last = 0,\n\t\ti = 0,\n\t\tout = '',\n\t\tch = '';\n\n\t// Seek forward in str until the next entity char:\n\tfor (; i < str.length; i++) {\n\t\tswitch (str.charCodeAt(i)) {\n\t\t\tcase 34:\n\t\t\t\tch = '&quot;';\n\t\t\t\tbreak;\n\t\t\tcase 38:\n\t\t\t\tch = '&amp;';\n\t\t\t\tbreak;\n\t\t\tcase 60:\n\t\t\t\tch = '&lt;';\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\t\t// Append skipped/buffered characters and the encoded entity:\n\t\tif (i !== last) out += str.slice(last, i);\n\t\tout += ch;\n\t\t// Start the next seek/buffer after the entity's offset:\n\t\tlast = i + 1;\n\t}\n\tif (i !== last) out += str.slice(last, i);\n\treturn out;\n}\n", "/** Normal hydration that attaches to a DOM tree but does not diff it. */\nexport const MODE_HYDRATE = 1 << 5;\n/** Signifies this VNode suspended on the previous render */\nexport const MODE_SUSPENDED = 1 << 7;\n/** Indicates that this node needs to be inserted while patching children */\nexport const INSERT_VNODE = 1 << 2;\n/** Indicates a VNode has been matched with another VNode in the diff */\nexport const MATCHED = 1 << 1;\n\n/** Reset all mode flags */\nexport const RESET_MODE = ~(MODE_HYDRATE | MODE_SUSPENDED);\n\nexport const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\nexport const XHTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\nexport const MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n\nexport const NULL = null;\nexport const UNDEFINED = undefined;\nexport const EMPTY_OBJ = /** @type {any} */ ({});\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL =\n\t/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n", "import { options, Fragment } from 'preact';\nimport { encodeEntities } from './utils';\nimport { IS_NON_DIMENSIONAL } from '../../src/constants';\n\nlet vnodeId = 0;\n\nconst isArray = Array.isArray;\n\n/**\n * @fileoverview\n * This file exports various methods that implement Babel's \"automatic\" JSX runtime API:\n * - jsx(type, props, key)\n * - jsxs(type, props, key)\n * - jsxDEV(type, props, key, __source, __self)\n *\n * The implementation of createVNode here is optimized for performance.\n * Benchmarks: https://esbench.com/bench/5f6b54a0b4632100a7dcd2b3\n */\n\n/**\n * JSX.Element factory used by Babel's {runtime:\"automatic\"} JSX transform\n * @param {VNode['type']} type\n * @param {VNode['props']} props\n * @param {VNode['key']} [key]\n * @param {unknown} [isStaticChildren]\n * @param {unknown} [__source]\n * @param {unknown} [__self]\n */\nfunction createVNode(type, props, key, isStaticChildren, __source, __self) {\n\tif (!props) props = {};\n\t// We'll want to preserve `ref` in props to get rid of the need for\n\t// forwardRef components in the future, but that should happen via\n\t// a separate PR.\n\tlet normalizedProps = props,\n\t\tref,\n\t\ti;\n\n\tif ('ref' in normalizedProps) {\n\t\tnormalizedProps = {};\n\t\tfor (i in props) {\n\t\t\tif (i == 'ref') {\n\t\t\t\tref = props[i];\n\t\t\t} else {\n\t\t\t\tnormalizedProps[i] = props[i];\n\t\t\t}\n\t\t}\n\t}\n\n\t/** @type {VNode & { __source: any; __self: any }} */\n\tconst vnode = {\n\t\ttype,\n\t\tprops: normalizedProps,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t_component: null,\n\t\tconstructor: undefined,\n\t\t_original: --vnodeId,\n\t\t_index: -1,\n\t\t_flags: 0,\n\t\t__source,\n\t\t__self\n\t};\n\n\t// If a Component VNode, check for and apply defaultProps.\n\t// Note: `type` is often a String, and can be `undefined` in development.\n\tif (typeof type === 'function' && (ref = type.defaultProps)) {\n\t\tfor (i in ref)\n\t\t\tif (typeof normalizedProps[i] === 'undefined') {\n\t\t\t\tnormalizedProps[i] = ref[i];\n\t\t\t}\n\t}\n\n\tif (options.vnode) options.vnode(vnode);\n\treturn vnode;\n}\n\n/**\n * Create a template vnode. This function is not expected to be\n * used directly, but rather through a precompile JSX transform\n * @param {string[]} templates\n * @param  {Array<string | null | VNode>} exprs\n * @returns {VNode}\n */\nfunction jsxTemplate(templates, ...exprs) {\n\tconst vnode = createVNode(Fragment, { tpl: templates, exprs });\n\t// Bypass render to string top level Fragment optimization\n\tvnode.key = vnode._vnode;\n\treturn vnode;\n}\n\nconst JS_TO_CSS = {};\nconst CSS_REGEX = /[A-Z]/g;\n\n/**\n * Serialize an HTML attribute to a string. This function is not\n * expected to be used directly, but rather through a precompile\n * JSX transform\n * @param {string} name The attribute name\n * @param {*} value The attribute value\n * @returns {string}\n */\nfunction jsxAttr(name, value) {\n\tif (options.attr) {\n\t\tconst result = options.attr(name, value);\n\t\tif (typeof result === 'string') return result;\n\t}\n\n\tif (name === 'ref' || name === 'key') return '';\n\tif (name === 'style' && typeof value === 'object') {\n\t\tlet str = '';\n\t\tfor (let prop in value) {\n\t\t\tlet val = value[prop];\n\t\t\tif (val != null && val !== '') {\n\t\t\t\tconst name =\n\t\t\t\t\tprop[0] == '-'\n\t\t\t\t\t\t? prop\n\t\t\t\t\t\t: JS_TO_CSS[prop] ||\n\t\t\t\t\t\t\t(JS_TO_CSS[prop] = prop.replace(CSS_REGEX, '-$&').toLowerCase());\n\n\t\t\t\tlet suffix = ';';\n\t\t\t\tif (\n\t\t\t\t\ttypeof val === 'number' &&\n\t\t\t\t\t// Exclude custom-attributes\n\t\t\t\t\t!name.startsWith('--') &&\n\t\t\t\t\t!IS_NON_DIMENSIONAL.test(name)\n\t\t\t\t) {\n\t\t\t\t\tsuffix = 'px;';\n\t\t\t\t}\n\t\t\t\tstr = str + name + ':' + val + suffix;\n\t\t\t}\n\t\t}\n\t\treturn name + '=\"' + str + '\"';\n\t}\n\n\tif (\n\t\tvalue == null ||\n\t\tvalue === false ||\n\t\ttypeof value === 'function' ||\n\t\ttypeof value === 'object'\n\t) {\n\t\treturn '';\n\t} else if (value === true) return name;\n\n\treturn name + '=\"' + encodeEntities(value) + '\"';\n}\n\n/**\n * Escape a dynamic child passed to `jsxTemplate`. This function\n * is not expected to be used directly, but rather through a\n * precompile JSX transform\n * @param {*} value\n * @returns {string | null | VNode | Array<string | null | VNode>}\n */\nfunction jsxEscape(value) {\n\tif (\n\t\tvalue == null ||\n\t\ttypeof value === 'boolean' ||\n\t\ttypeof value === 'function'\n\t) {\n\t\treturn null;\n\t}\n\n\tif (typeof value === 'object') {\n\t\t// Check for VNode\n\t\tif (value.constructor === undefined) return value;\n\n\t\tif (isArray(value)) {\n\t\t\tfor (let i = 0; i < value.length; i++) {\n\t\t\t\tvalue[i] = jsxEscape(value[i]);\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\t}\n\n\treturn encodeEntities('' + value);\n}\n\nexport {\n\tcreateVNode as jsx,\n\tcreateVNode as jsxs,\n\tcreateVNode as jsxDEV,\n\tFragment,\n\t// precompiled JSX transform\n\tjsxTemplate,\n\tjsxAttr,\n\tjsxEscape\n};\n", "import { options as _options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {import('./internal').Component} */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\n// Cast to use internal Options type\nconst options = /** @type {import('./internal').Options} */ (_options);\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\nlet oldRoot = options._root;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._root = (vnode, parentDom) => {\n\tif (vnode && parentDom._children && parentDom._children._mask) {\n\t\tvnode._mask = parentDom._children._mask;\n\t}\n\n\tif (oldRoot) oldRoot(vnode, parentDom);\n};\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\tif (previousComponent === currentComponent) {\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentComponent._renderCallbacks = [];\n\t\t\thooks._list.forEach(hookItem => {\n\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t}\n\t\t\t\thookItem._pendingArgs = hookItem._nextValue = undefined;\n\t\t\t});\n\t\t} else {\n\t\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentIndex = 0;\n\t\t}\n\t}\n\tpreviousComponent = currentComponent;\n};\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tif (c.__hooks._pendingEffects.length) afterPaint(afterPaintEffects.push(c));\n\t\tc.__hooks._list.forEach(hookItem => {\n\t\t\tif (hookItem._pendingArgs) {\n\t\t\t\thookItem._args = hookItem._pendingArgs;\n\t\t\t}\n\t\t\thookItem._pendingArgs = undefined;\n\t\t});\n\t}\n\tpreviousComponent = currentComponent = null;\n};\n\n// TODO: Improve typing of commitQueue parameter\n/** @type {(vnode: import('./internal').VNode, commitQueue: any) => void} */\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tc.__hooks = undefined;\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({});\n\t}\n\n\treturn hooks._list[index];\n}\n\n/**\n * @template {unknown} S\n * @param {import('./index').Dispatch<import('./index').StateUpdater<S>>} [initialState]\n * @returns {[S, (state: S) => void]}\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @template {unknown} S\n * @template {unknown} A\n * @param {import('./index').Reducer<S, A>} reducer\n * @param {import('./index').Dispatch<import('./index').StateUpdater<S>>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ S, (state: S) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst currentValue = hookState._nextValue\n\t\t\t\t\t? hookState._nextValue[0]\n\t\t\t\t\t: hookState._value[0];\n\t\t\t\tconst nextValue = hookState._reducer(currentValue, action);\n\n\t\t\t\tif (currentValue !== nextValue) {\n\t\t\t\t\thookState._nextValue = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\n\t\tif (!currentComponent._hasScuFromHooks) {\n\t\t\tcurrentComponent._hasScuFromHooks = true;\n\t\t\tlet prevScu = currentComponent.shouldComponentUpdate;\n\t\t\tconst prevCWU = currentComponent.componentWillUpdate;\n\n\t\t\t// If we're dealing with a forced update `shouldComponentUpdate` will\n\t\t\t// not be called. But we use that to update the hook values, so we\n\t\t\t// need to call it.\n\t\t\tcurrentComponent.componentWillUpdate = function (p, s, c) {\n\t\t\t\tif (this._force) {\n\t\t\t\t\tlet tmp = prevScu;\n\t\t\t\t\t// Clear to avoid other sCU hooks from being called\n\t\t\t\t\tprevScu = undefined;\n\t\t\t\t\tupdateHookState(p, s, c);\n\t\t\t\t\tprevScu = tmp;\n\t\t\t\t}\n\n\t\t\t\tif (prevCWU) prevCWU.call(this, p, s, c);\n\t\t\t};\n\n\t\t\t// This SCU has the purpose of bailing out after repeated updates\n\t\t\t// to stateful hooks.\n\t\t\t// we store the next value in _nextValue[0] and keep doing that for all\n\t\t\t// state setters, if we have next states and\n\t\t\t// all next states within a component end up being equal to their original state\n\t\t\t// we are safe to bail out for this specific component.\n\t\t\t/**\n\t\t\t *\n\t\t\t * @type {import('./internal').Component[\"shouldComponentUpdate\"]}\n\t\t\t */\n\t\t\t// @ts-ignore - We don't use TS to downtranspile\n\t\t\t// eslint-disable-next-line no-inner-declarations\n\t\t\tfunction updateHookState(p, s, c) {\n\t\t\t\tif (!hookState._component.__hooks) return true;\n\n\t\t\t\t/** @type {(x: import('./internal').HookState) => x is import('./internal').ReducerHookState} */\n\t\t\t\tconst isStateHook = x => !!x._component;\n\t\t\t\tconst stateHooks =\n\t\t\t\t\thookState._component.__hooks._list.filter(isStateHook);\n\n\t\t\t\tconst allHooksEmpty = stateHooks.every(x => !x._nextValue);\n\t\t\t\t// When we have no updated hooks in the component we invoke the previous SCU or\n\t\t\t\t// traverse the VDOM tree further.\n\t\t\t\tif (allHooksEmpty) {\n\t\t\t\t\treturn prevScu ? prevScu.call(this, p, s, c) : true;\n\t\t\t\t}\n\n\t\t\t\t// We check whether we have components with a nextValue set that\n\t\t\t\t// have values that aren't equal to one another this pushes\n\t\t\t\t// us to update further down the tree\n\t\t\t\tlet shouldUpdate = hookState._component.props !== p;\n\t\t\t\tstateHooks.forEach(hookItem => {\n\t\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\t\tconst currentValue = hookItem._value[0];\n\t\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t\t\thookItem._nextValue = undefined;\n\t\t\t\t\t\tif (currentValue !== hookItem._value[0]) shouldUpdate = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn prevScu\n\t\t\t\t\t? prevScu.call(this, p, s, c) || shouldUpdate\n\t\t\t\t\t: shouldUpdate;\n\t\t\t}\n\n\t\t\tcurrentComponent.shouldComponentUpdate = updateHookState;\n\t\t}\n\t}\n\n\treturn hookState._nextValue || hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {unknown[]} args\n * @returns {void}\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {unknown[]} args\n * @returns {void}\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\n/** @type {(initialValue: unknown) => unknown} */\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {unknown[]} args\n * @returns {void}\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') {\n\t\t\t\tconst result = ref(createHandle());\n\t\t\t\treturn () => {\n\t\t\t\t\tref(null);\n\t\t\t\t\tif (result && typeof result == 'function') result();\n\t\t\t\t};\n\t\t\t} else if (ref) {\n\t\t\t\tref.current = createHandle();\n\t\t\t\treturn () => (ref.current = null);\n\t\t\t}\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @template {unknown} T\n * @param {() => T} factory\n * @param {unknown[]} args\n * @returns {T}\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState<T>} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._value = factory();\n\t\tstate._args = args;\n\t\tstate._factory = factory;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {unknown[]} args\n * @returns {() => void}\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(\n\t\t\tformatter ? formatter(value) : /** @type {any}*/ (value)\n\t\t);\n\t}\n}\n\n/**\n * @param {(error: unknown, errorInfo: import('preact').ErrorInfo) => void} cb\n * @returns {[unknown, () => void]}\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = (err, errorInfo) => {\n\t\t\tif (state._value) state._value(err, errorInfo);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\n/** @type {() => string} */\nexport function useId() {\n\t/** @type {import('./internal').IdHookState} */\n\tconst state = getHookState(currentIndex++, 11);\n\tif (!state._value) {\n\t\t// Grab either the root node or the nearest async boundary node.\n\t\t/** @type {import('./internal').VNode} */\n\t\tlet root = currentComponent._vnode;\n\t\twhile (root !== null && !root._mask && root._parent !== null) {\n\t\t\troot = root._parent;\n\t\t}\n\n\t\tlet mask = root._mask || (root._mask = [0, 0]);\n\t\tstate._value = 'P' + mask[0] + '-' + mask[1]++;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom || !component.__hooks) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n * @returns {void}\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').HookState} hook\n * @returns {void}\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n * @returns {void}\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {unknown[]} oldArgs\n * @param {unknown[]} newArgs\n * @returns {boolean}\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\n/**\n * @template Arg\n * @param {Arg} arg\n * @param {(arg: Arg) => any} f\n * @returns {any}\n */\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n", "// An named symbol/brand for detecting Signal instances even when they weren't\n// created using the same signals library version.\nconst BRAND_SYMBOL = Symbol.for(\"preact-signals\");\n\n// Flags for Computed and Effect.\nconst RUNNING = 1 << 0;\nconst NOTIFIED = 1 << 1;\nconst OUTDATED = 1 << 2;\nconst DISPOSED = 1 << 3;\nconst HAS_ERROR = 1 << 4;\nconst TRACKING = 1 << 5;\n\n// A linked list node used to track dependencies (sources) and dependents (targets).\n// Also used to remember the source's last version number that the target saw.\ntype Node = {\n\t// A source whose value the target depends on.\n\t_source: Signal;\n\t_prevSource?: Node;\n\t_nextSource?: Node;\n\n\t// A target that depends on the source and should be notified when the source changes.\n\t_target: Computed | Effect;\n\t_prevTarget?: Node;\n\t_nextTarget?: Node;\n\n\t// The version number of the source that target has last seen. We use version numbers\n\t// instead of storing the source value, because source values can take arbitrary amount\n\t// of memory, and computeds could hang on to them forever because they're lazily evaluated.\n\t// Use the special value -1 to mark potentially unused but recyclable nodes.\n\t_version: number;\n\n\t// Used to remember & roll back the source's previous `._node` value when entering &\n\t// exiting a new evaluation context.\n\t_rollbackNode?: Node;\n};\n\nfunction startBatch() {\n\tbatchDepth++;\n}\n\nfunction endBatch() {\n\tif (batchDepth > 1) {\n\t\tbatchDepth--;\n\t\treturn;\n\t}\n\n\tlet error: unknown;\n\tlet hasError = false;\n\n\twhile (batchedEffect !== undefined) {\n\t\tlet effect: Effect | undefined = batchedEffect;\n\t\tbatchedEffect = undefined;\n\n\t\tbatchIteration++;\n\n\t\twhile (effect !== undefined) {\n\t\t\tconst next: Effect | undefined = effect._nextBatchedEffect;\n\t\t\teffect._nextBatchedEffect = undefined;\n\t\t\teffect._flags &= ~NOTIFIED;\n\n\t\t\tif (!(effect._flags & DISPOSED) && needsToRecompute(effect)) {\n\t\t\t\ttry {\n\t\t\t\t\teffect._callback();\n\t\t\t\t} catch (err) {\n\t\t\t\t\tif (!hasError) {\n\t\t\t\t\t\terror = err;\n\t\t\t\t\t\thasError = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\teffect = next;\n\t\t}\n\t}\n\tbatchIteration = 0;\n\tbatchDepth--;\n\n\tif (hasError) {\n\t\tthrow error;\n\t}\n}\n\n/**\n * Combine multiple value updates into one \"commit\" at the end of the provided callback.\n *\n * Batches can be nested and changes are only flushed once the outermost batch callback\n * completes.\n *\n * Accessing a signal that has been modified within a batch will reflect its updated\n * value.\n *\n * @param fn The callback function.\n * @returns The value returned by the callback.\n */\nfunction batch<T>(fn: () => T): T {\n\tif (batchDepth > 0) {\n\t\treturn fn();\n\t}\n\t/*@__INLINE__**/ startBatch();\n\ttry {\n\t\treturn fn();\n\t} finally {\n\t\tendBatch();\n\t}\n}\n\n// Currently evaluated computed or effect.\nlet evalContext: Computed | Effect | undefined = undefined;\n\n/**\n * Run a callback function that can access signal values without\n * subscribing to the signal updates.\n *\n * @param fn The callback function.\n * @returns The value returned by the callback.\n */\nfunction untracked<T>(fn: () => T): T {\n\tconst prevContext = evalContext;\n\tevalContext = undefined;\n\ttry {\n\t\treturn fn();\n\t} finally {\n\t\tevalContext = prevContext;\n\t}\n}\n\n// Effects collected into a batch.\nlet batchedEffect: Effect | undefined = undefined;\nlet batchDepth = 0;\nlet batchIteration = 0;\n\n// A global version number for signals, used for fast-pathing repeated\n// computed.peek()/computed.value calls when nothing has changed globally.\nlet globalVersion = 0;\n\nfunction addDependency(signal: Signal): Node | undefined {\n\tif (evalContext === undefined) {\n\t\treturn undefined;\n\t}\n\n\tlet node = signal._node;\n\tif (node === undefined || node._target !== evalContext) {\n\t\t/**\n\t\t * `signal` is a new dependency. Create a new dependency node, and set it\n\t\t * as the tail of the current context's dependency list. e.g:\n\t\t *\n\t\t * { A <-> B       }\n\t\t *         ↑     ↑\n\t\t *        tail  node (new)\n\t\t *               ↓\n\t\t * { A <-> B <-> C }\n\t\t *               ↑\n\t\t *              tail (evalContext._sources)\n\t\t */\n\t\tnode = {\n\t\t\t_version: 0,\n\t\t\t_source: signal,\n\t\t\t_prevSource: evalContext._sources,\n\t\t\t_nextSource: undefined,\n\t\t\t_target: evalContext,\n\t\t\t_prevTarget: undefined,\n\t\t\t_nextTarget: undefined,\n\t\t\t_rollbackNode: node,\n\t\t};\n\n\t\tif (evalContext._sources !== undefined) {\n\t\t\tevalContext._sources._nextSource = node;\n\t\t}\n\t\tevalContext._sources = node;\n\t\tsignal._node = node;\n\n\t\t// Subscribe to change notifications from this dependency if we're in an effect\n\t\t// OR evaluating a computed signal that in turn has subscribers.\n\t\tif (evalContext._flags & TRACKING) {\n\t\t\tsignal._subscribe(node);\n\t\t}\n\t\treturn node;\n\t} else if (node._version === -1) {\n\t\t// `signal` is an existing dependency from a previous evaluation. Reuse it.\n\t\tnode._version = 0;\n\n\t\t/**\n\t\t * If `node` is not already the current tail of the dependency list (i.e.\n\t\t * there is a next node in the list), then make the `node` the new tail. e.g:\n\t\t *\n\t\t * { A <-> B <-> C <-> D }\n\t\t *         ↑           ↑\n\t\t *        node   ┌─── tail (evalContext._sources)\n\t\t *         └─────│─────┐\n\t\t *               ↓     ↓\n\t\t * { A <-> C <-> D <-> B }\n\t\t *                     ↑\n\t\t *                    tail (evalContext._sources)\n\t\t */\n\t\tif (node._nextSource !== undefined) {\n\t\t\tnode._nextSource._prevSource = node._prevSource;\n\n\t\t\tif (node._prevSource !== undefined) {\n\t\t\t\tnode._prevSource._nextSource = node._nextSource;\n\t\t\t}\n\n\t\t\tnode._prevSource = evalContext._sources;\n\t\t\tnode._nextSource = undefined;\n\n\t\t\tevalContext._sources!._nextSource = node;\n\t\t\tevalContext._sources = node;\n\t\t}\n\n\t\t// We can assume that the currently evaluated effect / computed signal is already\n\t\t// subscribed to change notifications from `signal` if needed.\n\t\treturn node;\n\t}\n\treturn undefined;\n}\n\n/**\n * The base class for plain and computed signals.\n */\n// @ts-ignore: \"Cannot redeclare exported variable 'Signal'.\"\n//\n// A function with the same name is defined later, so we need to ignore TypeScript's\n// warning about a redeclared variable.\n//\n// The class is declared here, but later implemented with ES5-style prototypes.\n// This enables better control of the transpiled output size.\ndeclare class Signal<T = any> {\n\t/** @internal */\n\t_value: unknown;\n\n\t/**\n\t * @internal\n\t * Version numbers should always be >= 0, because the special value -1 is used\n\t * by Nodes to signify potentially unused but recyclable nodes.\n\t */\n\t_version: number;\n\n\t/** @internal */\n\t_node?: Node;\n\n\t/** @internal */\n\t_targets?: Node;\n\n\tconstructor(value?: T, options?: SignalOptions<T>);\n\n\t/** @internal */\n\t_refresh(): boolean;\n\n\t/** @internal */\n\t_subscribe(node: Node): void;\n\n\t/** @internal */\n\t_unsubscribe(node: Node): void;\n\n\t/** @internal */\n\t_watched?(this: Signal<T>): void;\n\n\t/** @internal */\n\t_unwatched?(this: Signal<T>): void;\n\n\tsubscribe(fn: (value: T) => void): () => void;\n\n\tvalueOf(): T;\n\n\ttoString(): string;\n\n\ttoJSON(): T;\n\n\tpeek(): T;\n\n\tbrand: typeof BRAND_SYMBOL;\n\n\tget value(): T;\n\tset value(value: T);\n}\n\nexport interface SignalOptions<T = any> {\n\twatched?: (this: Signal<T>) => void;\n\tunwatched?: (this: Signal<T>) => void;\n}\n\n/** @internal */\n// @ts-ignore: \"Cannot redeclare exported variable 'Signal'.\"\n//\n// A class with the same name has already been declared, so we need to ignore\n// TypeScript's warning about a redeclared variable.\n//\n// The previously declared class is implemented here with ES5-style prototypes.\n// This enables better control of the transpiled output size.\nfunction Signal(this: Signal, value?: unknown, options?: SignalOptions) {\n\tthis._value = value;\n\tthis._version = 0;\n\tthis._node = undefined;\n\tthis._targets = undefined;\n\tthis._watched = options?.watched;\n\tthis._unwatched = options?.unwatched;\n}\n\nSignal.prototype.brand = BRAND_SYMBOL;\n\nSignal.prototype._refresh = function () {\n\treturn true;\n};\n\nSignal.prototype._subscribe = function (node) {\n\tconst targets = this._targets;\n\tif (targets !== node && node._prevTarget === undefined) {\n\t\tnode._nextTarget = targets;\n\t\tthis._targets = node;\n\n\t\tif (targets !== undefined) {\n\t\t\ttargets._prevTarget = node;\n\t\t} else {\n\t\t\tuntracked(() => {\n\t\t\t\tthis._watched?.call(this);\n\t\t\t});\n\t\t}\n\t}\n};\n\nSignal.prototype._unsubscribe = function (node) {\n\t// Only run the unsubscribe step if the signal has any subscribers to begin with.\n\tif (this._targets !== undefined) {\n\t\tconst prev = node._prevTarget;\n\t\tconst next = node._nextTarget;\n\t\tif (prev !== undefined) {\n\t\t\tprev._nextTarget = next;\n\t\t\tnode._prevTarget = undefined;\n\t\t}\n\n\t\tif (next !== undefined) {\n\t\t\tnext._prevTarget = prev;\n\t\t\tnode._nextTarget = undefined;\n\t\t}\n\n\t\tif (node === this._targets) {\n\t\t\tthis._targets = next;\n\t\t\tif (next === undefined) {\n\t\t\t\tuntracked(() => {\n\t\t\t\t\tthis._unwatched?.call(this);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n};\n\nSignal.prototype.subscribe = function (fn) {\n\treturn effect(() => {\n\t\tconst value = this.value;\n\n\t\tconst prevContext = evalContext;\n\t\tevalContext = undefined;\n\t\ttry {\n\t\t\tfn(value);\n\t\t} finally {\n\t\t\tevalContext = prevContext;\n\t\t}\n\t});\n};\n\nSignal.prototype.valueOf = function () {\n\treturn this.value;\n};\n\nSignal.prototype.toString = function () {\n\treturn this.value + \"\";\n};\n\nSignal.prototype.toJSON = function () {\n\treturn this.value;\n};\n\nSignal.prototype.peek = function () {\n\tconst prevContext = evalContext;\n\tevalContext = undefined;\n\ttry {\n\t\treturn this.value;\n\t} finally {\n\t\tevalContext = prevContext;\n\t}\n};\n\nObject.defineProperty(Signal.prototype, \"value\", {\n\tget(this: Signal) {\n\t\tconst node = addDependency(this);\n\t\tif (node !== undefined) {\n\t\t\tnode._version = this._version;\n\t\t}\n\t\treturn this._value;\n\t},\n\tset(this: Signal, value) {\n\t\tif (value !== this._value) {\n\t\t\tif (batchIteration > 100) {\n\t\t\t\tthrow new Error(\"Cycle detected\");\n\t\t\t}\n\n\t\t\tthis._value = value;\n\t\t\tthis._version++;\n\t\t\tglobalVersion++;\n\n\t\t\t/**@__INLINE__*/ startBatch();\n\t\t\ttry {\n\t\t\t\tfor (\n\t\t\t\t\tlet node = this._targets;\n\t\t\t\t\tnode !== undefined;\n\t\t\t\t\tnode = node._nextTarget\n\t\t\t\t) {\n\t\t\t\t\tnode._target._notify();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tendBatch();\n\t\t\t}\n\t\t}\n\t},\n});\n\n/**\n * Create a new plain signal.\n *\n * @param value The initial value for the signal.\n * @returns A new signal.\n */\nexport function signal<T>(value: T, options?: SignalOptions<T>): Signal<T>;\nexport function signal<T = undefined>(): Signal<T | undefined>;\nexport function signal<T>(value?: T, options?: SignalOptions<T>): Signal<T> {\n\treturn new Signal(value, options);\n}\n\nfunction needsToRecompute(target: Computed | Effect): boolean {\n\t// Check the dependencies for changed values. The dependency list is already\n\t// in order of use. Therefore if multiple dependencies have changed values, only\n\t// the first used dependency is re-evaluated at this point.\n\tfor (\n\t\tlet node = target._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\tif (\n\t\t\t// If the dependency has definitely been updated since its version number\n\t\t\t// was observed, then we need to recompute. This first check is not strictly\n\t\t\t// necessary for correctness, but allows us to skip the refresh call if the\n\t\t\t// dependency has already been updated.\n\t\t\tnode._source._version !== node._version ||\n\t\t\t// Refresh the dependency. If there's something blocking the refresh (e.g. a\n\t\t\t// dependency cycle), then we need to recompute.\n\t\t\t!node._source._refresh() ||\n\t\t\t// If the dependency got a new version after the refresh, then we need to recompute.\n\t\t\tnode._source._version !== node._version\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\t}\n\t// If none of the dependencies have changed values since last recompute then\n\t// there's no need to recompute.\n\treturn false;\n}\n\nfunction prepareSources(target: Computed | Effect) {\n\t/**\n\t * 1. Mark all current sources as re-usable nodes (version: -1)\n\t * 2. Set a rollback node if the current node is being used in a different context\n\t * 3. Point 'target._sources' to the tail of the doubly-linked list, e.g:\n\t *\n\t *    { undefined <- A <-> B <-> C -> undefined }\n\t *                   ↑           ↑\n\t *                   │           └──────┐\n\t * target._sources = A; (node is head)  │\n\t *                   ↓                  │\n\t * target._sources = C; (node is tail) ─┘\n\t */\n\tfor (\n\t\tlet node = target._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\tconst rollbackNode = node._source._node;\n\t\tif (rollbackNode !== undefined) {\n\t\t\tnode._rollbackNode = rollbackNode;\n\t\t}\n\t\tnode._source._node = node;\n\t\tnode._version = -1;\n\n\t\tif (node._nextSource === undefined) {\n\t\t\ttarget._sources = node;\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nfunction cleanupSources(target: Computed | Effect) {\n\tlet node = target._sources;\n\tlet head: Node | undefined = undefined;\n\n\t/**\n\t * At this point 'target._sources' points to the tail of the doubly-linked list.\n\t * It contains all existing sources + new sources in order of use.\n\t * Iterate backwards until we find the head node while dropping old dependencies.\n\t */\n\twhile (node !== undefined) {\n\t\tconst prev = node._prevSource;\n\n\t\t/**\n\t\t * The node was not re-used, unsubscribe from its change notifications and remove itself\n\t\t * from the doubly-linked list. e.g:\n\t\t *\n\t\t * { A <-> B <-> C }\n\t\t *         ↓\n\t\t *    { A <-> C }\n\t\t */\n\t\tif (node._version === -1) {\n\t\t\tnode._source._unsubscribe(node);\n\n\t\t\tif (prev !== undefined) {\n\t\t\t\tprev._nextSource = node._nextSource;\n\t\t\t}\n\t\t\tif (node._nextSource !== undefined) {\n\t\t\t\tnode._nextSource._prevSource = prev;\n\t\t\t}\n\t\t} else {\n\t\t\t/**\n\t\t\t * The new head is the last node seen which wasn't removed/unsubscribed\n\t\t\t * from the doubly-linked list. e.g:\n\t\t\t *\n\t\t\t * { A <-> B <-> C }\n\t\t\t *   ↑     ↑     ↑\n\t\t\t *   │     │     └ head = node\n\t\t\t *   │     └ head = node\n\t\t\t *   └ head = node\n\t\t\t */\n\t\t\thead = node;\n\t\t}\n\n\t\tnode._source._node = node._rollbackNode;\n\t\tif (node._rollbackNode !== undefined) {\n\t\t\tnode._rollbackNode = undefined;\n\t\t}\n\n\t\tnode = prev;\n\t}\n\n\ttarget._sources = head;\n}\n\ndeclare class Computed<T = any> extends Signal<T> {\n\t_fn: () => T;\n\t_sources?: Node;\n\t_globalVersion: number;\n\t_flags: number;\n\n\tconstructor(fn: () => T, options?: SignalOptions<T>);\n\n\t_notify(): void;\n\tget value(): T;\n}\n\nfunction Computed(this: Computed, fn: () => unknown, options?: SignalOptions) {\n\tSignal.call(this, undefined);\n\n\tthis._fn = fn;\n\tthis._sources = undefined;\n\tthis._globalVersion = globalVersion - 1;\n\tthis._flags = OUTDATED;\n\tthis._watched = options?.watched;\n\tthis._unwatched = options?.unwatched;\n}\n\nComputed.prototype = new Signal() as Computed;\n\nComputed.prototype._refresh = function () {\n\tthis._flags &= ~NOTIFIED;\n\n\tif (this._flags & RUNNING) {\n\t\treturn false;\n\t}\n\n\t// If this computed signal has subscribed to updates from its dependencies\n\t// (TRACKING flag set) and none of them have notified about changes (OUTDATED\n\t// flag not set), then the computed value can't have changed.\n\tif ((this._flags & (OUTDATED | TRACKING)) === TRACKING) {\n\t\treturn true;\n\t}\n\tthis._flags &= ~OUTDATED;\n\n\tif (this._globalVersion === globalVersion) {\n\t\treturn true;\n\t}\n\tthis._globalVersion = globalVersion;\n\n\t// Mark this computed signal running before checking the dependencies for value\n\t// changes, so that the RUNNING flag can be used to notice cyclical dependencies.\n\tthis._flags |= RUNNING;\n\tif (this._version > 0 && !needsToRecompute(this)) {\n\t\tthis._flags &= ~RUNNING;\n\t\treturn true;\n\t}\n\n\tconst prevContext = evalContext;\n\ttry {\n\t\tprepareSources(this);\n\t\tevalContext = this;\n\t\tconst value = this._fn();\n\t\tif (\n\t\t\tthis._flags & HAS_ERROR ||\n\t\t\tthis._value !== value ||\n\t\t\tthis._version === 0\n\t\t) {\n\t\t\tthis._value = value;\n\t\t\tthis._flags &= ~HAS_ERROR;\n\t\t\tthis._version++;\n\t\t}\n\t} catch (err) {\n\t\tthis._value = err;\n\t\tthis._flags |= HAS_ERROR;\n\t\tthis._version++;\n\t}\n\tevalContext = prevContext;\n\tcleanupSources(this);\n\tthis._flags &= ~RUNNING;\n\treturn true;\n};\n\nComputed.prototype._subscribe = function (node) {\n\tif (this._targets === undefined) {\n\t\tthis._flags |= OUTDATED | TRACKING;\n\n\t\t// A computed signal subscribes lazily to its dependencies when it\n\t\t// gets its first subscriber.\n\t\tfor (\n\t\t\tlet node = this._sources;\n\t\t\tnode !== undefined;\n\t\t\tnode = node._nextSource\n\t\t) {\n\t\t\tnode._source._subscribe(node);\n\t\t}\n\t}\n\tSignal.prototype._subscribe.call(this, node);\n};\n\nComputed.prototype._unsubscribe = function (node) {\n\t// Only run the unsubscribe step if the computed signal has any subscribers.\n\tif (this._targets !== undefined) {\n\t\tSignal.prototype._unsubscribe.call(this, node);\n\n\t\t// Computed signal unsubscribes from its dependencies when it loses its last subscriber.\n\t\t// This makes it possible for unreferences subgraphs of computed signals to get garbage collected.\n\t\tif (this._targets === undefined) {\n\t\t\tthis._flags &= ~TRACKING;\n\n\t\t\tfor (\n\t\t\t\tlet node = this._sources;\n\t\t\t\tnode !== undefined;\n\t\t\t\tnode = node._nextSource\n\t\t\t) {\n\t\t\t\tnode._source._unsubscribe(node);\n\t\t\t}\n\t\t}\n\t}\n};\n\nComputed.prototype._notify = function () {\n\tif (!(this._flags & NOTIFIED)) {\n\t\tthis._flags |= OUTDATED | NOTIFIED;\n\n\t\tfor (\n\t\t\tlet node = this._targets;\n\t\t\tnode !== undefined;\n\t\t\tnode = node._nextTarget\n\t\t) {\n\t\t\tnode._target._notify();\n\t\t}\n\t}\n};\n\nObject.defineProperty(Computed.prototype, \"value\", {\n\tget(this: Computed) {\n\t\tif (this._flags & RUNNING) {\n\t\t\tthrow new Error(\"Cycle detected\");\n\t\t}\n\t\tconst node = addDependency(this);\n\t\tthis._refresh();\n\t\tif (node !== undefined) {\n\t\t\tnode._version = this._version;\n\t\t}\n\t\tif (this._flags & HAS_ERROR) {\n\t\t\tthrow this._value;\n\t\t}\n\t\treturn this._value;\n\t},\n});\n\n/**\n * An interface for read-only signals.\n */\ninterface ReadonlySignal<T = any> {\n\treadonly value: T;\n\tpeek(): T;\n\n\tsubscribe(fn: (value: T) => void): () => void;\n\tvalueOf(): T;\n\ttoString(): string;\n\ttoJSON(): T;\n\tbrand: typeof BRAND_SYMBOL;\n}\n\n/**\n * Create a new signal that is computed based on the values of other signals.\n *\n * The returned computed signal is read-only, and its value is automatically\n * updated when any signals accessed from within the callback function change.\n *\n * @param fn The effect callback.\n * @returns A new read-only signal.\n */\nfunction computed<T>(\n\tfn: () => T,\n\toptions?: SignalOptions<T>\n): ReadonlySignal<T> {\n\treturn new Computed(fn, options);\n}\n\nfunction cleanupEffect(effect: Effect) {\n\tconst cleanup = effect._cleanup;\n\teffect._cleanup = undefined;\n\n\tif (typeof cleanup === \"function\") {\n\t\t/*@__INLINE__**/ startBatch();\n\n\t\t// Run cleanup functions always outside of any context.\n\t\tconst prevContext = evalContext;\n\t\tevalContext = undefined;\n\t\ttry {\n\t\t\tcleanup();\n\t\t} catch (err) {\n\t\t\teffect._flags &= ~RUNNING;\n\t\t\teffect._flags |= DISPOSED;\n\t\t\tdisposeEffect(effect);\n\t\t\tthrow err;\n\t\t} finally {\n\t\t\tevalContext = prevContext;\n\t\t\tendBatch();\n\t\t}\n\t}\n}\n\nfunction disposeEffect(effect: Effect) {\n\tfor (\n\t\tlet node = effect._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\tnode._source._unsubscribe(node);\n\t}\n\teffect._fn = undefined;\n\teffect._sources = undefined;\n\n\tcleanupEffect(effect);\n}\n\nfunction endEffect(this: Effect, prevContext?: Computed | Effect) {\n\tif (evalContext !== this) {\n\t\tthrow new Error(\"Out-of-order effect\");\n\t}\n\tcleanupSources(this);\n\tevalContext = prevContext;\n\n\tthis._flags &= ~RUNNING;\n\tif (this._flags & DISPOSED) {\n\t\tdisposeEffect(this);\n\t}\n\tendBatch();\n}\n\ntype EffectFn =\n\t| ((this: { dispose: () => void }) => void | (() => void))\n\t| (() => void | (() => void));\n\ndeclare class Effect {\n\t_fn?: EffectFn;\n\t_cleanup?: () => void;\n\t_sources?: Node;\n\t_nextBatchedEffect?: Effect;\n\t_flags: number;\n\n\tconstructor(fn: EffectFn);\n\n\t_callback(): void;\n\t_start(): () => void;\n\t_notify(): void;\n\t_dispose(): void;\n\tdispose(): void;\n}\n\nfunction Effect(this: Effect, fn: EffectFn) {\n\tthis._fn = fn;\n\tthis._cleanup = undefined;\n\tthis._sources = undefined;\n\tthis._nextBatchedEffect = undefined;\n\tthis._flags = TRACKING;\n}\n\nEffect.prototype._callback = function () {\n\tconst finish = this._start();\n\ttry {\n\t\tif (this._flags & DISPOSED) return;\n\t\tif (this._fn === undefined) return;\n\n\t\tconst cleanup = this._fn();\n\t\tif (typeof cleanup === \"function\") {\n\t\t\tthis._cleanup = cleanup;\n\t\t}\n\t} finally {\n\t\tfinish();\n\t}\n};\n\nEffect.prototype._start = function () {\n\tif (this._flags & RUNNING) {\n\t\tthrow new Error(\"Cycle detected\");\n\t}\n\tthis._flags |= RUNNING;\n\tthis._flags &= ~DISPOSED;\n\tcleanupEffect(this);\n\tprepareSources(this);\n\n\t/*@__INLINE__**/ startBatch();\n\tconst prevContext = evalContext;\n\tevalContext = this;\n\treturn endEffect.bind(this, prevContext);\n};\n\nEffect.prototype._notify = function () {\n\tif (!(this._flags & NOTIFIED)) {\n\t\tthis._flags |= NOTIFIED;\n\t\tthis._nextBatchedEffect = batchedEffect;\n\t\tbatchedEffect = this;\n\t}\n};\n\nEffect.prototype._dispose = function () {\n\tthis._flags |= DISPOSED;\n\n\tif (!(this._flags & RUNNING)) {\n\t\tdisposeEffect(this);\n\t}\n};\n\nEffect.prototype.dispose = function () {\n\tthis._dispose();\n};\n/**\n * Create an effect to run arbitrary code in response to signal changes.\n *\n * An effect tracks which signals are accessed within the given callback\n * function `fn`, and re-runs the callback when those signals change.\n *\n * The callback may return a cleanup function. The cleanup function gets\n * run once, either when the callback is next called or when the effect\n * gets disposed, whichever happens first.\n *\n * @param fn The effect callback.\n * @returns A function for disposing the effect.\n */\nfunction effect(fn: EffectFn): () => void {\n\tconst effect = new Effect(fn);\n\ttry {\n\t\teffect._callback();\n\t} catch (err) {\n\t\teffect._dispose();\n\t\tthrow err;\n\t}\n\t// Return a bound function instead of a wrapper like `() => effect._dispose()`,\n\t// because bound functions seem to be just as fast and take up a lot less memory.\n\treturn effect._dispose.bind(effect);\n}\n\nexport { computed, effect, batch, untracked, Signal, ReadonlySignal };\n", "import { options, Component, isValidElement } from \"preact\";\nimport { useRef, useMemo, useEffect } from \"preact/hooks\";\nimport {\n\tsignal,\n\tcomputed,\n\tbatch,\n\teffect,\n\tSignal,\n\ttype ReadonlySignal,\n\tuntracked,\n} from \"@preact/signals-core\";\nimport {\n\tVNode,\n\tOptionsTypes,\n\tHookFn,\n\tEffect,\n\tPropertyUpdater,\n\tAugmentedComponent,\n\tAugmentedElement as Element,\n} from \"./internal\";\n\nexport {\n\tsignal,\n\tcomputed,\n\tbatch,\n\teffect,\n\tSignal,\n\ttype ReadonlySignal,\n\tuntracked,\n};\n\nconst HAS_PENDING_UPDATE = 1 << 0;\nconst HAS_HOOK_STATE = 1 << 1;\nconst HAS_COMPUTEDS = 1 << 2;\n\nlet oldNotify: (this: Effect) => void,\n\teffectsQueue: Array<Effect> = [],\n\tdomQueue: Array<Effect> = [];\n\n// Capture the original `Effect.prototype._notify` method so that we can install\n// custom `._notify`s for each different use-case but still call the original\n// implementation in the end. Dispose the temporary effect immediately afterwards.\neffect(function (this: Effect) {\n\toldNotify = this._notify;\n})();\n\n// Install a Preact options hook\nfunction hook<T extends OptionsTypes>(hookName: T, hookFn: HookFn<T>) {\n\t// @ts-ignore-next-line private options hooks usage\n\toptions[hookName] = hookFn.bind(null, options[hookName] || (() => {}));\n}\n\nlet currentComponent: AugmentedComponent | undefined;\nlet finishUpdate: (() => void) | undefined;\n\nfunction setCurrentUpdater(updater?: Effect) {\n\t// end tracking for the current update:\n\tif (finishUpdate) finishUpdate();\n\t// start tracking the new update:\n\tfinishUpdate = updater && updater._start();\n}\n\nfunction createUpdater(update: () => void) {\n\tlet updater!: Effect;\n\teffect(function (this: Effect) {\n\t\tupdater = this;\n\t});\n\tupdater._callback = update;\n\treturn updater;\n}\n\n/** @todo This may be needed for complex prop value detection. */\n// function isSignalValue(value: any): value is Signal {\n// \tif (typeof value !== \"object\" || value == null) return false;\n// \tif (value instanceof Signal) return true;\n// \t// @TODO: uncomment this when we land Reactive (ideally behind a brand check)\n// \t// for (let i in value) if (value[i] instanceof Signal) return true;\n// \treturn false;\n// }\n\n/**\n * A wrapper component that renders a Signal directly as a Text node.\n * @todo: in Preact 11, just decorate Signal with `type:null`\n */\nfunction SignalValue(this: AugmentedComponent, { data }: { data: Signal }) {\n\t// hasComputeds.add(this);\n\n\t// Store the props.data signal in another signal so that\n\t// passing a new signal reference re-runs the text computed:\n\tconst currentSignal = useSignal(data);\n\tcurrentSignal.value = data;\n\n\tconst [isText, s] = useMemo(() => {\n\t\tlet self = this;\n\t\t// mark the parent component as having computeds so it gets optimized\n\t\tlet v = this.__v;\n\t\twhile ((v = v.__!)) {\n\t\t\tif (v.__c) {\n\t\t\t\tv.__c._updateFlags |= HAS_COMPUTEDS;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tconst wrappedSignal = computed(() => {\n\t\t\tlet s = currentSignal.value.value;\n\t\t\treturn s === 0 ? 0 : s === true ? \"\" : s || \"\";\n\t\t});\n\n\t\tconst isText = computed(() => !isValidElement(wrappedSignal.value));\n\n\t\t// Update text nodes directly without rerendering when the new value\n\t\t// is also text.\n\t\tconst dispose = effect(function (this: Effect) {\n\t\t\tthis._notify = notifyDomUpdates;\n\n\t\t\t// Subscribe to wrappedSignal updates only when its values are text...\n\t\t\tif (isText.value) {\n\t\t\t\t// ...but regardless of `self.base`'s current value, as it can be\n\t\t\t\t// undefined before mounting or a non-text node. In both of those cases\n\t\t\t\t// the update gets handled by a full rerender.\n\t\t\t\tconst value = wrappedSignal.value;\n\t\t\t\tif (self.__v && self.__v.__e && self.__v.__e.nodeType === 3) {\n\t\t\t\t\t(self.__v.__e as Text).data = value;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// Piggyback this._updater's disposal to ensure that the text updater effect\n\t\t// above also gets disposed on unmount.\n\t\tconst oldDispose = this._updater!._dispose;\n\t\tthis._updater!._dispose = function () {\n\t\t\tdispose();\n\t\t\toldDispose.call(this);\n\t\t};\n\n\t\treturn [isText, wrappedSignal];\n\t}, []);\n\n\t// Rerender the component whenever `data.value` changes from a VNode\n\t// to another VNode, from text to a VNode, or from a VNode to text.\n\t// That is, everything else except text-to-text updates.\n\t//\n\t// This also ensures that the backing DOM node types gets updated to\n\t// text nodes and back when needed.\n\t//\n\t// For text-to-text updates, `.peek()` is used to skip full rerenders,\n\t// leaving them to the optimized path above.\n\treturn isText.value ? s.peek() : s.value;\n}\nSignalValue.displayName = \"_st\";\n\nObject.defineProperties(Signal.prototype, {\n\tconstructor: { configurable: true, value: undefined },\n\ttype: { configurable: true, value: SignalValue },\n\tprops: {\n\t\tconfigurable: true,\n\t\tget() {\n\t\t\treturn { data: this };\n\t\t},\n\t},\n\t// Setting a VNode's _depth to 1 forces Preact to clone it before modifying:\n\t// https://github.com/preactjs/preact/blob/d7a433ee8463a7dc23a05111bb47de9ec729ad4d/src/diff/children.js#L77\n\t// @todo remove this for Preact 11\n\t__b: { configurable: true, value: 1 },\n});\n\n/** Inject low-level property/attribute bindings for Signals into Preact's diff */\nhook(OptionsTypes.DIFF, (old, vnode) => {\n\tif (typeof vnode.type === \"string\") {\n\t\tlet signalProps: Record<string, any> | undefined;\n\n\t\tlet props = vnode.props;\n\t\tfor (let i in props) {\n\t\t\tif (i === \"children\") continue;\n\n\t\t\tlet value = props[i];\n\t\t\tif (value instanceof Signal) {\n\t\t\t\tif (!signalProps) vnode.__np = signalProps = {};\n\t\t\t\tsignalProps[i] = value;\n\t\t\t\tprops[i] = value.peek();\n\t\t\t}\n\t\t}\n\t}\n\n\told(vnode);\n});\n\n/** Set up Updater before rendering a component */\nhook(OptionsTypes.RENDER, (old, vnode) => {\n\tsetCurrentUpdater();\n\n\tlet updater;\n\n\tlet component = vnode.__c;\n\tif (component) {\n\t\tcomponent._updateFlags &= ~HAS_PENDING_UPDATE;\n\n\t\tupdater = component._updater;\n\t\tif (updater === undefined) {\n\t\t\tcomponent._updater = updater = createUpdater(() => {\n\t\t\t\tcomponent._updateFlags |= HAS_PENDING_UPDATE;\n\t\t\t\tcomponent.setState({});\n\t\t\t});\n\t\t}\n\t}\n\n\tcurrentComponent = component;\n\tsetCurrentUpdater(updater);\n\told(vnode);\n});\n\n/** Finish current updater if a component errors */\nhook(OptionsTypes.CATCH_ERROR, (old, error, vnode, oldVNode) => {\n\tsetCurrentUpdater();\n\tcurrentComponent = undefined;\n\told(error, vnode, oldVNode);\n});\n\n/** Finish current updater after rendering any VNode */\nhook(OptionsTypes.DIFFED, (old, vnode) => {\n\tsetCurrentUpdater();\n\tcurrentComponent = undefined;\n\n\tlet dom: Element;\n\n\t// vnode._dom is undefined during string rendering,\n\t// so we use this to skip prop subscriptions during SSR.\n\tif (typeof vnode.type === \"string\" && (dom = vnode.__e as Element)) {\n\t\tlet props = vnode.__np;\n\t\tlet renderedProps = vnode.props;\n\t\tif (props) {\n\t\t\tlet updaters = dom._updaters;\n\t\t\tif (updaters) {\n\t\t\t\tfor (let prop in updaters) {\n\t\t\t\t\tlet updater = updaters[prop];\n\t\t\t\t\tif (updater !== undefined && !(prop in props)) {\n\t\t\t\t\t\tupdater._dispose();\n\t\t\t\t\t\t// @todo we could just always invoke _dispose() here\n\t\t\t\t\t\tupdaters[prop] = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tupdaters = {};\n\t\t\t\tdom._updaters = updaters;\n\t\t\t}\n\t\t\tfor (let prop in props) {\n\t\t\t\tlet updater = updaters[prop];\n\t\t\t\tlet signal = props[prop];\n\t\t\t\tif (updater === undefined) {\n\t\t\t\t\tupdater = createPropUpdater(dom, prop, signal, renderedProps);\n\t\t\t\t\tupdaters[prop] = updater;\n\t\t\t\t} else {\n\t\t\t\t\tupdater._update(signal, renderedProps);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\told(vnode);\n});\n\nfunction createPropUpdater(\n\tdom: Element,\n\tprop: string,\n\tpropSignal: Signal,\n\tprops: Record<string, any>\n): PropertyUpdater {\n\tconst setAsProperty =\n\t\tprop in dom &&\n\t\t// SVG elements need to go through `setAttribute` because they\n\t\t// expect things like SVGAnimatedTransformList instead of strings.\n\t\t// @ts-ignore\n\t\tdom.ownerSVGElement === undefined;\n\n\tconst changeSignal = signal(propSignal);\n\treturn {\n\t\t_update: (newSignal: Signal, newProps: typeof props) => {\n\t\t\tchangeSignal.value = newSignal;\n\t\t\tprops = newProps;\n\t\t},\n\t\t_dispose: effect(function (this: Effect) {\n\t\t\tthis._notify = notifyDomUpdates;\n\t\t\tconst value = changeSignal.value.value;\n\t\t\t// If Preact just rendered this value, don't render it again:\n\t\t\tif (props[prop] === value) return;\n\t\t\tprops[prop] = value;\n\t\t\tif (setAsProperty) {\n\t\t\t\t// @ts-ignore-next-line silly\n\t\t\t\tdom[prop] = value;\n\t\t\t} else if (value) {\n\t\t\t\tdom.setAttribute(prop, value);\n\t\t\t} else {\n\t\t\t\tdom.removeAttribute(prop);\n\t\t\t}\n\t\t}),\n\t};\n}\n\n/** Unsubscribe from Signals when unmounting components/vnodes */\nhook(OptionsTypes.UNMOUNT, (old, vnode: VNode) => {\n\tif (typeof vnode.type === \"string\") {\n\t\tlet dom = vnode.__e as Element | undefined;\n\t\t// vnode._dom is undefined during string rendering\n\t\tif (dom) {\n\t\t\tconst updaters = dom._updaters;\n\t\t\tif (updaters) {\n\t\t\t\tdom._updaters = undefined;\n\t\t\t\tfor (let prop in updaters) {\n\t\t\t\t\tlet updater = updaters[prop];\n\t\t\t\t\tif (updater) updater._dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\tlet component = vnode.__c;\n\t\tif (component) {\n\t\t\tconst updater = component._updater;\n\t\t\tif (updater) {\n\t\t\t\tcomponent._updater = undefined;\n\t\t\t\tupdater._dispose();\n\t\t\t}\n\t\t}\n\t}\n\told(vnode);\n});\n\n/** Mark components that use hook state so we can skip sCU optimization. */\nhook(OptionsTypes.HOOK, (old, component, index, type) => {\n\tif (type < 3 || type === 9)\n\t\t(component as AugmentedComponent)._updateFlags |= HAS_HOOK_STATE;\n\told(component, index, type);\n});\n\n/**\n * Auto-memoize components that use Signals/Computeds.\n * Note: Does _not_ optimize components that use hook/class state.\n */\nComponent.prototype.shouldComponentUpdate = function (\n\tthis: AugmentedComponent,\n\tprops,\n\tstate\n) {\n\t// @todo: Once preactjs/preact#3671 lands, this could just use `currentUpdater`:\n\tconst updater = this._updater;\n\tconst hasSignals = updater && updater._sources !== undefined;\n\n\t// If this is a component using state, rerender\n\t// @ts-ignore\n\tfor (let i in state) return true;\n\n\tif (this.__f || (typeof this.u == \"boolean\" && this.u === true)) {\n\t\tconst hasHooksState = this._updateFlags & HAS_HOOK_STATE;\n\t\t// if this component used no signals or computeds and no hooks state, update:\n\t\tif (!hasSignals && !hasHooksState && !(this._updateFlags & HAS_COMPUTEDS))\n\t\t\treturn true;\n\n\t\t// if there is a pending re-render triggered from Signals,\n\t\t// or if there is hooks state, update:\n\t\tif (this._updateFlags & HAS_PENDING_UPDATE) return true;\n\t} else {\n\t\t// if this component used no signals or computeds, update:\n\t\tif (!hasSignals && !(this._updateFlags & HAS_COMPUTEDS)) return true;\n\n\t\t// if there is a pending re-render triggered from Signals,\n\t\t// or if there is hooks state, update:\n\t\tif (this._updateFlags & (HAS_PENDING_UPDATE | HAS_HOOK_STATE)) return true;\n\t}\n\n\t// if any non-Signal props changed, update:\n\tfor (let i in props) {\n\t\tif (i !== \"__source\" && props[i] !== this.props[i]) return true;\n\t}\n\tfor (let i in this.props) if (!(i in props)) return true;\n\n\t// this is a purely Signal-driven component, don't update:\n\treturn false;\n};\n\nexport function useSignal<T>(value: T): Signal<T>;\nexport function useSignal<T = undefined>(): Signal<T | undefined>;\nexport function useSignal<T>(value?: T) {\n\treturn useMemo(() => signal<T | undefined>(value), []);\n}\n\nexport function useComputed<T>(compute: () => T) {\n\tconst $compute = useRef(compute);\n\t$compute.current = compute;\n\t(currentComponent as AugmentedComponent)._updateFlags |= HAS_COMPUTEDS;\n\treturn useMemo(() => computed<T>(() => $compute.current()), []);\n}\n\nfunction safeRaf(callback: () => void) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tcancelAnimationFrame(raf);\n\t\tcallback();\n\t};\n\n\tconst timeout = setTimeout(done, 100);\n\tconst raf = requestAnimationFrame(done);\n}\n\nconst deferEffects =\n\ttypeof requestAnimationFrame === \"undefined\" ? setTimeout : safeRaf;\n\nconst deferDomUpdates = (cb: any) => {\n\tqueueMicrotask(() => {\n\t\tqueueMicrotask(cb);\n\t});\n};\n\nfunction flushEffects() {\n\tbatch(() => {\n\t\tlet inst: Effect | undefined;\n\t\twhile ((inst = effectsQueue.shift())) {\n\t\t\toldNotify.call(inst);\n\t\t}\n\t});\n}\n\nfunction notifyEffects(this: Effect) {\n\tif (effectsQueue.push(this) === 1) {\n\t\t(options.requestAnimationFrame || deferEffects)(flushEffects);\n\t}\n}\n\nfunction flushDomUpdates() {\n\tbatch(() => {\n\t\tlet inst: Effect | undefined;\n\t\twhile ((inst = domQueue.shift())) {\n\t\t\toldNotify.call(inst);\n\t\t}\n\t});\n}\n\nfunction notifyDomUpdates(this: Effect) {\n\tif (domQueue.push(this) === 1) {\n\t\t(options.requestAnimationFrame || deferDomUpdates)(flushDomUpdates);\n\t}\n}\n\nexport function useSignalEffect(cb: () => void | (() => void)) {\n\tconst callback = useRef(cb);\n\tcallback.current = cb;\n\n\tuseEffect(() => {\n\t\treturn effect(function (this: Effect) {\n\t\t\tthis._notify = notifyEffects;\n\t\t\treturn callback.current();\n\t\t});\n\t}, []);\n}\n\n/**\n * @todo Determine which Reactive implementation we'll be using.\n * @internal\n */\n// export function useReactive<T extends object>(value: T): Reactive<T> {\n// \treturn useMemo(() => reactive<T>(value), []);\n// }\n\n/**\n * @internal\n * Update a Reactive's using the properties of an object or other Reactive.\n * Also works for Signals.\n * @example\n *   // Update a Reactive with Object.assign()-like syntax:\n *   const r = reactive({ name: \"Alice\" });\n *   update(r, { name: \"Bob\" });\n *   update(r, { age: 42 }); // property 'age' does not exist in type '{ name?: string }'\n *   update(r, 2); // '2' has no properties in common with '{ name?: string }'\n *   console.log(r.name.value); // \"Bob\"\n *\n * @example\n *   // Update a Reactive with the properties of another Reactive:\n *   const A = reactive({ name: \"Alice\" });\n *   const B = reactive({ name: \"Bob\", age: 42 });\n *   update(A, B);\n *   console.log(`${A.name} is ${A.age}`); // \"Bob is 42\"\n *\n * @example\n *   // Update a signal with assign()-like syntax:\n *   const s = signal(42);\n *   update(s, \"hi\"); // Argument type 'string' not assignable to type 'number'\n *   update(s, {}); // Argument type '{}' not assignable to type 'number'\n *   update(s, 43);\n *   console.log(s.value); // 43\n *\n * @param obj The Reactive or Signal to be updated\n * @param update The value, Signal, object or Reactive to update `obj` to match\n * @param overwrite If `true`, any properties `obj` missing from `update` are set to `undefined`\n */\n/*\nexport function update<T extends SignalOrReactive>(\n\tobj: T,\n\tupdate: Partial<Unwrap<T>>,\n\toverwrite = false\n) {\n\tif (obj instanceof Signal) {\n\t\tobj.value = peekValue(update);\n\t} else {\n\t\tfor (let i in update) {\n\t\t\tif (i in obj) {\n\t\t\t\tobj[i].value = peekValue(update[i]);\n\t\t\t} else {\n\t\t\t\tlet sig = signal(peekValue(update[i]));\n\t\t\t\tsig[KEY] = i;\n\t\t\t\tobj[i] = sig;\n\t\t\t}\n\t\t}\n\t\tif (overwrite) {\n\t\t\tfor (let i in obj) {\n\t\t\t\tif (!(i in update)) {\n\t\t\t\t\tobj[i].value = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n*/\n"],
  "mappings": "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",
  "names": ["assign", "obj", "props", "i", "removeNode", "node", "parentNode", "removeChild", "createElement", "type", "children", "key", "ref", "normalizedProps", "arguments", "length", "slice", "call", "defaultProps", "createVNode", "original", "vnode", "__k", "__", "__b", "__e", "__c", "constructor", "__v", "vnodeId", "__i", "__u", "options", "createRef", "current", "Fragment", "BaseComponent", "context", "this", "getDomSibling", "childIndex", "sibling", "updateParentDomPointers", "child", "base", "enqueueRender", "c", "__d", "rerenderQueue", "push", "process", "__r", "prevDebounce", "debounceRendering", "defer", "component", "newVNode", "oldVNode", "oldDom", "commitQueue", "refQueue", "l", "sort", "depthSort", "shift", "__P", "diff", "__n", "namespaceURI", "commitRoot", "diffChildren", "parentDom", "renderResult", "newParentVNode", "oldParentVNode", "globalContext", "namespace", "excessDomChildren", "isHydrating", "childVNode", "newDom", "firstChildDom", "result", "oldChildren", "EMPTY_ARR", "newChildrenLength", "constructNewChildrenArray", "EMPTY_OBJ", "applyRef", "insert", "nextSibling", "skewedIndex", "matchingIndex", "oldChildrenLength", "remainingOldChildren", "skew", "Array", "String", "isArray", "findMatchingIndex", "unmount", "parentVNode", "contains", "insertBefore", "nodeType", "toChildArray", "out", "some", "x", "y", "setStyle", "style", "value", "setProperty", "IS_NON_DIMENSIONAL", "test", "dom", "name", "oldValue", "useCapture", "o", "cssText", "replace", "CAPTURE_REGEX", "toLowerCase", "_attached", "eventClock", "addEventListener", "eventProxyCapture", "eventProxy", "removeEventListener", "e", "removeAttribute", "setAttribute", "createEventProxy", "eventHandler", "_dispatched", "event", "tmp", "isNew", "oldProps", "oldState", "snapshot", "clearProcessingException", "newProps", "isClassComponent", "provider", "componentContext", "renderHook", "count", "newType", "outer", "prototype", "render", "contextType", "__E", "doRender", "sub", "state", "__h", "_sb", "__s", "getDerivedStateFromProps", "componentWillMount", "componentDidMount", "componentWillReceiveProps", "shouldComponentUpdate", "componentWillUpdate", "componentDidUpdate", "getChildContext", "getSnapshotBeforeUpdate", "cloneNode", "then", "MODE_HYDRATE", "indexOf", "diffElementNodes", "diffed", "root", "cb", "map", "newHtml", "oldHtml", "newChildren", "inputValue", "checked", "localName", "document", "createTextNode", "createElementNS", "is", "__m", "data", "childNodes", "attributes", "__html", "innerHTML", "content", "hasRefUnmount", "skipRemove", "r", "componentWillUnmount", "replaceNode", "documentElement", "firstChild", "hydrate", "cloneElement", "createContext", "defaultValue", "Context", "subs", "ctx", "Set", "_props", "forEach", "add", "old", "delete", "Provider", "__l", "Consumer", "contextValue", "isValidElement", "error", "errorInfo", "ctor", "handled", "getDerivedStateFromError", "setState", "componentDidCatch", "undefined", "update", "callback", "s", "forceUpdate", "Promise", "bind", "resolve", "setTimeout", "a", "b", "encodeEntities", "str", "length", "ENCODED_ENTITIES", "test", "last", "i", "out", "ch", "charCodeAt", "slice", "createVNode", "type", "props", "key", "isStaticChildren", "__source", "__self", "ref", "normalizedProps", "vnode", "__k", "__", "__b", "__e", "__c", "constructor", "__v", "vnodeId", "__i", "__u", "defaultProps", "options", "jsxTemplate", "templates", "Fragment", "tpl", "exprs", "call", "arguments", "jsxAttr", "name", "value", "attr", "result", "prop", "val", "JS_TO_CSS", "replace", "CSS_REGEX", "toLowerCase", "suffix", "startsWith", "IS_NON_DIMENSIONAL", "jsxEscape", "isArray", "Array", "getHookState", "index", "type", "options", "__h", "currentComponent", "currentHook", "hooks", "__H", "__", "length", "push", "useState", "initialState", "useReducer", "invokeOrReturn", "reducer", "init", "hookState", "currentIndex", "_reducer", "__c", "action", "currentValue", "__N", "nextValue", "setState", "__f", "updateHookState", "p", "s", "c", "stateHooks", "filter", "x", "every", "prevScu", "call", "this", "shouldUpdate", "props", "forEach", "hookItem", "shouldComponentUpdate", "prevCWU", "componentWillUpdate", "__e", "tmp", "useEffect", "callback", "args", "state", "__s", "argsChanged", "_pendingArgs", "useLayoutEffect", "useRef", "initialValue", "useMemo", "current", "useImperativeHandle", "ref", "createHandle", "result", "concat", "factory", "useCallback", "useContext", "context", "provider", "sub", "value", "useDebugValue", "formatter", "n", "useErrorBoundary", "cb", "errState", "componentDidCatch", "err", "errorInfo", "undefined", "useId", "root", "__v", "__m", "mask", "flushAfterPaintEffects", "component", "afterPaintEffects", "shift", "__P", "invokeCleanup", "invokeEffect", "e", "afterNextFrame", "raf", "done", "clearTimeout", "timeout", "HAS_RAF", "cancelAnimationFrame", "setTimeout", "requestAnimationFrame", "hook", "comp", "cleanup", "oldArgs", "newArgs", "some", "arg", "f", "previousComponent", "prevRaf", "oldBeforeDiff", "oldBeforeRender", "oldAfterDiff", "oldCommit", "oldBeforeUnmount", "oldRoot", "_options", "__b", "__r", "diffed", "unmount", "vnode", "parentDom", "__k", "commitQueue", "hasErrored", "endBatch", "batchDepth", "error", "hasError", "batchedEffect", "effect", "batchIteration", "next", "_nextBatchedEffect", "_flags", "needsToRecompute", "_callback", "err", "batch", "fn", "untracked", "prevContext", "evalContext", "addDependency", "signal", "node", "_node", "_target", "_version", "_source", "_prevSource", "_sources", "_nextSource", "_prevTarget", "_nextTarget", "_rollbackNode", "_subscribe", "Signal", "value", "options", "this", "_value", "_targets", "_watched", "watched", "_unwatched", "unwatched", "target", "_refresh", "prepareSources", "rollbackNode", "cleanupSources", "head", "prev", "_unsubscribe", "Computed", "call", "undefined", "_fn", "_globalVersion", "globalVersion", "computed", "cleanupEffect", "cleanup", "_cleanup", "disposeEffect", "endEffect", "Error", "Effect", "_dispose", "bind", "BRAND_SYMBOL", "Symbol", "prototype", "brand", "_this", "targets", "_this$_watched", "_this2", "_this2$_unwatched", "subscribe", "_this3", "valueOf", "toString", "toJSON", "peek", "Object", "defineProperty", "get", "set", "_notify", "OUTDATED", "finish", "_start", "dispose", "hook", "hookName", "hookFn", "options", "bind", "setCurrentUpdater", "updater", "finishUpdate", "_start", "SignalValue", "_ref", "_this", "this", "data", "currentSignal", "useSignal", "value", "_useMemo", "useMemo", "self", "v", "__v", "__", "__c", "_updateFlags", "wrappedSignal", "computed", "s", "isText", "isValidElement", "dispose", "effect", "_notify", "notifyDomUpdates", "__e", "nodeType", "oldDispose", "_updater", "_dispose", "call", "peek", "createPropUpdater", "dom", "prop", "propSignal", "props", "setAsProperty", "ownerSVGElement", "changeSignal", "signal", "_update", "newSignal", "newProps", "setAttribute", "removeAttribute", "useComputed", "compute", "$compute", "useRef", "current", "currentComponent", "flushEffects", "batch", "inst", "effectsQueue", "shift", "oldNotify", "notifyEffects", "push", "requestAnimationFrame", "deferEffects", "flushDomUpdates", "domQueue", "deferDomUpdates", "useSignalEffect", "cb", "callback", "useEffect", "displayName", "Object", "defineProperties", "Signal", "prototype", "constructor", "configurable", "undefined", "type", "get", "__b", "old", "vnode", "signalProps", "i", "__np", "component", "update", "_callback", "setState", "createUpdater", "error", "oldVNode", "renderedProps", "updaters", "_updaters", "index", "Component", "shouldComponentUpdate", "state", "hasSignals", "_sources", "__f", "u", "hasHooksState", "setTimeout", "done", "clearTimeout", "timeout", "cancelAnimationFrame", "raf", "queueMicrotask"]
}
