{
  "version": 3,
  "sources": ["../../vuetify/src/labs/VCalendar/VCalendar.tsx", "../../vuetify/src/labs/VCalendar/VCalendarDay.tsx", "../../vuetify/src/labs/VCalendar/VCalendarInterval.tsx", "../../vuetify/src/labs/VCalendar/VCalendarIntervalEvent.tsx", "../../vuetify/src/labs/VCalendar/VCalendarHeader.tsx", "../../vuetify/src/labs/VCalendar/VCalendarMonthDay.tsx", "../../vuetify/src/labs/VCalendar/VCalendarEvent.tsx"],
  "sourcesContent": ["// Styles\nimport './VCalendar.sass'\n\n// Components\nimport { makeVCalendarDayProps, VCalendarDay } from './VCalendarDay'\nimport { makeVCalendarHeaderProps, VCalendarHeader } from './VCalendarHeader'\nimport { VCalendarMonthDay } from './VCalendarMonthDay'\n\n// Composables\nimport { makeCalendarProps, useCalendar } from '@/composables/calendar'\nimport { useDate } from '@/composables/date/date'\n\n// Utilities\nimport { computed, nextTick } from 'vue'\nimport { chunkArray, genericComponent, getPrefixedEventHandlers, pick, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { VCalendarDaySlots } from './VCalendarDay'\nimport type { CalendarDay } from '@/composables/calendar'\n\nexport const makeVCalendarProps = propsFactory({\n  hideHeader: Boolean,\n  hideWeekNumber: Boolean,\n\n  ...makeCalendarProps(),\n  ...makeVCalendarDayProps(),\n  ...makeVCalendarHeaderProps(),\n}, 'VCalendar')\n\nexport type VCalendarSlots = VCalendarDaySlots & {\n  'day-body': { day?: CalendarDay, events?: Array<any> }\n  'day-title': { title?: number | string }\n  'day-event': { day?: CalendarDay, allDay: Boolean, event?: Record<string, unknown> }\n  header: { title: string, clickNext: Function, clickPrev: Function, clickToday: Function }\n  'day-interval': { day?: CalendarDay, dayIndex: Number, events?: Array<any> }\n  title: { title?: string }\n}\n\nexport const VCalendar = genericComponent<VCalendarSlots>()({\n  name: 'VCalendar',\n\n  props: makeVCalendarProps(),\n\n  emits: {\n    next: null,\n    prev: null,\n    today: null,\n    'update:modelValue': null,\n  },\n\n  setup (props, { attrs, emit, slots }) {\n    const adapter = useDate()\n\n    const { daysInMonth, daysInWeek, genDays, model, displayValue, weekNumbers, weekDays } = useCalendar(props as any)\n\n    const dayNames = adapter.getWeekdays()\n\n    function onClickNext () {\n      if (props.viewMode === 'month') {\n        model.value = [adapter.addMonths(displayValue.value, 1)]\n      } else if (props.viewMode === 'week') {\n        model.value = [adapter.addDays(displayValue.value, 7)]\n      } else if (props.viewMode === 'day') {\n        model.value = [adapter.addDays(displayValue.value, 1)]\n      }\n      nextTick(() => {\n        emit('next', model.value[0])\n      })\n    }\n\n    function onClickPrev () {\n      if (props.viewMode === 'month') {\n        model.value = [adapter.addMonths(displayValue.value, -1)]\n      } else if (props.viewMode === 'week') {\n        model.value = [adapter.addDays(displayValue.value, -7)]\n      } else if (props.viewMode === 'day') {\n        model.value = [adapter.addDays(displayValue.value, -1)]\n      }\n      nextTick(() => {\n        emit('prev', model.value[0])\n      })\n    }\n\n    function onClickToday () {\n      const date = adapter.date()\n      model.value = [date]\n      nextTick(() => {\n        emit('today', model.value[0])\n      })\n    }\n\n    const title = computed(() => {\n      return adapter.format(displayValue.value, 'monthAndYear')\n    })\n\n    useRender(() => {\n      const calendarDayProps = VCalendarDay.filterProps(props)\n      const calendarHeaderProps = VCalendarHeader.filterProps(props)\n\n      return (\n        <div class={[\n          'v-calendar',\n          {\n            'v-calendar-monthly': props.viewMode === 'month',\n            'v-calendar-weekly': props.viewMode === 'week',\n            'v-calendar-day': props.viewMode === 'day',\n          },\n        ]}\n        >\n          <div>\n            { !props.hideHeader && (\n              slots.header?.({\n                title: title.value,\n                clickNext: onClickNext,\n                clickPrev: onClickPrev,\n                clickToday: onClickToday,\n              }) ?? (\n                <VCalendarHeader\n                  key=\"calendar-header\"\n                  { ...calendarHeaderProps }\n                  title={ title.value }\n                  onClick:next={ onClickNext }\n                  onClick:prev={ onClickPrev }\n                  onClick:toToday={ onClickToday }\n                >\n                  {{ title: slots.title }}\n                </VCalendarHeader>\n              )\n            )}\n          </div>\n\n          <div class={['v-calendar__container', `days__${weekDays.value.length}`]}>\n            { props.viewMode === 'month' && !props.hideDayHeader && (\n              <div\n                class={\n                  [\n                    'v-calendar-weekly__head',\n                    `days__${weekDays.value.length}`,\n                    ...(!props.hideWeekNumber ? ['v-calendar-weekly__head-weeknumbers'] : []),\n                  ]\n                }\n                key=\"calendarWeeklyHead\"\n              >\n                { !props.hideWeekNumber ? <div key=\"weekNumber0\" class=\"v-calendar-weekly__head-weeknumber\"></div> : '' }\n                {\n                  weekDays.value.map(weekday => (\n                    <div class={ `v-calendar-weekly__head-weekday${!props.hideWeekNumber ? '-with-weeknumber' : ''}` }>\n                      { dayNames[weekday] }\n                    </div>\n                  ))\n                }\n              </div>\n            )}\n\n            { props.viewMode === 'month' && (\n              <div\n                key=\"VCalendarMonth\"\n                class={\n                  [\n                    'v-calendar-month__days',\n                    `days${!props.hideWeekNumber ? '-with-weeknumbers' : ''}__${weekDays.value.length}`,\n                    ...(!props.hideWeekNumber ? ['v-calendar-month__weeknumbers'] : []),\n                  ]\n                }\n              >\n                { chunkArray(daysInMonth.value, weekDays.value.length)\n                  .map((week, wi) => (\n                    [\n                      !props.hideWeekNumber ? (\n                        <div\n                          class=\"v-calendar-month__weeknumber\"\n                          { ...getPrefixedEventHandlers(attrs, ':weekNumber', () => ({ weekNumber: weekNumbers.value[wi], week })) }\n                        >{ weekNumbers.value[wi] }</div>\n                      ) : '',\n                      week.map(day => (\n                          <VCalendarMonthDay\n                            key={ day.date.getTime() }\n                            { ...calendarDayProps }\n                            day={ day }\n                            title={ adapter.format(day.date, 'dayOfMonth') }\n                            events={ props.events?.filter(e => adapter.isSameDay(day.date, e.start) || adapter.isSameDay(day.date, e.end)) }\n                            { ...attrs }\n                          >\n                            {{\n                              ...pick(slots, ['day-body', 'day-event', 'day-title']),\n                            }}\n                          </VCalendarMonthDay>\n                      )),\n                    ]\n                  ))\n                }\n              </div>\n            )}\n            { props.viewMode === 'week' && (\n              daysInWeek.value.map((day, i) =>\n                slots['day-interval'] ? slots['day-interval']?.({\n                  ...calendarDayProps,\n                  day,\n                  dayIndex: i,\n                  events: props.events?.filter(e => adapter.isSameDay(e.start, day.date) || adapter.isSameDay(e.end, day.date)),\n                }) : (\n                  <VCalendarDay\n                    { ...calendarDayProps }\n                    day={ day }\n                    dayIndex={ i }\n                    events={ props.events?.filter(e => adapter.isSameDay(e.start, day.date) || adapter.isSameDay(e.end, day.date)) }\n                    { ...attrs }\n                  >\n                    {{ ...pick(slots, ['interval', 'intervalBody', 'intervalEvent', 'intervalTitle']) }}\n                  </VCalendarDay>\n                )\n              ))\n            }\n\n            { props.viewMode === 'day' && (\n              slots['day-interval'] ? slots['day-interval']({\n                day: genDays([displayValue.value as Date], adapter.date() as Date)[0],\n                dayIndex: 0,\n                events: props.events?.filter(e =>\n                  adapter.isSameDay(e.start, genDays([displayValue.value as Date], adapter.date() as Date)[0].date) ||\n                  adapter.isSameDay(e.end, genDays([displayValue.value as Date], adapter.date() as Date)[0].date)\n                ),\n              }) : (\n                <VCalendarDay\n                  { ...calendarDayProps }\n                  day={ genDays([model.value[0] as Date], adapter.date() as Date)[0] }\n                  dayIndex={ 0 }\n                  events={\n                    props.events?.filter(e =>\n                      adapter.isSameDay(e.start, genDays([model.value[0] as Date], adapter.date() as Date)[0].date) ||\n                      adapter.isSameDay(e.end, genDays([model.value[0] as Date], adapter.date() as Date)[0].date)\n                    )\n                  }\n                  { ...attrs }\n                ></VCalendarDay>\n              )\n            )}\n          </div>\n        </div>\n      )\n    })\n\n    return { daysInMonth, daysInWeek, genDays }\n  },\n})\n\nexport type VCalendar = InstanceType<typeof VCalendar>\n", "// Styles\nimport './VCalendarDay.sass'\n\n// Components\nimport { makeVCalendarIntervalProps, VCalendarInterval } from './VCalendarInterval'\nimport { VBtn } from '@/components/VBtn'\n\n// Composables\nimport { useDate } from '@/composables/date'\n\n// Utilities\nimport { computed } from 'vue'\nimport { genericComponent, getPrefixedEventHandlers, pick, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { VCalendarIntervalSlots } from './VCalendarInterval'\n\nexport type VCalendarDaySlots = VCalendarIntervalSlots & {\n  interval: Record<string, unknown>\n}\n\nexport const makeVCalendarDayProps = propsFactory({\n  hideDayHeader: Boolean,\n  intervals: {\n    type: Number,\n    default: 24,\n  },\n\n  ...makeVCalendarIntervalProps(),\n}, 'VCalendarDay')\n\nexport const VCalendarDay = genericComponent<VCalendarDaySlots>()({\n  name: 'VCalendarDay',\n\n  inheritAttrs: false,\n\n  props: makeVCalendarDayProps(),\n\n  setup (props, { attrs, slots }) {\n    const adapter = useDate()\n    const intervals = computed(() => [\n      ...Array.from({ length: props.intervals }, (v, i) => i)\n        .filter((_, index) => (props.intervalDuration * (index + props.intervalStart)) < 1440),\n    ])\n\n    useRender(() => {\n      const calendarIntervalProps = VCalendarInterval.filterProps(props)\n\n      return (\n        <div class=\"v-calendar-day__container\">\n          { !props.hideDayHeader && (\n            <div\n              key=\"calendar-week-name\"\n              class=\"v-calendar-weekly__head-weekday\"\n              { ...getPrefixedEventHandlers(attrs, ':day', () => props.day) }\n            >\n              { adapter.format(props.day.date, 'weekdayShort') }\n\n              <div>\n                <VBtn\n                  { ...getPrefixedEventHandlers(attrs, ':date', () => props.day) }\n                  class={ props.day?.isToday ? 'v-calendar-day-label__today' : undefined }\n                  icon\n                  text={ adapter.format(props.day.date, 'dayOfMonth') }\n                  variant={ props.day?.isToday ? undefined : 'text' }\n                />\n              </div>\n            </div>\n          )}\n          { intervals.value.map((_, index) =>\n            slots.interval?.(calendarIntervalProps) ?? (\n              <VCalendarInterval\n                index={ index }\n                { ...calendarIntervalProps }\n                { ...attrs }\n                { ...getPrefixedEventHandlers(attrs, ':interval', () => calendarIntervalProps) }\n              >\n                {{\n                  ...pick(slots, ['intervalBody', 'intervalEvent', 'intervalTitle']),\n                }}\n              </VCalendarInterval>\n            )\n          )}\n        </div>\n      )\n    })\n\n    return { intervals }\n  },\n})\n\nexport type VCalendarDay = InstanceType<typeof VCalendarDay>\n", "// Styles\nimport './VCalendarInterval.sass'\n\n// Components\nimport { VCalendarIntervalEvent } from './VCalendarIntervalEvent'\n\n// Composables\nimport { useDate } from '@/composables/date'\n\n// Utilities\nimport { computed } from 'vue'\nimport { convertToUnit, genericComponent, getPrefixedEventHandlers, propsFactory, useRender } from '@/util'\n\ntype Interval = {\n  label: string\n  start: unknown\n  end: unknown\n  events: any[]\n}\n\nexport type VCalendarIntervalSlots = {\n  intervalBody: { interval: Interval }\n  intervalEvent: {\n    height: string\n    margin: string\n    eventClass: string\n    event: any\n    interval: Interval\n  }\n  intervalTitle: { interval: Interval }\n}\n\nexport const makeVCalendarIntervalProps = propsFactory({\n  day: {\n    type: Object,\n    default: () => ({}),\n  },\n  dayIndex: Number,\n  events: Array<any>,\n  intervalDivisions: {\n    type: Number,\n    default: 2,\n  },\n  intervalDuration: {\n    type: Number,\n    default: 60,\n  },\n  intervalHeight: {\n    type: Number,\n    default: 48,\n  },\n  intervalFormat: {\n    type: [String, Function],\n    default: 'fullTime12h',\n  },\n  intervalStart: {\n    type: Number,\n    default: 0,\n  },\n}, 'VCalendarInterval')\n\nexport const VCalendarInterval = genericComponent<VCalendarIntervalSlots>()({\n  name: 'VCalendarInterval',\n\n  inheritAttrs: false,\n\n  props: {\n    index: {\n      type: Number,\n      required: true,\n    },\n\n    ...makeVCalendarIntervalProps(),\n  },\n\n  setup (props, { attrs, emit, slots }) {\n    const adapter = useDate()\n    const interval = computed(() => {\n      const start = adapter.addMinutes(adapter.startOfDay(props.day.date), (props.intervalDuration * (props.index + props.intervalStart)))\n      const end = adapter.addMinutes(\n        adapter.startOfDay(props.day.date),\n        (props.intervalDuration * (props.index + props.intervalStart + 1)) - 1\n      )\n      return {\n        ...props.day,\n        label: adapter.format(start, 'fullTime24h'),\n        start,\n        end,\n        events: props.events\n          ? props.events\n            .filter(e => !e.allDay &&\n              (adapter.isEqual(start, e.start) ||\n              adapter.isWithinRange(e.start, [start, end]) ||\n              adapter.isWithinRange(start, [e.start, e.end]) ||\n              adapter.isEqual(end, e.end))\n            )\n            .map(e => {\n              return {\n                ...e,\n                first: adapter.isEqual(start, e.start) || adapter.isWithinRange(e.start, [start, end]),\n                last: adapter.isEqual(end, e.end) || adapter.isWithinRange(e.end, [start, end]),\n              }\n            })\n          : [],\n      }\n    })\n\n    useRender(() => {\n      return (\n        props.dayIndex === 0 ? (\n          <div class=\"v-calendar-day__row-with-label\" style={ `height: ${convertToUnit(props.intervalHeight)}` }>\n            <div\n              class=\"v-calendar-day__row-label\"\n              { ...getPrefixedEventHandlers(attrs, ':time', () => props) }\n            >\n              {\n                slots.intervalTitle?.({ interval: interval.value }) ?? (\n                  props.index\n                    ? props.intervalFormat\n                      ? typeof props.intervalFormat === 'string'\n                        ? adapter.format(interval.value.start, 'hours12h')\n                        : props.intervalFormat(interval.value)\n                      : interval.value.label\n                    : '12 AM'\n                )\n              }\n            </div>\n            <div class=\"v-calendar-day__row-hairline\"></div>\n            <div\n              class={['v-calendar-day__row-content', interval.value.events.some(e => !e.last)\n                ? 'v-calendar-day__row-content-through'\n                : '']}\n              { ...getPrefixedEventHandlers(attrs, ':interval', () => interval.value) }\n            >\n              {\n                slots.intervalBody?.({ interval: interval.value }) ?? (\n                  <div>\n                    {\n                      interval.value.events?.map(event => (\n                        <VCalendarIntervalEvent\n                          event={ event }\n                          interval={ interval.value }\n                          intervalDivisions={ props.intervalDivisions }\n                          intervalDuration={ props.intervalDuration }\n                          intervalHeight={ props.intervalHeight }\n                          { ...attrs }\n                        >\n                          {{\n                            ...(slots.intervalEvent ? {\n                              intervalEvent: ({ height, margin, eventClass, event, interval }) => (\n                                slots.intervalEvent?.({ height, margin, eventClass, event, interval })\n                              ),\n                            } : {}),\n                          }}\n                        </VCalendarIntervalEvent>\n                      ))\n                    }\n                  </div>\n                )\n              }\n            </div>\n          </div>\n        ) : (\n          <div\n            class=\"v-calendar-day__row-without-label\"\n            style={ `height: ${convertToUnit(props.intervalHeight)}` }\n          >\n            <div\n              class={['v-calendar-day__row-content', interval.value.events.some(e => !e.last)\n                ? 'v-calendar-day__row-content-through' : '']}\n              { ...getPrefixedEventHandlers(attrs, ':interval', () => interval.value) }\n            >\n              {\n                slots.intervalBody?.({ interval: interval.value }) ?? (\n                  interval.value.events?.map(event => (\n                    <VCalendarIntervalEvent\n                      event={ event }\n                      interval={ interval.value }\n                      intervalDivisions={ props.intervalDivisions }\n                      intervalDuration={ props.intervalDuration }\n                      intervalHeight={ props.intervalHeight }\n                      { ...attrs }\n                    >\n                      {{\n                        ...(slots.intervalEvent ? {\n                          intervalEvent: ({ height, margin, eventClass, event, interval }) => (\n                            slots.intervalEvent?.({ height, margin, eventClass, event, interval })\n                          ),\n                        } : {}),\n                      }}\n                    </VCalendarIntervalEvent>\n                  ))\n                )\n              }\n            </div>\n          </div>\n        )\n      )\n    })\n\n    return { interval }\n  },\n})\n\nexport type VCalendarInterval = InstanceType<typeof VCalendarInterval>\n", "// Styles\nimport './VCalendarIntervalEvent.sass'\n\n// Components\nimport { VSheet } from '@/components/VSheet'\n\n// Composables\nimport { useDate } from '@/composables/date'\n\n// Utilities\nimport { convertToUnit, genericComponent, getPrefixedEventHandlers, propsFactory, useRender } from '@/util'\n\nexport type VCalendarIntervalEventSlots = {\n  intervalEvent: { height: string, margin: string, eventClass: string, event: any, interval: any }\n}\n\nexport const makeVCalendarIntervalEventProps = propsFactory({\n  allDay: Boolean,\n  interval: Object,\n  intervalDivisions: {\n    type: Number,\n    required: true,\n  },\n  intervalDuration: {\n    type: Number,\n    required: true,\n  },\n  intervalHeight: {\n    type: Number,\n    required: true,\n  },\n  event: Object,\n}, 'VCalendarIntervalEvent')\n\nexport const VCalendarIntervalEvent = genericComponent<VCalendarIntervalEventSlots>()({\n  name: 'VCalendarIntervalEvent',\n\n  inheritAttrs: false,\n\n  props: makeVCalendarIntervalEventProps(),\n\n  setup (props, { attrs, emit, slots }) {\n    const adapter = useDate()\n    const calcHeight = () => {\n      if ((!props.event?.first && !props.event?.last) || adapter.isEqual(props.event?.end, props.interval?.end)) {\n        return { height: `${props.intervalHeight}px`, margin: convertToUnit(0) }\n      } else {\n        const { height, margin } = Array.from({ length: props.intervalDivisions },\n          (_, x: number) => (x + 1) * (props.intervalDuration / props.intervalDivisions)\n        )\n          .reduce((total, div, index) => {\n            if (adapter.isBefore(adapter.addMinutes(props.interval?.start, div), props.event?.end)) {\n              return {\n                height: convertToUnit((props.intervalHeight / props.intervalDivisions) * index),\n                margin: convertToUnit((props.intervalHeight / props.intervalDivisions) * index),\n              }\n            }\n            return { height: total.height, margin: total.margin }\n          }, { height: '', margin: '' })\n        return { height, margin }\n      }\n    }\n\n    useRender(() => {\n      return (\n        <div>\n          {\n            slots.intervalEvent?.({\n              height: calcHeight().height,\n              margin: calcHeight().margin,\n              eventClass: 'v-calendar-internal-event',\n              event: props.event,\n              interval: props.interval,\n            }) ?? (\n              <VSheet\n                height={ calcHeight().height }\n                density=\"comfortable\"\n                style={ `margin-top: ${calcHeight().margin}` }\n                class=\"v-calendar-internal-event\"\n                color={ props.event?.color ?? undefined }\n                rounded={\n                  props.event?.first && props.event?.last ? true\n                  : props.event?.first ? 't'\n                  : props.event?.last ? 'b'\n                  : false\n                }\n                { ...getPrefixedEventHandlers(attrs, ':event', () => ({\n                  event: props.event,\n                  allDay: false,\n                  day: null,\n                  interval: props.interval,\n                  intervalDivisions: props.intervalDivisions,\n                  intervalDuration: props.intervalDuration,\n                  intervalHeight: props.intervalHeight,\n                }))}\n              >\n                { props.event?.first ? props.event?.title : '' }\n              </VSheet>\n            )\n          }\n        </div>\n      )\n    })\n\n    return {}\n  },\n\n})\n\nexport type VCalendarIntervalEvent = InstanceType<typeof VCalendarIntervalEvent>\n", "// Styles\nimport './VCalendarHeader.sass'\n\n// Components\nimport { VBtn } from '@/components/VBtn'\n\n// Composables\nimport { useLocale } from '@/composables/locale'\n\n// Utilities\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\nexport type VCalendarHeaderSlots = {\n  title: { title?: string }\n}\n\nexport const makeVCalendarHeaderProps = propsFactory({\n  nextIcon: {\n    type: String,\n    default: '$next',\n  },\n  prevIcon: {\n    type: String,\n    default: '$prev',\n  },\n  title: String,\n  text: {\n    type: String,\n    default: '$vuetify.calendar.today',\n  },\n  viewMode: {\n    type: String as PropType<'month' | 'week' | 'day'>,\n    default: 'month',\n  },\n}, 'VCalendarHeader')\n\nexport const VCalendarHeader = genericComponent<VCalendarHeaderSlots>()({\n  name: 'VCalendarHeader',\n\n  props: makeVCalendarHeaderProps(),\n\n  emits: {\n    'click:next': () => true,\n    'click:prev': () => true,\n    'click:toToday': () => true,\n  },\n\n  setup (props, { emit, slots }) {\n    const { t } = useLocale()\n\n    function prev () {\n      emit('click:prev')\n    }\n\n    function next () {\n      emit('click:next')\n    }\n\n    function toToday () {\n      emit('click:toToday')\n    }\n\n    useRender(() => (\n      <div class=\"v-calendar-header\">\n        { props.text && (\n          <VBtn\n            key=\"today\"\n            class=\"v-calendar-header__today\"\n            text={ t(props.text) }\n            variant=\"outlined\"\n            onClick={ toToday }\n          />\n        )}\n\n        <VBtn\n          density=\"comfortable\"\n          icon={ props.prevIcon }\n          variant=\"text\"\n          onClick={ prev }\n        />\n\n        <VBtn\n          density=\"comfortable\"\n          icon={ props.nextIcon }\n          variant=\"text\"\n          onClick={ next }\n        />\n\n        <div class=\"v-calendar-header__title\">\n          { slots.title?.({ title: props.title }) ?? (\n            <span>{ props.title }</span>\n          )}\n        </div>\n      </div>\n    ))\n\n    return {}\n  },\n})\n\nexport type VCalendarHeader = InstanceType<typeof VCalendarHeader>\n", "// Styles\nimport './VCalendarMonthDay.sass'\n\n// Components\nimport { VCalendarEvent } from './VCalendarEvent'\nimport { VBtn } from '@/components/VBtn'\n\n// Utilities\nimport { genericComponent, getPrefixedEventHandlers, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { CalendarDay } from '@/composables/calendar'\n\nexport type VCalendarMonthDaySlots = {\n  dayBody: { day?: CalendarDay, events?: Array<any> }\n  dayEvent: { day?: CalendarDay, allDay: boolean, event: Record<string, unknown> }\n  dayTitle: { title?: number | string }\n}\n\nexport const makeVCalendarMonthDayProps = propsFactory({\n  active: Boolean,\n  color: String,\n  day: {\n    type: Object as PropType<CalendarDay>,\n  },\n  disabled: Boolean,\n  events: Array<any>,\n  title: [Number, String],\n}, 'VCalendarMonthDay')\n\nexport const VCalendarMonthDay = genericComponent<VCalendarMonthDaySlots>()({\n  name: 'VCalendarMonthDay',\n\n  inheritAttrs: false,\n\n  props: makeVCalendarMonthDayProps(),\n\n  setup (props, { attrs, slots }) {\n    useRender(() => {\n      return (\n        <div\n          class={[\n            'v-calendar-month__day',\n          ]}\n          { ...getPrefixedEventHandlers(attrs, ':day', () => props) }\n        >\n          { !props.day?.isHidden ? (\n            <div key=\"title\" class=\"v-calendar-weekly__day-label\">\n              { slots.dayTitle?.({ title: props.title }) ?? (\n                <VBtn\n                  class={ props.day?.isToday ? 'v-calendar-weekly__day-label__today' : undefined }\n                  color={ props.color }\n                  disabled={ props.disabled }\n                  icon\n                  size=\"x-small\"\n                  variant={ props.day?.isToday ? undefined : 'flat' }\n                  text={ `${props.title}` }\n                  { ...getPrefixedEventHandlers(attrs, ':date', () => props) }\n                />\n              )\n            }\n            </div>\n          ) : undefined }\n\n          { !props.day?.isHidden ? (\n            <div key=\"content\" class=\"v-calendar-weekly__day-content\" >\n              { slots.dayBody?.({ day: props.day, events: props.events }) ?? (\n                <div>\n                  <div class=\"v-calendar-weekly__day-alldayevents-container\">\n                    { props.events?.filter(event => event.allDay).map(event => slots.dayEvent\n                      ? slots.dayEvent({ day: props.day, allDay: true, event })\n                      : (\n                        <VCalendarEvent day={ props.day } event={ event } allDay { ...attrs } />\n                      ))}\n                  </div>\n\n                  <div class=\"v-calendar-weekly__day-events-container\">\n                    { props.events?.filter(event => !event.allDay).map(event => slots.dayEvent\n                      ? slots.dayEvent({ day: props.day, event, allDay: false })\n                      : (\n                        <VCalendarEvent day={ props.day } event={ event } { ...attrs } />\n                      ))}\n                  </div>\n                </div>\n              )}\n            </div>\n          ) : undefined }\n        </div>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VCalendarMonthDay = InstanceType<typeof VCalendarMonthDay>\n", "// Components\nimport { VBadge } from '@/components/VBadge'\nimport { VChip } from '@/components/VChip'\n\n// Utilities\nimport { genericComponent, getPrefixedEventHandlers, propsFactory, useRender } from '@/util'\n\nexport const makeVCalendarEventProps = propsFactory({\n  allDay: Boolean,\n  day: Object,\n  event: Object,\n}, 'VCalendarEvent')\n\nexport const VCalendarEvent = genericComponent()({\n  name: 'VCalendarEvent',\n\n  inheritAttrs: false,\n\n  props: makeVCalendarEventProps(),\n\n  setup (props, { attrs, emit, slots }) {\n    useRender(() => (\n      <VChip\n        color={ props.allDay ? 'primary' : undefined }\n        density=\"comfortable\"\n        label={ props.allDay }\n        width=\"100%\"\n        { ...getPrefixedEventHandlers(attrs, ':event', () => ({\n          allDay: props.allDay,\n          day: props.day,\n          event: props.event,\n        }))}\n      >\n        <VBadge\n          inline\n          dot\n          color={ props.event?.color }\n        />\n\n        { props.event?.title }\n      </VChip>\n    ))\n\n    return {}\n  },\n\n})\n\nexport type VCalendarEvent = InstanceType<typeof VCalendarEvent>\n"],
  "mappings": "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",
  "names": ["makeVCalendarIntervalEventProps", "propsFactory", "allDay", "Boolean", "interval", "Object", "intervalDivisions", "type", "Number", "required", "intervalDuration", "intervalHeight", "event", "VCalendarIntervalEvent", "genericComponent", "name", "inheritAttrs", "props", "setup", "_ref", "attrs", "emit", "slots", "adapter", "useDate", "calcHeight", "first", "last", "isEqual", "end", "height", "margin", "convertToUnit", "Array", "from", "length", "_", "x", "reduce", "total", "div", "index", "isBefore", "addMinutes", "start", "useRender", "_createElementVNode", "intervalEvent", "eventClass", "_createVNode", "VSheet", "_mergeProps", "color", "undefined", "getPrefixedEventHandlers", "day", "default", "title", "makeVCalendarIntervalProps", "propsFactory", "day", "type", "Object", "default", "dayIndex", "Number", "events", "Array", "intervalDivisions", "intervalDuration", "intervalHeight", "intervalFormat", "String", "Function", "intervalStart", "VCalendarInterval", "genericComponent", "name", "inheritAttrs", "props", "index", "required", "setup", "_ref", "attrs", "emit", "slots", "adapter", "useDate", "interval", "computed", "start", "addMinutes", "startOfDay", "date", "end", "label", "format", "filter", "e", "allDay", "isEqual", "isWithinRange", "map", "first", "last", "useRender", "_createElementVNode", "_normalizeStyle", "convertToUnit", "_mergeProps", "getPrefixedEventHandlers", "intervalTitle", "value", "some", "intervalBody", "event", "_createVNode", "VCalendarIntervalEvent", "intervalEvent", "_ref2", "height", "margin", "eventClass", "_ref3", "makeVCalendarDayProps", "propsFactory", "hideDayHeader", "Boolean", "intervals", "type", "Number", "default", "makeVCalendarIntervalProps", "VCalendarDay", "genericComponent", "name", "inheritAttrs", "props", "setup", "_ref", "attrs", "slots", "adapter", "useDate", "computed", "Array", "from", "length", "v", "i", "filter", "_", "index", "intervalDuration", "intervalStart", "useRender", "calendarIntervalProps", "VCalendarInterval", "filterProps", "_createElementVNode", "_mergeProps", "getPrefixedEventHandlers", "day", "format", "date", "_createVNode", "VBtn", "isToday", "undefined", "value", "map", "interval", "pick", "makeVCalendarHeaderProps", "propsFactory", "nextIcon", "type", "String", "default", "prevIcon", "title", "text", "viewMode", "VCalendarHeader", "genericComponent", "name", "props", "emits", "click:next", "click:prev", "click:toToday", "setup", "_ref", "emit", "slots", "t", "useLocale", "prev", "next", "toToday", "useRender", "_createElementVNode", "_createVNode", "VBtn", "makeVCalendarEventProps", "propsFactory", "allDay", "Boolean", "day", "Object", "event", "VCalendarEvent", "genericComponent", "name", "inheritAttrs", "props", "setup", "_ref", "attrs", "emit", "slots", "useRender", "_createVNode", "VChip", "_mergeProps", "undefined", "getPrefixedEventHandlers", "default", "VBadge", "color", "title", "makeVCalendarMonthDayProps", "propsFactory", "active", "Boolean", "color", "String", "day", "type", "Object", "disabled", "events", "Array", "title", "Number", "VCalendarMonthDay", "genericComponent", "name", "inheritAttrs", "props", "setup", "_ref", "attrs", "slots", "useRender", "_createElementVNode", "_mergeProps", "getPrefixedEventHandlers", "isHidden", "dayTitle", "_createVNode", "VBtn", "isToday", "undefined", "dayBody", "filter", "event", "allDay", "map", "dayEvent", "VCalendarEvent", "makeVCalendarProps", "propsFactory", "hideHeader", "Boolean", "hideWeekNumber", "makeCalendarProps", "makeVCalendarDayProps", "makeVCalendarHeaderProps", "VCalendar", "genericComponent", "name", "props", "emits", "next", "prev", "today", "setup", "_ref", "attrs", "emit", "slots", "adapter", "useDate", "daysInMonth", "daysInWeek", "genDays", "model", "displayValue", "weekNumbers", "weekDays", "useCalendar", "dayNames", "getWeekdays", "onClickNext", "viewMode", "value", "addMonths", "addDays", "nextTick", "onClickPrev", "onClickToday", "date", "title", "computed", "format", "useRender", "calendarDayProps", "VCalendarDay", "filterProps", "calendarHeaderProps", "VCalendarHeader", "_createElementVNode", "_normalizeClass", "header", "clickNext", "clickPrev", "clickToday", "_createVNode", "_mergeProps", "length", "hideDayHeader", "map", "weekday", "chunkArray", "week", "wi", "getPrefixedEventHandlers", "weekNumber", "day", "VCalendarMonthDay", "getTime", "events", "filter", "e", "isSameDay", "start", "end", "pick", "i", "dayIndex"]
}
