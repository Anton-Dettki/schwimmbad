{
  "version": 3,
  "sources": ["../../preact/hooks/src/index.js", "../../preact/compat/src/util.js", "../../preact/compat/src/hooks.js", "../../preact/compat/src/PureComponent.js", "../../preact/compat/src/memo.js", "../../preact/compat/src/forwardRef.js", "../../preact/compat/src/Children.js", "../../preact/compat/src/suspense.js", "../../preact/compat/src/suspense-list.js", "../../preact/src/constants.js", "../../preact/compat/src/portals.js", "../../preact/compat/src/render.js", "../../preact/compat/src/index.js", "../../@preact/signals-core/src/index.ts", "../../@preact/signals/src/index.ts"],
  "sourcesContent": ["import { options as _options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {import('./internal').Component} */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\n// Cast to use internal Options type\nconst options = /** @type {import('./internal').Options} */ (_options);\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\nlet oldRoot = options._root;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._root = (vnode, parentDom) => {\n\tif (vnode && parentDom._children && parentDom._children._mask) {\n\t\tvnode._mask = parentDom._children._mask;\n\t}\n\n\tif (oldRoot) oldRoot(vnode, parentDom);\n};\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\tif (previousComponent === currentComponent) {\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentComponent._renderCallbacks = [];\n\t\t\thooks._list.forEach(hookItem => {\n\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t}\n\t\t\t\thookItem._pendingArgs = hookItem._nextValue = undefined;\n\t\t\t});\n\t\t} else {\n\t\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentIndex = 0;\n\t\t}\n\t}\n\tpreviousComponent = currentComponent;\n};\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tif (c.__hooks._pendingEffects.length) afterPaint(afterPaintEffects.push(c));\n\t\tc.__hooks._list.forEach(hookItem => {\n\t\t\tif (hookItem._pendingArgs) {\n\t\t\t\thookItem._args = hookItem._pendingArgs;\n\t\t\t}\n\t\t\thookItem._pendingArgs = undefined;\n\t\t});\n\t}\n\tpreviousComponent = currentComponent = null;\n};\n\n// TODO: Improve typing of commitQueue parameter\n/** @type {(vnode: import('./internal').VNode, commitQueue: any) => void} */\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tc.__hooks = undefined;\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({});\n\t}\n\n\treturn hooks._list[index];\n}\n\n/**\n * @template {unknown} S\n * @param {import('./index').Dispatch<import('./index').StateUpdater<S>>} [initialState]\n * @returns {[S, (state: S) => void]}\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @template {unknown} S\n * @template {unknown} A\n * @param {import('./index').Reducer<S, A>} reducer\n * @param {import('./index').Dispatch<import('./index').StateUpdater<S>>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ S, (state: S) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst currentValue = hookState._nextValue\n\t\t\t\t\t? hookState._nextValue[0]\n\t\t\t\t\t: hookState._value[0];\n\t\t\t\tconst nextValue = hookState._reducer(currentValue, action);\n\n\t\t\t\tif (currentValue !== nextValue) {\n\t\t\t\t\thookState._nextValue = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\n\t\tif (!currentComponent._hasScuFromHooks) {\n\t\t\tcurrentComponent._hasScuFromHooks = true;\n\t\t\tlet prevScu = currentComponent.shouldComponentUpdate;\n\t\t\tconst prevCWU = currentComponent.componentWillUpdate;\n\n\t\t\t// If we're dealing with a forced update `shouldComponentUpdate` will\n\t\t\t// not be called. But we use that to update the hook values, so we\n\t\t\t// need to call it.\n\t\t\tcurrentComponent.componentWillUpdate = function (p, s, c) {\n\t\t\t\tif (this._force) {\n\t\t\t\t\tlet tmp = prevScu;\n\t\t\t\t\t// Clear to avoid other sCU hooks from being called\n\t\t\t\t\tprevScu = undefined;\n\t\t\t\t\tupdateHookState(p, s, c);\n\t\t\t\t\tprevScu = tmp;\n\t\t\t\t}\n\n\t\t\t\tif (prevCWU) prevCWU.call(this, p, s, c);\n\t\t\t};\n\n\t\t\t// This SCU has the purpose of bailing out after repeated updates\n\t\t\t// to stateful hooks.\n\t\t\t// we store the next value in _nextValue[0] and keep doing that for all\n\t\t\t// state setters, if we have next states and\n\t\t\t// all next states within a component end up being equal to their original state\n\t\t\t// we are safe to bail out for this specific component.\n\t\t\t/**\n\t\t\t *\n\t\t\t * @type {import('./internal').Component[\"shouldComponentUpdate\"]}\n\t\t\t */\n\t\t\t// @ts-ignore - We don't use TS to downtranspile\n\t\t\t// eslint-disable-next-line no-inner-declarations\n\t\t\tfunction updateHookState(p, s, c) {\n\t\t\t\tif (!hookState._component.__hooks) return true;\n\n\t\t\t\t/** @type {(x: import('./internal').HookState) => x is import('./internal').ReducerHookState} */\n\t\t\t\tconst isStateHook = x => !!x._component;\n\t\t\t\tconst stateHooks =\n\t\t\t\t\thookState._component.__hooks._list.filter(isStateHook);\n\n\t\t\t\tconst allHooksEmpty = stateHooks.every(x => !x._nextValue);\n\t\t\t\t// When we have no updated hooks in the component we invoke the previous SCU or\n\t\t\t\t// traverse the VDOM tree further.\n\t\t\t\tif (allHooksEmpty) {\n\t\t\t\t\treturn prevScu ? prevScu.call(this, p, s, c) : true;\n\t\t\t\t}\n\n\t\t\t\t// We check whether we have components with a nextValue set that\n\t\t\t\t// have values that aren't equal to one another this pushes\n\t\t\t\t// us to update further down the tree\n\t\t\t\tlet shouldUpdate = hookState._component.props !== p;\n\t\t\t\tstateHooks.forEach(hookItem => {\n\t\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\t\tconst currentValue = hookItem._value[0];\n\t\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t\t\thookItem._nextValue = undefined;\n\t\t\t\t\t\tif (currentValue !== hookItem._value[0]) shouldUpdate = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn prevScu\n\t\t\t\t\t? prevScu.call(this, p, s, c) || shouldUpdate\n\t\t\t\t\t: shouldUpdate;\n\t\t\t}\n\n\t\t\tcurrentComponent.shouldComponentUpdate = updateHookState;\n\t\t}\n\t}\n\n\treturn hookState._nextValue || hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {unknown[]} args\n * @returns {void}\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {unknown[]} args\n * @returns {void}\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\n/** @type {(initialValue: unknown) => unknown} */\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {unknown[]} args\n * @returns {void}\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') {\n\t\t\t\tconst result = ref(createHandle());\n\t\t\t\treturn () => {\n\t\t\t\t\tref(null);\n\t\t\t\t\tif (result && typeof result == 'function') result();\n\t\t\t\t};\n\t\t\t} else if (ref) {\n\t\t\t\tref.current = createHandle();\n\t\t\t\treturn () => (ref.current = null);\n\t\t\t}\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @template {unknown} T\n * @param {() => T} factory\n * @param {unknown[]} args\n * @returns {T}\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState<T>} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._value = factory();\n\t\tstate._args = args;\n\t\tstate._factory = factory;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {unknown[]} args\n * @returns {() => void}\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(\n\t\t\tformatter ? formatter(value) : /** @type {any}*/ (value)\n\t\t);\n\t}\n}\n\n/**\n * @param {(error: unknown, errorInfo: import('preact').ErrorInfo) => void} cb\n * @returns {[unknown, () => void]}\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = (err, errorInfo) => {\n\t\t\tif (state._value) state._value(err, errorInfo);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\n/** @type {() => string} */\nexport function useId() {\n\t/** @type {import('./internal').IdHookState} */\n\tconst state = getHookState(currentIndex++, 11);\n\tif (!state._value) {\n\t\t// Grab either the root node or the nearest async boundary node.\n\t\t/** @type {import('./internal').VNode} */\n\t\tlet root = currentComponent._vnode;\n\t\twhile (root !== null && !root._mask && root._parent !== null) {\n\t\t\troot = root._parent;\n\t\t}\n\n\t\tlet mask = root._mask || (root._mask = [0, 0]);\n\t\tstate._value = 'P' + mask[0] + '-' + mask[1]++;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom || !component.__hooks) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n * @returns {void}\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').HookState} hook\n * @returns {void}\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n * @returns {void}\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {unknown[]} oldArgs\n * @param {unknown[]} newArgs\n * @returns {boolean}\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\n/**\n * @template Arg\n * @param {Arg} arg\n * @param {(arg: Arg) => any} f\n * @returns {any}\n */\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n", "/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Check if two objects have a different shape\n * @param {object} a\n * @param {object} b\n * @returns {boolean}\n */\nexport function shallowDiffers(a, b) {\n\tfor (let i in a) if (i !== '__source' && !(i in b)) return true;\n\tfor (let i in b) if (i !== '__source' && a[i] !== b[i]) return true;\n\treturn false;\n}\n\n/**\n * Check if two values are the same value\n * @param {*} x\n * @param {*} y\n * @returns {boolean}\n */\nexport function is(x, y) {\n\treturn (x === y && (x !== 0 || 1 / x === 1 / y)) || (x !== x && y !== y);\n}\n", "import { useState, useLayoutEffect, useEffect } from 'preact/hooks';\nimport { is } from './util';\n\n/**\n * This is taken from https://github.com/facebook/react/blob/main/packages/use-sync-external-store/src/useSyncExternalStoreShimClient.js#L84\n * on a high level this cuts out the warnings, ... and attempts a smaller implementation\n * @typedef {{ _value: any; _getSnapshot: () => any }} Store\n */\nexport function useSyncExternalStore(subscribe, getSnapshot) {\n\tconst value = getSnapshot();\n\n\t/**\n\t * @typedef {{ _instance: Store }} StoreRef\n\t * @type {[StoreRef, (store: StoreRef) => void]}\n\t */\n\tconst [{ _instance }, forceUpdate] = useState({\n\t\t_instance: { _value: value, _getSnapshot: getSnapshot }\n\t});\n\n\tuseLayoutEffect(() => {\n\t\t_instance._value = value;\n\t\t_instance._getSnapshot = getSnapshot;\n\n\t\tif (didSnapshotChange(_instance)) {\n\t\t\tforceUpdate({ _instance });\n\t\t}\n\t}, [subscribe, value, getSnapshot]);\n\n\tuseEffect(() => {\n\t\tif (didSnapshotChange(_instance)) {\n\t\t\tforceUpdate({ _instance });\n\t\t}\n\n\t\treturn subscribe(() => {\n\t\t\tif (didSnapshotChange(_instance)) {\n\t\t\t\tforceUpdate({ _instance });\n\t\t\t}\n\t\t});\n\t}, [subscribe]);\n\n\treturn value;\n}\n\n/** @type {(inst: Store) => boolean} */\nfunction didSnapshotChange(inst) {\n\tconst latestGetSnapshot = inst._getSnapshot;\n\tconst prevValue = inst._value;\n\ttry {\n\t\tconst nextValue = latestGetSnapshot();\n\t\treturn !is(prevValue, nextValue);\n\t} catch (error) {\n\t\treturn true;\n\t}\n}\n\nexport function startTransition(cb) {\n\tcb();\n}\n\nexport function useDeferredValue(val) {\n\treturn val;\n}\n\nexport function useTransition() {\n\treturn [false, startTransition];\n}\n\n// TODO: in theory this should be done after a VNode is diffed as we want to insert\n// styles/... before it attaches\nexport const useInsertionEffect = useLayoutEffect;\n", "import { Component } from 'preact';\nimport { shallowDiffers } from './util';\n\n/**\n * Component class with a predefined `shouldComponentUpdate` implementation\n */\nexport function PureComponent(p, c) {\n\tthis.props = p;\n\tthis.context = c;\n}\nPureComponent.prototype = new Component();\n// Some third-party libraries check if this property is present\nPureComponent.prototype.isPureReactComponent = true;\nPureComponent.prototype.shouldComponentUpdate = function (props, state) {\n\treturn shallowDiffers(this.props, props) || shallowDiffers(this.state, state);\n};\n", "import { createElement } from 'preact';\nimport { shallowDiffers } from './util';\n\n/**\n * Memoize a component, so that it only updates when the props actually have\n * changed. This was previously known as `React.pure`.\n * @param {import('./internal').FunctionComponent} c functional component\n * @param {(prev: object, next: object) => boolean} [comparer] Custom equality function\n * @returns {import('./internal').FunctionComponent}\n */\nexport function memo(c, comparer) {\n\tfunction shouldUpdate(nextProps) {\n\t\tlet ref = this.props.ref;\n\t\tlet updateRef = ref == nextProps.ref;\n\t\tif (!updateRef && ref) {\n\t\t\tref.call ? ref(null) : (ref.current = null);\n\t\t}\n\n\t\tif (!comparer) {\n\t\t\treturn shallowDiffers(this.props, nextProps);\n\t\t}\n\n\t\treturn !comparer(this.props, nextProps) || !updateRef;\n\t}\n\n\tfunction Memoed(props) {\n\t\tthis.shouldComponentUpdate = shouldUpdate;\n\t\treturn createElement(c, props);\n\t}\n\tMemoed.displayName = 'Memo(' + (c.displayName || c.name) + ')';\n\tMemoed.prototype.isReactComponent = true;\n\tMemoed._forwarded = true;\n\treturn Memoed;\n}\n", "import { options } from 'preact';\nimport { assign } from './util';\n\nlet oldDiffHook = options._diff;\noptions._diff = vnode => {\n\tif (vnode.type && vnode.type._forwarded && vnode.ref) {\n\t\tvnode.props.ref = vnode.ref;\n\t\tvnode.ref = null;\n\t}\n\tif (oldDiffHook) oldDiffHook(vnode);\n};\n\nexport const REACT_FORWARD_SYMBOL =\n\t(typeof Symbol != 'undefined' &&\n\t\tSymbol.for &&\n\t\tSymbol.for('react.forward_ref')) ||\n\t0xf47;\n\n/**\n * Pass ref down to a child. This is mainly used in libraries with HOCs that\n * wrap components. Using `forwardRef` there is an easy way to get a reference\n * of the wrapped component instead of one of the wrapper itself.\n * @param {import('./index').ForwardFn} fn\n * @returns {import('./internal').FunctionComponent}\n */\nexport function forwardRef(fn) {\n\tfunction Forwarded(props) {\n\t\tlet clone = assign({}, props);\n\t\tdelete clone.ref;\n\t\treturn fn(clone, props.ref || null);\n\t}\n\n\t// mobx-react checks for this being present\n\tForwarded.$$typeof = REACT_FORWARD_SYMBOL;\n\t// mobx-react heavily relies on implementation details.\n\t// It expects an object here with a `render` property,\n\t// and prototype.render will fail. Without this\n\t// mobx-react throws.\n\tForwarded.render = Forwarded;\n\n\tForwarded.prototype.isReactComponent = Forwarded._forwarded = true;\n\tForwarded.displayName = 'ForwardRef(' + (fn.displayName || fn.name) + ')';\n\treturn Forwarded;\n}\n", "import { toChildArray } from 'preact';\n\nconst mapFn = (children, fn) => {\n\tif (children == null) return null;\n\treturn toChildArray(toChildArray(children).map(fn));\n};\n\n// This API is completely unnecessary for Preact, so it's basically passthrough.\nexport const Children = {\n\tmap: mapFn,\n\tforEach: mapFn,\n\tcount(children) {\n\t\treturn children ? toChildArray(children).length : 0;\n\t},\n\tonly(children) {\n\t\tconst normalized = toChildArray(children);\n\t\tif (normalized.length !== 1) throw 'Children.only';\n\t\treturn normalized[0];\n\t},\n\ttoArray: toChildArray\n};\n", "import { Component, createElement, options, Fragment } from 'preact';\nimport { MODE_HYDRATE } from '../../src/constants';\nimport { assign } from './util';\n\nconst oldCatchError = options._catchError;\noptions._catchError = function (error, newVNode, oldVNode, errorInfo) {\n\tif (error.then) {\n\t\t/** @type {import('./internal').Component} */\n\t\tlet component;\n\t\tlet vnode = newVNode;\n\n\t\tfor (; (vnode = vnode._parent); ) {\n\t\t\tif ((component = vnode._component) && component._childDidSuspend) {\n\t\t\t\tif (newVNode._dom == null) {\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t}\n\t\t\t\t// Don't call oldCatchError if we found a Suspense\n\t\t\t\treturn component._childDidSuspend(error, newVNode);\n\t\t\t}\n\t\t}\n\t}\n\toldCatchError(error, newVNode, oldVNode, errorInfo);\n};\n\nconst oldUnmount = options.unmount;\noptions.unmount = function (vnode) {\n\t/** @type {import('./internal').Component} */\n\tconst component = vnode._component;\n\tif (component && component._onResolve) {\n\t\tcomponent._onResolve();\n\t}\n\n\t// if the component is still hydrating\n\t// most likely it is because the component is suspended\n\t// we set the vnode.type as `null` so that it is not a typeof function\n\t// so the unmount will remove the vnode._dom\n\tif (component && vnode._flags & MODE_HYDRATE) {\n\t\tvnode.type = null;\n\t}\n\n\tif (oldUnmount) oldUnmount(vnode);\n};\n\nfunction detachedClone(vnode, detachedParent, parentDom) {\n\tif (vnode) {\n\t\tif (vnode._component && vnode._component.__hooks) {\n\t\t\tvnode._component.__hooks._list.forEach(effect => {\n\t\t\t\tif (typeof effect._cleanup == 'function') effect._cleanup();\n\t\t\t});\n\n\t\t\tvnode._component.__hooks = null;\n\t\t}\n\n\t\tvnode = assign({}, vnode);\n\t\tif (vnode._component != null) {\n\t\t\tif (vnode._component._parentDom === parentDom) {\n\t\t\t\tvnode._component._parentDom = detachedParent;\n\t\t\t}\n\t\t\tvnode._component = null;\n\t\t}\n\n\t\tvnode._children =\n\t\t\tvnode._children &&\n\t\t\tvnode._children.map(child =>\n\t\t\t\tdetachedClone(child, detachedParent, parentDom)\n\t\t\t);\n\t}\n\n\treturn vnode;\n}\n\nfunction removeOriginal(vnode, detachedParent, originalParent) {\n\tif (vnode && originalParent) {\n\t\tvnode._original = null;\n\t\tvnode._children =\n\t\t\tvnode._children &&\n\t\t\tvnode._children.map(child =>\n\t\t\t\tremoveOriginal(child, detachedParent, originalParent)\n\t\t\t);\n\n\t\tif (vnode._component) {\n\t\t\tif (vnode._component._parentDom === detachedParent) {\n\t\t\t\tif (vnode._dom) {\n\t\t\t\t\toriginalParent.appendChild(vnode._dom);\n\t\t\t\t}\n\t\t\t\tvnode._component._force = true;\n\t\t\t\tvnode._component._parentDom = originalParent;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn vnode;\n}\n\n// having custom inheritance instead of a class here saves a lot of bytes\nexport function Suspense() {\n\t// we do not call super here to golf some bytes...\n\tthis._pendingSuspensionCount = 0;\n\tthis._suspenders = null;\n\tthis._detachOnNextRender = null;\n}\n\n// Things we do here to save some bytes but are not proper JS inheritance:\n// - call `new Component()` as the prototype\n// - do not set `Suspense.prototype.constructor` to `Suspense`\nSuspense.prototype = new Component();\n\n/**\n * @this {import('./internal').SuspenseComponent}\n * @param {Promise} promise The thrown promise\n * @param {import('./internal').VNode<any, any>} suspendingVNode The suspending component\n */\nSuspense.prototype._childDidSuspend = function (promise, suspendingVNode) {\n\tconst suspendingComponent = suspendingVNode._component;\n\n\t/** @type {import('./internal').SuspenseComponent} */\n\tconst c = this;\n\n\tif (c._suspenders == null) {\n\t\tc._suspenders = [];\n\t}\n\tc._suspenders.push(suspendingComponent);\n\n\tconst resolve = suspended(c._vnode);\n\n\tlet resolved = false;\n\tconst onResolved = () => {\n\t\tif (resolved) return;\n\n\t\tresolved = true;\n\t\tsuspendingComponent._onResolve = null;\n\n\t\tif (resolve) {\n\t\t\tresolve(onSuspensionComplete);\n\t\t} else {\n\t\t\tonSuspensionComplete();\n\t\t}\n\t};\n\n\tsuspendingComponent._onResolve = onResolved;\n\n\tconst onSuspensionComplete = () => {\n\t\tif (!--c._pendingSuspensionCount) {\n\t\t\t// If the suspension was during hydration we don't need to restore the\n\t\t\t// suspended children into the _children array\n\t\t\tif (c.state._suspended) {\n\t\t\t\tconst suspendedVNode = c.state._suspended;\n\t\t\t\tc._vnode._children[0] = removeOriginal(\n\t\t\t\t\tsuspendedVNode,\n\t\t\t\t\tsuspendedVNode._component._parentDom,\n\t\t\t\t\tsuspendedVNode._component._originalParentDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tc.setState({ _suspended: (c._detachOnNextRender = null) });\n\n\t\t\tlet suspended;\n\t\t\twhile ((suspended = c._suspenders.pop())) {\n\t\t\t\tsuspended.forceUpdate();\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * We do not set `suspended: true` during hydration because we want the actual markup\n\t * to remain on screen and hydrate it when the suspense actually gets resolved.\n\t * While in non-hydration cases the usual fallback -> component flow would occour.\n\t */\n\tif (\n\t\t!c._pendingSuspensionCount++ &&\n\t\t!(suspendingVNode._flags & MODE_HYDRATE)\n\t) {\n\t\tc.setState({ _suspended: (c._detachOnNextRender = c._vnode._children[0]) });\n\t}\n\tpromise.then(onResolved, onResolved);\n};\n\nSuspense.prototype.componentWillUnmount = function () {\n\tthis._suspenders = [];\n};\n\n/**\n * @this {import('./internal').SuspenseComponent}\n * @param {import('./internal').SuspenseComponent[\"props\"]} props\n * @param {import('./internal').SuspenseState} state\n */\nSuspense.prototype.render = function (props, state) {\n\tif (this._detachOnNextRender) {\n\t\t// When the Suspense's _vnode was created by a call to createVNode\n\t\t// (i.e. due to a setState further up in the tree)\n\t\t// it's _children prop is null, in this case we \"forget\" about the parked vnodes to detach\n\t\tif (this._vnode._children) {\n\t\t\tconst detachedParent = document.createElement('div');\n\t\t\tconst detachedComponent = this._vnode._children[0]._component;\n\t\t\tthis._vnode._children[0] = detachedClone(\n\t\t\t\tthis._detachOnNextRender,\n\t\t\t\tdetachedParent,\n\t\t\t\t(detachedComponent._originalParentDom = detachedComponent._parentDom)\n\t\t\t);\n\t\t}\n\n\t\tthis._detachOnNextRender = null;\n\t}\n\n\t// Wrap fallback tree in a VNode that prevents itself from being marked as aborting mid-hydration:\n\t/** @type {import('./internal').VNode} */\n\tconst fallback =\n\t\tstate._suspended && createElement(Fragment, null, props.fallback);\n\tif (fallback) fallback._flags &= ~MODE_HYDRATE;\n\n\treturn [\n\t\tcreateElement(Fragment, null, state._suspended ? null : props.children),\n\t\tfallback\n\t];\n};\n\n/**\n * Checks and calls the parent component's _suspended method, passing in the\n * suspended vnode. This is a way for a parent (e.g. SuspenseList) to get notified\n * that one of its children/descendants suspended.\n *\n * The parent MAY return a callback. The callback will get called when the\n * suspension resolves, notifying the parent of the fact.\n * Moreover, the callback gets function `unsuspend` as a parameter. The resolved\n * child descendant will not actually get unsuspended until `unsuspend` gets called.\n * This is a way for the parent to delay unsuspending.\n *\n * If the parent does not return a callback then the resolved vnode\n * gets unsuspended immediately when it resolves.\n *\n * @param {import('./internal').VNode} vnode\n * @returns {((unsuspend: () => void) => void)?}\n */\nexport function suspended(vnode) {\n\t/** @type {import('./internal').Component} */\n\tlet component = vnode._parent._component;\n\treturn component && component._suspended && component._suspended(vnode);\n}\n\nexport function lazy(loader) {\n\tlet prom;\n\tlet component;\n\tlet error;\n\n\tfunction Lazy(props) {\n\t\tif (!prom) {\n\t\t\tprom = loader();\n\t\t\tprom.then(\n\t\t\t\texports => {\n\t\t\t\t\tcomponent = exports.default || exports;\n\t\t\t\t},\n\t\t\t\te => {\n\t\t\t\t\terror = e;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\n\t\tif (!component) {\n\t\t\tthrow prom;\n\t\t}\n\n\t\treturn createElement(component, props);\n\t}\n\n\tLazy.displayName = 'Lazy';\n\tLazy._forwarded = true;\n\treturn Lazy;\n}\n", "import { Component, toChildArray } from 'preact';\nimport { suspended } from './suspense.js';\n\n// Indexes to linked list nodes (nodes are stored as arrays to save bytes).\nconst SUSPENDED_COUNT = 0;\nconst RESOLVED_COUNT = 1;\nconst NEXT_NODE = 2;\n\n// Having custom inheritance instead of a class here saves a lot of bytes.\nexport function SuspenseList() {\n\tthis._next = null;\n\tthis._map = null;\n}\n\n// Mark one of child's earlier suspensions as resolved.\n// Some pending callbacks may become callable due to this\n// (e.g. the last suspended descendant gets resolved when\n// revealOrder === 'together'). Process those callbacks as well.\nconst resolve = (list, child, node) => {\n\tif (++node[RESOLVED_COUNT] === node[SUSPENDED_COUNT]) {\n\t\t// The number a child (or any of its descendants) has been suspended\n\t\t// matches the number of times it's been resolved. Therefore we\n\t\t// mark the child as completely resolved by deleting it from ._map.\n\t\t// This is used to figure out when *all* children have been completely\n\t\t// resolved when revealOrder is 'together'.\n\t\tlist._map.delete(child);\n\t}\n\n\t// If revealOrder is falsy then we can do an early exit, as the\n\t// callbacks won't get queued in the node anyway.\n\t// If revealOrder is 'together' then also do an early exit\n\t// if all suspended descendants have not yet been resolved.\n\tif (\n\t\t!list.props.revealOrder ||\n\t\t(list.props.revealOrder[0] === 't' && list._map.size)\n\t) {\n\t\treturn;\n\t}\n\n\t// Walk the currently suspended children in order, calling their\n\t// stored callbacks on the way. Stop if we encounter a child that\n\t// has not been completely resolved yet.\n\tnode = list._next;\n\twhile (node) {\n\t\twhile (node.length > 3) {\n\t\t\tnode.pop()();\n\t\t}\n\t\tif (node[RESOLVED_COUNT] < node[SUSPENDED_COUNT]) {\n\t\t\tbreak;\n\t\t}\n\t\tlist._next = node = node[NEXT_NODE];\n\t}\n};\n\n// Things we do here to save some bytes but are not proper JS inheritance:\n// - call `new Component()` as the prototype\n// - do not set `Suspense.prototype.constructor` to `Suspense`\nSuspenseList.prototype = new Component();\n\nSuspenseList.prototype._suspended = function (child) {\n\tconst list = this;\n\tconst delegated = suspended(list._vnode);\n\n\tlet node = list._map.get(child);\n\tnode[SUSPENDED_COUNT]++;\n\n\treturn unsuspend => {\n\t\tconst wrappedUnsuspend = () => {\n\t\t\tif (!list.props.revealOrder) {\n\t\t\t\t// Special case the undefined (falsy) revealOrder, as there\n\t\t\t\t// is no need to coordinate a specific order or unsuspends.\n\t\t\t\tunsuspend();\n\t\t\t} else {\n\t\t\t\tnode.push(unsuspend);\n\t\t\t\tresolve(list, child, node);\n\t\t\t}\n\t\t};\n\t\tif (delegated) {\n\t\t\tdelegated(wrappedUnsuspend);\n\t\t} else {\n\t\t\twrappedUnsuspend();\n\t\t}\n\t};\n};\n\nSuspenseList.prototype.render = function (props) {\n\tthis._next = null;\n\tthis._map = new Map();\n\n\tconst children = toChildArray(props.children);\n\tif (props.revealOrder && props.revealOrder[0] === 'b') {\n\t\t// If order === 'backwards' (or, well, anything starting with a 'b')\n\t\t// then flip the child list around so that the last child will be\n\t\t// the first in the linked list.\n\t\tchildren.reverse();\n\t}\n\t// Build the linked list. Iterate through the children in reverse order\n\t// so that `_next` points to the first linked list node to be resolved.\n\tfor (let i = children.length; i--; ) {\n\t\t// Create a new linked list node as an array of form:\n\t\t// \t[suspended_count, resolved_count, next_node]\n\t\t// where suspended_count and resolved_count are numeric counters for\n\t\t// keeping track how many times a node has been suspended and resolved.\n\t\t//\n\t\t// Note that suspended_count starts from 1 instead of 0, so we can block\n\t\t// processing callbacks until componentDidMount has been called. In a sense\n\t\t// node is suspended at least until componentDidMount gets called!\n\t\t//\n\t\t// Pending callbacks are added to the end of the node:\n\t\t// \t[suspended_count, resolved_count, next_node, callback_0, callback_1, ...]\n\t\tthis._map.set(children[i], (this._next = [1, 0, this._next]));\n\t}\n\treturn props.children;\n};\n\nSuspenseList.prototype.componentDidUpdate =\n\tSuspenseList.prototype.componentDidMount = function () {\n\t\t// Iterate through all children after mounting for two reasons:\n\t\t// 1. As each node[SUSPENDED_COUNT] starts from 1, this iteration increases\n\t\t//    each node[RELEASED_COUNT] by 1, therefore balancing the counters.\n\t\t//    The nodes can now be completely consumed from the linked list.\n\t\t// 2. Handle nodes that might have gotten resolved between render and\n\t\t//    componentDidMount.\n\t\tthis._map.forEach((node, child) => {\n\t\t\tresolve(this, child, node);\n\t\t});\n\t};\n", "/** Normal hydration that attaches to a DOM tree but does not diff it. */\nexport const MODE_HYDRATE = 1 << 5;\n/** Signifies this VNode suspended on the previous render */\nexport const MODE_SUSPENDED = 1 << 7;\n/** Indicates that this node needs to be inserted while patching children */\nexport const INSERT_VNODE = 1 << 2;\n/** Indicates a VNode has been matched with another VNode in the diff */\nexport const MATCHED = 1 << 1;\n\n/** Reset all mode flags */\nexport const RESET_MODE = ~(MODE_HYDRATE | MODE_SUSPENDED);\n\nexport const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\nexport const XHTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\nexport const MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n\nexport const NULL = null;\nexport const UNDEFINED = undefined;\nexport const EMPTY_OBJ = /** @type {any} */ ({});\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL =\n\t/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n", "import { createElement, render } from 'preact';\n\n/**\n * @param {import('../../src/index').RenderableProps<{ context: any }>} props\n */\nfunction ContextProvider(props) {\n\tthis.getChildContext = () => props.context;\n\treturn props.children;\n}\n\n/**\n * Portal component\n * @this {import('./internal').Component}\n * @param {object | null | undefined} props\n *\n * TODO: use createRoot() instead of fake root\n */\nfunction Portal(props) {\n\tconst _this = this;\n\tlet container = props._container;\n\n\t_this.componentWillUnmount = function () {\n\t\trender(null, _this._temp);\n\t\t_this._temp = null;\n\t\t_this._container = null;\n\t};\n\n\t// When we change container we should clear our old container and\n\t// indicate a new mount.\n\tif (_this._container && _this._container !== container) {\n\t\t_this.componentWillUnmount();\n\t}\n\n\tif (!_this._temp) {\n\t\t_this._container = container;\n\n\t\t// Create a fake DOM parent node that manages a subset of `container`'s children:\n\t\t_this._temp = {\n\t\t\tnodeType: 1,\n\t\t\tparentNode: container,\n\t\t\tchildNodes: [],\n\t\t\tcontains: () => true,\n\t\t\t// Technically this isn't needed\n\t\t\tappendChild(child) {\n\t\t\t\tthis.childNodes.push(child);\n\t\t\t\t_this._container.appendChild(child);\n\t\t\t},\n\t\t\tinsertBefore(child, before) {\n\t\t\t\tthis.childNodes.push(child);\n\t\t\t\t_this._container.insertBefore(child, before);\n\t\t\t},\n\t\t\tremoveChild(child) {\n\t\t\t\tthis.childNodes.splice(this.childNodes.indexOf(child) >>> 1, 1);\n\t\t\t\t_this._container.removeChild(child);\n\t\t\t}\n\t\t};\n\t}\n\n\t// Render our wrapping element into temp.\n\trender(\n\t\tcreateElement(ContextProvider, { context: _this.context }, props._vnode),\n\t\t_this._temp\n\t);\n}\n\n/**\n * Create a `Portal` to continue rendering the vnode tree at a different DOM node\n * @param {import('./internal').VNode} vnode The vnode to render\n * @param {import('./internal').PreactElement} container The DOM node to continue rendering in to.\n */\nexport function createPortal(vnode, container) {\n\tconst el = createElement(Portal, { _vnode: vnode, _container: container });\n\tel.containerInfo = container;\n\treturn el;\n}\n", "import {\n\trender as preactRender,\n\thydrate as preactHydrate,\n\toptions,\n\ttoChildArray,\n\tComponent\n} from 'preact';\nimport {\n\tuseCallback,\n\tuseContext,\n\tuseDebugValue,\n\tuseEffect,\n\tuseId,\n\tuseImperativeHandle,\n\tuseLayoutEffect,\n\tuseMemo,\n\tuseReducer,\n\tuseRef,\n\tuseState\n} from 'preact/hooks';\nimport {\n\tuseDeferredValue,\n\tuseInsertionEffect,\n\tuseSyncExternalStore,\n\tuseTransition\n} from './index';\n\nexport const REACT_ELEMENT_TYPE =\n\t(typeof Symbol != 'undefined' && Symbol.for && Symbol.for('react.element')) ||\n\t0xeac7;\n\nconst CAMEL_PROPS =\n\t/^(?:accent|alignment|arabic|baseline|cap|clip(?!PathU)|color|dominant|fill|flood|font|glyph(?!R)|horiz|image(!S)|letter|lighting|marker(?!H|W|U)|overline|paint|pointer|shape|stop|strikethrough|stroke|text(?!L)|transform|underline|unicode|units|v|vector|vert|word|writing|x(?!C))[A-Z]/;\nconst ON_ANI = /^on(Ani|Tra|Tou|BeforeInp|Compo)/;\nconst CAMEL_REPLACE = /[A-Z0-9]/g;\nconst IS_DOM = typeof document !== 'undefined';\n\n// Input types for which onchange should not be converted to oninput.\n// type=\"file|checkbox|radio\", plus \"range\" in IE11.\n// (IE11 doesn't support Symbol, which we use here to turn `rad` into `ra` which matches \"range\")\nconst onChangeInputType = type =>\n\t(typeof Symbol != 'undefined' && typeof Symbol() == 'symbol'\n\t\t? /fil|che|rad/\n\t\t: /fil|che|ra/\n\t).test(type);\n\n// Some libraries like `react-virtualized` explicitly check for this.\nComponent.prototype.isReactComponent = {};\n\n// `UNSAFE_*` lifecycle hooks\n// Preact only ever invokes the unprefixed methods.\n// Here we provide a base \"fallback\" implementation that calls any defined UNSAFE_ prefixed method.\n// - If a component defines its own `componentDidMount()` (including via defineProperty), use that.\n// - If a component defines `UNSAFE_componentDidMount()`, `componentDidMount` is the alias getter/setter.\n// - If anything assigns to an `UNSAFE_*` property, the assignment is forwarded to the unprefixed property.\n// See https://github.com/preactjs/preact/issues/1941\n[\n\t'componentWillMount',\n\t'componentWillReceiveProps',\n\t'componentWillUpdate'\n].forEach(key => {\n\tObject.defineProperty(Component.prototype, key, {\n\t\tconfigurable: true,\n\t\tget() {\n\t\t\treturn this['UNSAFE_' + key];\n\t\t},\n\t\tset(v) {\n\t\t\tObject.defineProperty(this, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\twritable: true,\n\t\t\t\tvalue: v\n\t\t\t});\n\t\t}\n\t});\n});\n\n/**\n * Proxy render() since React returns a Component reference.\n * @param {import('./internal').VNode} vnode VNode tree to render\n * @param {import('./internal').PreactElement} parent DOM node to render vnode tree into\n * @param {() => void} [callback] Optional callback that will be called after rendering\n * @returns {import('./internal').Component | null} The root component reference or null\n */\nexport function render(vnode, parent, callback) {\n\t// React destroys any existing DOM nodes, see #1727\n\t// ...but only on the first render, see #1828\n\tif (parent._children == null) {\n\t\tparent.textContent = '';\n\t}\n\n\tpreactRender(vnode, parent);\n\tif (typeof callback == 'function') callback();\n\n\treturn vnode ? vnode._component : null;\n}\n\nexport function hydrate(vnode, parent, callback) {\n\tpreactHydrate(vnode, parent);\n\tif (typeof callback == 'function') callback();\n\n\treturn vnode ? vnode._component : null;\n}\n\nlet oldEventHook = options.event;\noptions.event = e => {\n\tif (oldEventHook) e = oldEventHook(e);\n\n\te.persist = empty;\n\te.isPropagationStopped = isPropagationStopped;\n\te.isDefaultPrevented = isDefaultPrevented;\n\treturn (e.nativeEvent = e);\n};\n\nfunction empty() {}\n\nfunction isPropagationStopped() {\n\treturn this.cancelBubble;\n}\n\nfunction isDefaultPrevented() {\n\treturn this.defaultPrevented;\n}\n\nconst classNameDescriptorNonEnumberable = {\n\tenumerable: false,\n\tconfigurable: true,\n\tget() {\n\t\treturn this.class;\n\t}\n};\n\nfunction handleDomVNode(vnode) {\n\tlet props = vnode.props,\n\t\ttype = vnode.type,\n\t\tnormalizedProps = {};\n\n\tlet isNonDashedType = type.indexOf('-') === -1;\n\tfor (let i in props) {\n\t\tlet value = props[i];\n\n\t\tif (\n\t\t\t(i === 'value' && 'defaultValue' in props && value == null) ||\n\t\t\t// Emulate React's behavior of not rendering the contents of noscript tags on the client.\n\t\t\t(IS_DOM && i === 'children' && type === 'noscript') ||\n\t\t\ti === 'class' ||\n\t\t\ti === 'className'\n\t\t) {\n\t\t\t// Skip applying value if it is null/undefined and we already set\n\t\t\t// a default value\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet lowerCased = i.toLowerCase();\n\t\tif (i === 'defaultValue' && 'value' in props && props.value == null) {\n\t\t\t// `defaultValue` is treated as a fallback `value` when a value prop is present but null/undefined.\n\t\t\t// `defaultValue` for Elements with no value prop is the same as the DOM defaultValue property.\n\t\t\ti = 'value';\n\t\t} else if (i === 'download' && value === true) {\n\t\t\t// Calling `setAttribute` with a truthy value will lead to it being\n\t\t\t// passed as a stringified value, e.g. `download=\"true\"`. React\n\t\t\t// converts it to an empty string instead, otherwise the attribute\n\t\t\t// value will be used as the file name and the file will be called\n\t\t\t// \"true\" upon downloading it.\n\t\t\tvalue = '';\n\t\t} else if (lowerCased === 'translate' && value === 'no') {\n\t\t\tvalue = false;\n\t\t} else if (lowerCased[0] === 'o' && lowerCased[1] === 'n') {\n\t\t\tif (lowerCased === 'ondoubleclick') {\n\t\t\t\ti = 'ondblclick';\n\t\t\t} else if (\n\t\t\t\tlowerCased === 'onchange' &&\n\t\t\t\t(type === 'input' || type === 'textarea') &&\n\t\t\t\t!onChangeInputType(props.type)\n\t\t\t) {\n\t\t\t\tlowerCased = i = 'oninput';\n\t\t\t} else if (lowerCased === 'onfocus') {\n\t\t\t\ti = 'onfocusin';\n\t\t\t} else if (lowerCased === 'onblur') {\n\t\t\t\ti = 'onfocusout';\n\t\t\t} else if (ON_ANI.test(i)) {\n\t\t\t\ti = lowerCased;\n\t\t\t}\n\t\t} else if (isNonDashedType && CAMEL_PROPS.test(i)) {\n\t\t\ti = i.replace(CAMEL_REPLACE, '-$&').toLowerCase();\n\t\t} else if (value === null) {\n\t\t\tvalue = undefined;\n\t\t}\n\n\t\t// Add support for onInput and onChange, see #3561\n\t\t// if we have an oninput prop already change it to oninputCapture\n\t\tif (lowerCased === 'oninput') {\n\t\t\ti = lowerCased;\n\t\t\tif (normalizedProps[i]) {\n\t\t\t\ti = 'oninputCapture';\n\t\t\t}\n\t\t}\n\n\t\tnormalizedProps[i] = value;\n\t}\n\n\t// Add support for array select values: <select multiple value={[]} />\n\tif (\n\t\ttype == 'select' &&\n\t\tnormalizedProps.multiple &&\n\t\tArray.isArray(normalizedProps.value)\n\t) {\n\t\t// forEach() always returns undefined, which we abuse here to unset the value prop.\n\t\tnormalizedProps.value = toChildArray(props.children).forEach(child => {\n\t\t\tchild.props.selected =\n\t\t\t\tnormalizedProps.value.indexOf(child.props.value) != -1;\n\t\t});\n\t}\n\n\t// Adding support for defaultValue in select tag\n\tif (type == 'select' && normalizedProps.defaultValue != null) {\n\t\tnormalizedProps.value = toChildArray(props.children).forEach(child => {\n\t\t\tif (normalizedProps.multiple) {\n\t\t\t\tchild.props.selected =\n\t\t\t\t\tnormalizedProps.defaultValue.indexOf(child.props.value) != -1;\n\t\t\t} else {\n\t\t\t\tchild.props.selected =\n\t\t\t\t\tnormalizedProps.defaultValue == child.props.value;\n\t\t\t}\n\t\t});\n\t}\n\n\tif (props.class && !props.className) {\n\t\tnormalizedProps.class = props.class;\n\t\tObject.defineProperty(\n\t\t\tnormalizedProps,\n\t\t\t'className',\n\t\t\tclassNameDescriptorNonEnumberable\n\t\t);\n\t} else if (props.className && !props.class) {\n\t\tnormalizedProps.class = normalizedProps.className = props.className;\n\t} else if (props.class && props.className) {\n\t\tnormalizedProps.class = normalizedProps.className = props.className;\n\t}\n\n\tvnode.props = normalizedProps;\n}\n\nlet oldVNodeHook = options.vnode;\noptions.vnode = vnode => {\n\t// only normalize props on Element nodes\n\tif (typeof vnode.type === 'string') {\n\t\thandleDomVNode(vnode);\n\t}\n\n\tvnode.$$typeof = REACT_ELEMENT_TYPE;\n\n\tif (oldVNodeHook) oldVNodeHook(vnode);\n};\n\n// Only needed for react-relay\nlet currentComponent;\nconst oldBeforeRender = options._render;\noptions._render = function (vnode) {\n\tif (oldBeforeRender) {\n\t\toldBeforeRender(vnode);\n\t}\n\tcurrentComponent = vnode._component;\n};\n\nconst oldDiffed = options.diffed;\n/** @type {(vnode: import('./internal').VNode) => void} */\noptions.diffed = function (vnode) {\n\tif (oldDiffed) {\n\t\toldDiffed(vnode);\n\t}\n\n\tconst props = vnode.props;\n\tconst dom = vnode._dom;\n\n\tif (\n\t\tdom != null &&\n\t\tvnode.type === 'textarea' &&\n\t\t'value' in props &&\n\t\tprops.value !== dom.value\n\t) {\n\t\tdom.value = props.value == null ? '' : props.value;\n\t}\n\n\tcurrentComponent = null;\n};\n\n// This is a very very private internal function for React it\n// is used to sort-of do runtime dependency injection.\nexport const __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = {\n\tReactCurrentDispatcher: {\n\t\tcurrent: {\n\t\t\treadContext(context) {\n\t\t\t\treturn currentComponent._globalContext[context._id].props.value;\n\t\t\t},\n\t\t\tuseCallback,\n\t\t\tuseContext,\n\t\t\tuseDebugValue,\n\t\t\tuseDeferredValue,\n\t\t\tuseEffect,\n\t\t\tuseId,\n\t\t\tuseImperativeHandle,\n\t\t\tuseInsertionEffect,\n\t\t\tuseLayoutEffect,\n\t\t\tuseMemo,\n\t\t\t// useMutableSource, // experimental-only and replaced by uSES, likely not worth supporting\n\t\t\tuseReducer,\n\t\t\tuseRef,\n\t\t\tuseState,\n\t\t\tuseSyncExternalStore,\n\t\t\tuseTransition\n\t\t}\n\t}\n};\n", "import {\n\tcreateElement,\n\trender as preactRender,\n\tcloneElement as preactCloneElement,\n\tcreateRef,\n\tComponent,\n\tcreateContext,\n\tFragment\n} from 'preact';\nimport {\n\tuseState,\n\tuseId,\n\tuseReducer,\n\tuseEffect,\n\tuseLayoutEffect,\n\tuseRef,\n\tuseImperativeHandle,\n\tuseMemo,\n\tuseCallback,\n\tuseContext,\n\tuseDebugValue\n} from 'preact/hooks';\nimport {\n\tuseInsertionEffect,\n\tstartTransition,\n\tuseDeferredValue,\n\tuseSyncExternalStore,\n\tuseTransition\n} from './hooks';\nimport { PureComponent } from './PureComponent';\nimport { memo } from './memo';\nimport { forwardRef } from './forwardRef';\nimport { Children } from './Children';\nimport { Suspense, lazy } from './suspense';\nimport { SuspenseList } from './suspense-list';\nimport { createPortal } from './portals';\nimport {\n\thydrate,\n\trender,\n\tREACT_ELEMENT_TYPE,\n\t__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED\n} from './render';\n\nconst version = '18.3.1'; // trick libraries to think we are react\n\n/**\n * Legacy version of createElement.\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component constructor\n */\nfunction createFactory(type) {\n\treturn createElement.bind(null, type);\n}\n\n/**\n * Check if the passed element is a valid (p)react node.\n * @param {*} element The element to check\n * @returns {boolean}\n */\nfunction isValidElement(element) {\n\treturn !!element && element.$$typeof === REACT_ELEMENT_TYPE;\n}\n\n/**\n * Check if the passed element is a Fragment node.\n * @param {*} element The element to check\n * @returns {boolean}\n */\nfunction isFragment(element) {\n\treturn isValidElement(element) && element.type === Fragment;\n}\n\n/**\n * Check if the passed element is a Memo node.\n * @param {*} element The element to check\n * @returns {boolean}\n */\nfunction isMemo(element) {\n\treturn (\n\t\t!!element &&\n\t\t!!element.displayName &&\n\t\t(typeof element.displayName === 'string' ||\n\t\t\telement.displayName instanceof String) &&\n\t\telement.displayName.startsWith('Memo(')\n\t);\n}\n\n/**\n * Wrap `cloneElement` to abort if the passed element is not a valid element and apply\n * all vnode normalizations.\n * @param {import('./internal').VNode} element The vnode to clone\n * @param {object} props Props to add when cloning\n * @param {Array<import('./internal').ComponentChildren>} rest Optional component children\n */\nfunction cloneElement(element) {\n\tif (!isValidElement(element)) return element;\n\treturn preactCloneElement.apply(null, arguments);\n}\n\n/**\n * Remove a component tree from the DOM, including state and event handlers.\n * @param {import('./internal').PreactElement} container\n * @returns {boolean}\n */\nfunction unmountComponentAtNode(container) {\n\tif (container._children) {\n\t\tpreactRender(null, container);\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n/**\n * Get the matching DOM node for a component\n * @param {import('./internal').Component} component\n * @returns {import('./internal').PreactElement | null}\n */\nfunction findDOMNode(component) {\n\treturn (\n\t\t(component &&\n\t\t\t(component.base || (component.nodeType === 1 && component))) ||\n\t\tnull\n\t);\n}\n\n/**\n * Deprecated way to control batched rendering inside the reconciler, but we\n * already schedule in batches inside our rendering code\n * @template Arg\n * @param {(arg: Arg) => void} callback function that triggers the updated\n * @param {Arg} [arg] Optional argument that can be passed to the callback\n */\n// eslint-disable-next-line camelcase\nconst unstable_batchedUpdates = (callback, arg) => callback(arg);\n\n/**\n * In React, `flushSync` flushes the entire tree and forces a rerender. It's\n * implmented here as a no-op.\n * @template Arg\n * @template Result\n * @param {(arg: Arg) => Result} callback function that runs before the flush\n * @param {Arg} [arg] Optional argument that can be passed to the callback\n * @returns\n */\nconst flushSync = (callback, arg) => callback(arg);\n\n/**\n * Strict Mode is not implemented in Preact, so we provide a stand-in for it\n * that just renders its children without imposing any restrictions.\n */\nconst StrictMode = Fragment;\n\n// compat to react-is\nexport const isElement = isValidElement;\n\nexport * from 'preact/hooks';\nexport {\n\tversion,\n\tChildren,\n\trender,\n\thydrate,\n\tunmountComponentAtNode,\n\tcreatePortal,\n\tcreateElement,\n\tcreateContext,\n\tcreateFactory,\n\tcloneElement,\n\tcreateRef,\n\tFragment,\n\tisValidElement,\n\tisFragment,\n\tisMemo,\n\tfindDOMNode,\n\tComponent,\n\tPureComponent,\n\tmemo,\n\tforwardRef,\n\tflushSync,\n\tuseInsertionEffect,\n\tstartTransition,\n\tuseDeferredValue,\n\tuseSyncExternalStore,\n\tuseTransition,\n\t// eslint-disable-next-line camelcase\n\tunstable_batchedUpdates,\n\tStrictMode,\n\tSuspense,\n\tSuspenseList,\n\tlazy,\n\t__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED\n};\n\n// React copies the named exports to the default one.\nexport default {\n\tuseState,\n\tuseId,\n\tuseReducer,\n\tuseEffect,\n\tuseLayoutEffect,\n\tuseInsertionEffect,\n\tuseTransition,\n\tuseDeferredValue,\n\tuseSyncExternalStore,\n\tstartTransition,\n\tuseRef,\n\tuseImperativeHandle,\n\tuseMemo,\n\tuseCallback,\n\tuseContext,\n\tuseDebugValue,\n\tversion,\n\tChildren,\n\trender,\n\thydrate,\n\tunmountComponentAtNode,\n\tcreatePortal,\n\tcreateElement,\n\tcreateContext,\n\tcreateFactory,\n\tcloneElement,\n\tcreateRef,\n\tFragment,\n\tisValidElement,\n\tisElement,\n\tisFragment,\n\tisMemo,\n\tfindDOMNode,\n\tComponent,\n\tPureComponent,\n\tmemo,\n\tforwardRef,\n\tflushSync,\n\tunstable_batchedUpdates,\n\tStrictMode,\n\tSuspense,\n\tSuspenseList,\n\tlazy,\n\t__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED\n};\n", "// An named symbol/brand for detecting Signal instances even when they weren't\n// created using the same signals library version.\nconst BRAND_SYMBOL = Symbol.for(\"preact-signals\");\n\n// Flags for Computed and Effect.\nconst RUNNING = 1 << 0;\nconst NOTIFIED = 1 << 1;\nconst OUTDATED = 1 << 2;\nconst DISPOSED = 1 << 3;\nconst HAS_ERROR = 1 << 4;\nconst TRACKING = 1 << 5;\n\n// A linked list node used to track dependencies (sources) and dependents (targets).\n// Also used to remember the source's last version number that the target saw.\ntype Node = {\n\t// A source whose value the target depends on.\n\t_source: Signal;\n\t_prevSource?: Node;\n\t_nextSource?: Node;\n\n\t// A target that depends on the source and should be notified when the source changes.\n\t_target: Computed | Effect;\n\t_prevTarget?: Node;\n\t_nextTarget?: Node;\n\n\t// The version number of the source that target has last seen. We use version numbers\n\t// instead of storing the source value, because source values can take arbitrary amount\n\t// of memory, and computeds could hang on to them forever because they're lazily evaluated.\n\t// Use the special value -1 to mark potentially unused but recyclable nodes.\n\t_version: number;\n\n\t// Used to remember & roll back the source's previous `._node` value when entering &\n\t// exiting a new evaluation context.\n\t_rollbackNode?: Node;\n};\n\nfunction startBatch() {\n\tbatchDepth++;\n}\n\nfunction endBatch() {\n\tif (batchDepth > 1) {\n\t\tbatchDepth--;\n\t\treturn;\n\t}\n\n\tlet error: unknown;\n\tlet hasError = false;\n\n\twhile (batchedEffect !== undefined) {\n\t\tlet effect: Effect | undefined = batchedEffect;\n\t\tbatchedEffect = undefined;\n\n\t\tbatchIteration++;\n\n\t\twhile (effect !== undefined) {\n\t\t\tconst next: Effect | undefined = effect._nextBatchedEffect;\n\t\t\teffect._nextBatchedEffect = undefined;\n\t\t\teffect._flags &= ~NOTIFIED;\n\n\t\t\tif (!(effect._flags & DISPOSED) && needsToRecompute(effect)) {\n\t\t\t\ttry {\n\t\t\t\t\teffect._callback();\n\t\t\t\t} catch (err) {\n\t\t\t\t\tif (!hasError) {\n\t\t\t\t\t\terror = err;\n\t\t\t\t\t\thasError = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\teffect = next;\n\t\t}\n\t}\n\tbatchIteration = 0;\n\tbatchDepth--;\n\n\tif (hasError) {\n\t\tthrow error;\n\t}\n}\n\n/**\n * Combine multiple value updates into one \"commit\" at the end of the provided callback.\n *\n * Batches can be nested and changes are only flushed once the outermost batch callback\n * completes.\n *\n * Accessing a signal that has been modified within a batch will reflect its updated\n * value.\n *\n * @param fn The callback function.\n * @returns The value returned by the callback.\n */\nfunction batch<T>(fn: () => T): T {\n\tif (batchDepth > 0) {\n\t\treturn fn();\n\t}\n\t/*@__INLINE__**/ startBatch();\n\ttry {\n\t\treturn fn();\n\t} finally {\n\t\tendBatch();\n\t}\n}\n\n// Currently evaluated computed or effect.\nlet evalContext: Computed | Effect | undefined = undefined;\n\n/**\n * Run a callback function that can access signal values without\n * subscribing to the signal updates.\n *\n * @param fn The callback function.\n * @returns The value returned by the callback.\n */\nfunction untracked<T>(fn: () => T): T {\n\tconst prevContext = evalContext;\n\tevalContext = undefined;\n\ttry {\n\t\treturn fn();\n\t} finally {\n\t\tevalContext = prevContext;\n\t}\n}\n\n// Effects collected into a batch.\nlet batchedEffect: Effect | undefined = undefined;\nlet batchDepth = 0;\nlet batchIteration = 0;\n\n// A global version number for signals, used for fast-pathing repeated\n// computed.peek()/computed.value calls when nothing has changed globally.\nlet globalVersion = 0;\n\nfunction addDependency(signal: Signal): Node | undefined {\n\tif (evalContext === undefined) {\n\t\treturn undefined;\n\t}\n\n\tlet node = signal._node;\n\tif (node === undefined || node._target !== evalContext) {\n\t\t/**\n\t\t * `signal` is a new dependency. Create a new dependency node, and set it\n\t\t * as the tail of the current context's dependency list. e.g:\n\t\t *\n\t\t * { A <-> B       }\n\t\t *         ↑     ↑\n\t\t *        tail  node (new)\n\t\t *               ↓\n\t\t * { A <-> B <-> C }\n\t\t *               ↑\n\t\t *              tail (evalContext._sources)\n\t\t */\n\t\tnode = {\n\t\t\t_version: 0,\n\t\t\t_source: signal,\n\t\t\t_prevSource: evalContext._sources,\n\t\t\t_nextSource: undefined,\n\t\t\t_target: evalContext,\n\t\t\t_prevTarget: undefined,\n\t\t\t_nextTarget: undefined,\n\t\t\t_rollbackNode: node,\n\t\t};\n\n\t\tif (evalContext._sources !== undefined) {\n\t\t\tevalContext._sources._nextSource = node;\n\t\t}\n\t\tevalContext._sources = node;\n\t\tsignal._node = node;\n\n\t\t// Subscribe to change notifications from this dependency if we're in an effect\n\t\t// OR evaluating a computed signal that in turn has subscribers.\n\t\tif (evalContext._flags & TRACKING) {\n\t\t\tsignal._subscribe(node);\n\t\t}\n\t\treturn node;\n\t} else if (node._version === -1) {\n\t\t// `signal` is an existing dependency from a previous evaluation. Reuse it.\n\t\tnode._version = 0;\n\n\t\t/**\n\t\t * If `node` is not already the current tail of the dependency list (i.e.\n\t\t * there is a next node in the list), then make the `node` the new tail. e.g:\n\t\t *\n\t\t * { A <-> B <-> C <-> D }\n\t\t *         ↑           ↑\n\t\t *        node   ┌─── tail (evalContext._sources)\n\t\t *         └─────│─────┐\n\t\t *               ↓     ↓\n\t\t * { A <-> C <-> D <-> B }\n\t\t *                     ↑\n\t\t *                    tail (evalContext._sources)\n\t\t */\n\t\tif (node._nextSource !== undefined) {\n\t\t\tnode._nextSource._prevSource = node._prevSource;\n\n\t\t\tif (node._prevSource !== undefined) {\n\t\t\t\tnode._prevSource._nextSource = node._nextSource;\n\t\t\t}\n\n\t\t\tnode._prevSource = evalContext._sources;\n\t\t\tnode._nextSource = undefined;\n\n\t\t\tevalContext._sources!._nextSource = node;\n\t\t\tevalContext._sources = node;\n\t\t}\n\n\t\t// We can assume that the currently evaluated effect / computed signal is already\n\t\t// subscribed to change notifications from `signal` if needed.\n\t\treturn node;\n\t}\n\treturn undefined;\n}\n\n/**\n * The base class for plain and computed signals.\n */\n// @ts-ignore: \"Cannot redeclare exported variable 'Signal'.\"\n//\n// A function with the same name is defined later, so we need to ignore TypeScript's\n// warning about a redeclared variable.\n//\n// The class is declared here, but later implemented with ES5-style prototypes.\n// This enables better control of the transpiled output size.\ndeclare class Signal<T = any> {\n\t/** @internal */\n\t_value: unknown;\n\n\t/**\n\t * @internal\n\t * Version numbers should always be >= 0, because the special value -1 is used\n\t * by Nodes to signify potentially unused but recyclable nodes.\n\t */\n\t_version: number;\n\n\t/** @internal */\n\t_node?: Node;\n\n\t/** @internal */\n\t_targets?: Node;\n\n\tconstructor(value?: T, options?: SignalOptions<T>);\n\n\t/** @internal */\n\t_refresh(): boolean;\n\n\t/** @internal */\n\t_subscribe(node: Node): void;\n\n\t/** @internal */\n\t_unsubscribe(node: Node): void;\n\n\t/** @internal */\n\t_watched?(this: Signal<T>): void;\n\n\t/** @internal */\n\t_unwatched?(this: Signal<T>): void;\n\n\tsubscribe(fn: (value: T) => void): () => void;\n\n\tvalueOf(): T;\n\n\ttoString(): string;\n\n\ttoJSON(): T;\n\n\tpeek(): T;\n\n\tbrand: typeof BRAND_SYMBOL;\n\n\tget value(): T;\n\tset value(value: T);\n}\n\nexport interface SignalOptions<T = any> {\n\twatched?: (this: Signal<T>) => void;\n\tunwatched?: (this: Signal<T>) => void;\n}\n\n/** @internal */\n// @ts-ignore: \"Cannot redeclare exported variable 'Signal'.\"\n//\n// A class with the same name has already been declared, so we need to ignore\n// TypeScript's warning about a redeclared variable.\n//\n// The previously declared class is implemented here with ES5-style prototypes.\n// This enables better control of the transpiled output size.\nfunction Signal(this: Signal, value?: unknown, options?: SignalOptions) {\n\tthis._value = value;\n\tthis._version = 0;\n\tthis._node = undefined;\n\tthis._targets = undefined;\n\tthis._watched = options?.watched;\n\tthis._unwatched = options?.unwatched;\n}\n\nSignal.prototype.brand = BRAND_SYMBOL;\n\nSignal.prototype._refresh = function () {\n\treturn true;\n};\n\nSignal.prototype._subscribe = function (node) {\n\tconst targets = this._targets;\n\tif (targets !== node && node._prevTarget === undefined) {\n\t\tnode._nextTarget = targets;\n\t\tthis._targets = node;\n\n\t\tif (targets !== undefined) {\n\t\t\ttargets._prevTarget = node;\n\t\t} else {\n\t\t\tuntracked(() => {\n\t\t\t\tthis._watched?.call(this);\n\t\t\t});\n\t\t}\n\t}\n};\n\nSignal.prototype._unsubscribe = function (node) {\n\t// Only run the unsubscribe step if the signal has any subscribers to begin with.\n\tif (this._targets !== undefined) {\n\t\tconst prev = node._prevTarget;\n\t\tconst next = node._nextTarget;\n\t\tif (prev !== undefined) {\n\t\t\tprev._nextTarget = next;\n\t\t\tnode._prevTarget = undefined;\n\t\t}\n\n\t\tif (next !== undefined) {\n\t\t\tnext._prevTarget = prev;\n\t\t\tnode._nextTarget = undefined;\n\t\t}\n\n\t\tif (node === this._targets) {\n\t\t\tthis._targets = next;\n\t\t\tif (next === undefined) {\n\t\t\t\tuntracked(() => {\n\t\t\t\t\tthis._unwatched?.call(this);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n};\n\nSignal.prototype.subscribe = function (fn) {\n\treturn effect(() => {\n\t\tconst value = this.value;\n\n\t\tconst prevContext = evalContext;\n\t\tevalContext = undefined;\n\t\ttry {\n\t\t\tfn(value);\n\t\t} finally {\n\t\t\tevalContext = prevContext;\n\t\t}\n\t});\n};\n\nSignal.prototype.valueOf = function () {\n\treturn this.value;\n};\n\nSignal.prototype.toString = function () {\n\treturn this.value + \"\";\n};\n\nSignal.prototype.toJSON = function () {\n\treturn this.value;\n};\n\nSignal.prototype.peek = function () {\n\tconst prevContext = evalContext;\n\tevalContext = undefined;\n\ttry {\n\t\treturn this.value;\n\t} finally {\n\t\tevalContext = prevContext;\n\t}\n};\n\nObject.defineProperty(Signal.prototype, \"value\", {\n\tget(this: Signal) {\n\t\tconst node = addDependency(this);\n\t\tif (node !== undefined) {\n\t\t\tnode._version = this._version;\n\t\t}\n\t\treturn this._value;\n\t},\n\tset(this: Signal, value) {\n\t\tif (value !== this._value) {\n\t\t\tif (batchIteration > 100) {\n\t\t\t\tthrow new Error(\"Cycle detected\");\n\t\t\t}\n\n\t\t\tthis._value = value;\n\t\t\tthis._version++;\n\t\t\tglobalVersion++;\n\n\t\t\t/**@__INLINE__*/ startBatch();\n\t\t\ttry {\n\t\t\t\tfor (\n\t\t\t\t\tlet node = this._targets;\n\t\t\t\t\tnode !== undefined;\n\t\t\t\t\tnode = node._nextTarget\n\t\t\t\t) {\n\t\t\t\t\tnode._target._notify();\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tendBatch();\n\t\t\t}\n\t\t}\n\t},\n});\n\n/**\n * Create a new plain signal.\n *\n * @param value The initial value for the signal.\n * @returns A new signal.\n */\nexport function signal<T>(value: T, options?: SignalOptions<T>): Signal<T>;\nexport function signal<T = undefined>(): Signal<T | undefined>;\nexport function signal<T>(value?: T, options?: SignalOptions<T>): Signal<T> {\n\treturn new Signal(value, options);\n}\n\nfunction needsToRecompute(target: Computed | Effect): boolean {\n\t// Check the dependencies for changed values. The dependency list is already\n\t// in order of use. Therefore if multiple dependencies have changed values, only\n\t// the first used dependency is re-evaluated at this point.\n\tfor (\n\t\tlet node = target._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\tif (\n\t\t\t// If the dependency has definitely been updated since its version number\n\t\t\t// was observed, then we need to recompute. This first check is not strictly\n\t\t\t// necessary for correctness, but allows us to skip the refresh call if the\n\t\t\t// dependency has already been updated.\n\t\t\tnode._source._version !== node._version ||\n\t\t\t// Refresh the dependency. If there's something blocking the refresh (e.g. a\n\t\t\t// dependency cycle), then we need to recompute.\n\t\t\t!node._source._refresh() ||\n\t\t\t// If the dependency got a new version after the refresh, then we need to recompute.\n\t\t\tnode._source._version !== node._version\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\t}\n\t// If none of the dependencies have changed values since last recompute then\n\t// there's no need to recompute.\n\treturn false;\n}\n\nfunction prepareSources(target: Computed | Effect) {\n\t/**\n\t * 1. Mark all current sources as re-usable nodes (version: -1)\n\t * 2. Set a rollback node if the current node is being used in a different context\n\t * 3. Point 'target._sources' to the tail of the doubly-linked list, e.g:\n\t *\n\t *    { undefined <- A <-> B <-> C -> undefined }\n\t *                   ↑           ↑\n\t *                   │           └──────┐\n\t * target._sources = A; (node is head)  │\n\t *                   ↓                  │\n\t * target._sources = C; (node is tail) ─┘\n\t */\n\tfor (\n\t\tlet node = target._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\tconst rollbackNode = node._source._node;\n\t\tif (rollbackNode !== undefined) {\n\t\t\tnode._rollbackNode = rollbackNode;\n\t\t}\n\t\tnode._source._node = node;\n\t\tnode._version = -1;\n\n\t\tif (node._nextSource === undefined) {\n\t\t\ttarget._sources = node;\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nfunction cleanupSources(target: Computed | Effect) {\n\tlet node = target._sources;\n\tlet head: Node | undefined = undefined;\n\n\t/**\n\t * At this point 'target._sources' points to the tail of the doubly-linked list.\n\t * It contains all existing sources + new sources in order of use.\n\t * Iterate backwards until we find the head node while dropping old dependencies.\n\t */\n\twhile (node !== undefined) {\n\t\tconst prev = node._prevSource;\n\n\t\t/**\n\t\t * The node was not re-used, unsubscribe from its change notifications and remove itself\n\t\t * from the doubly-linked list. e.g:\n\t\t *\n\t\t * { A <-> B <-> C }\n\t\t *         ↓\n\t\t *    { A <-> C }\n\t\t */\n\t\tif (node._version === -1) {\n\t\t\tnode._source._unsubscribe(node);\n\n\t\t\tif (prev !== undefined) {\n\t\t\t\tprev._nextSource = node._nextSource;\n\t\t\t}\n\t\t\tif (node._nextSource !== undefined) {\n\t\t\t\tnode._nextSource._prevSource = prev;\n\t\t\t}\n\t\t} else {\n\t\t\t/**\n\t\t\t * The new head is the last node seen which wasn't removed/unsubscribed\n\t\t\t * from the doubly-linked list. e.g:\n\t\t\t *\n\t\t\t * { A <-> B <-> C }\n\t\t\t *   ↑     ↑     ↑\n\t\t\t *   │     │     └ head = node\n\t\t\t *   │     └ head = node\n\t\t\t *   └ head = node\n\t\t\t */\n\t\t\thead = node;\n\t\t}\n\n\t\tnode._source._node = node._rollbackNode;\n\t\tif (node._rollbackNode !== undefined) {\n\t\t\tnode._rollbackNode = undefined;\n\t\t}\n\n\t\tnode = prev;\n\t}\n\n\ttarget._sources = head;\n}\n\ndeclare class Computed<T = any> extends Signal<T> {\n\t_fn: () => T;\n\t_sources?: Node;\n\t_globalVersion: number;\n\t_flags: number;\n\n\tconstructor(fn: () => T, options?: SignalOptions<T>);\n\n\t_notify(): void;\n\tget value(): T;\n}\n\nfunction Computed(this: Computed, fn: () => unknown, options?: SignalOptions) {\n\tSignal.call(this, undefined);\n\n\tthis._fn = fn;\n\tthis._sources = undefined;\n\tthis._globalVersion = globalVersion - 1;\n\tthis._flags = OUTDATED;\n\tthis._watched = options?.watched;\n\tthis._unwatched = options?.unwatched;\n}\n\nComputed.prototype = new Signal() as Computed;\n\nComputed.prototype._refresh = function () {\n\tthis._flags &= ~NOTIFIED;\n\n\tif (this._flags & RUNNING) {\n\t\treturn false;\n\t}\n\n\t// If this computed signal has subscribed to updates from its dependencies\n\t// (TRACKING flag set) and none of them have notified about changes (OUTDATED\n\t// flag not set), then the computed value can't have changed.\n\tif ((this._flags & (OUTDATED | TRACKING)) === TRACKING) {\n\t\treturn true;\n\t}\n\tthis._flags &= ~OUTDATED;\n\n\tif (this._globalVersion === globalVersion) {\n\t\treturn true;\n\t}\n\tthis._globalVersion = globalVersion;\n\n\t// Mark this computed signal running before checking the dependencies for value\n\t// changes, so that the RUNNING flag can be used to notice cyclical dependencies.\n\tthis._flags |= RUNNING;\n\tif (this._version > 0 && !needsToRecompute(this)) {\n\t\tthis._flags &= ~RUNNING;\n\t\treturn true;\n\t}\n\n\tconst prevContext = evalContext;\n\ttry {\n\t\tprepareSources(this);\n\t\tevalContext = this;\n\t\tconst value = this._fn();\n\t\tif (\n\t\t\tthis._flags & HAS_ERROR ||\n\t\t\tthis._value !== value ||\n\t\t\tthis._version === 0\n\t\t) {\n\t\t\tthis._value = value;\n\t\t\tthis._flags &= ~HAS_ERROR;\n\t\t\tthis._version++;\n\t\t}\n\t} catch (err) {\n\t\tthis._value = err;\n\t\tthis._flags |= HAS_ERROR;\n\t\tthis._version++;\n\t}\n\tevalContext = prevContext;\n\tcleanupSources(this);\n\tthis._flags &= ~RUNNING;\n\treturn true;\n};\n\nComputed.prototype._subscribe = function (node) {\n\tif (this._targets === undefined) {\n\t\tthis._flags |= OUTDATED | TRACKING;\n\n\t\t// A computed signal subscribes lazily to its dependencies when it\n\t\t// gets its first subscriber.\n\t\tfor (\n\t\t\tlet node = this._sources;\n\t\t\tnode !== undefined;\n\t\t\tnode = node._nextSource\n\t\t) {\n\t\t\tnode._source._subscribe(node);\n\t\t}\n\t}\n\tSignal.prototype._subscribe.call(this, node);\n};\n\nComputed.prototype._unsubscribe = function (node) {\n\t// Only run the unsubscribe step if the computed signal has any subscribers.\n\tif (this._targets !== undefined) {\n\t\tSignal.prototype._unsubscribe.call(this, node);\n\n\t\t// Computed signal unsubscribes from its dependencies when it loses its last subscriber.\n\t\t// This makes it possible for unreferences subgraphs of computed signals to get garbage collected.\n\t\tif (this._targets === undefined) {\n\t\t\tthis._flags &= ~TRACKING;\n\n\t\t\tfor (\n\t\t\t\tlet node = this._sources;\n\t\t\t\tnode !== undefined;\n\t\t\t\tnode = node._nextSource\n\t\t\t) {\n\t\t\t\tnode._source._unsubscribe(node);\n\t\t\t}\n\t\t}\n\t}\n};\n\nComputed.prototype._notify = function () {\n\tif (!(this._flags & NOTIFIED)) {\n\t\tthis._flags |= OUTDATED | NOTIFIED;\n\n\t\tfor (\n\t\t\tlet node = this._targets;\n\t\t\tnode !== undefined;\n\t\t\tnode = node._nextTarget\n\t\t) {\n\t\t\tnode._target._notify();\n\t\t}\n\t}\n};\n\nObject.defineProperty(Computed.prototype, \"value\", {\n\tget(this: Computed) {\n\t\tif (this._flags & RUNNING) {\n\t\t\tthrow new Error(\"Cycle detected\");\n\t\t}\n\t\tconst node = addDependency(this);\n\t\tthis._refresh();\n\t\tif (node !== undefined) {\n\t\t\tnode._version = this._version;\n\t\t}\n\t\tif (this._flags & HAS_ERROR) {\n\t\t\tthrow this._value;\n\t\t}\n\t\treturn this._value;\n\t},\n});\n\n/**\n * An interface for read-only signals.\n */\ninterface ReadonlySignal<T = any> {\n\treadonly value: T;\n\tpeek(): T;\n\n\tsubscribe(fn: (value: T) => void): () => void;\n\tvalueOf(): T;\n\ttoString(): string;\n\ttoJSON(): T;\n\tbrand: typeof BRAND_SYMBOL;\n}\n\n/**\n * Create a new signal that is computed based on the values of other signals.\n *\n * The returned computed signal is read-only, and its value is automatically\n * updated when any signals accessed from within the callback function change.\n *\n * @param fn The effect callback.\n * @returns A new read-only signal.\n */\nfunction computed<T>(\n\tfn: () => T,\n\toptions?: SignalOptions<T>\n): ReadonlySignal<T> {\n\treturn new Computed(fn, options);\n}\n\nfunction cleanupEffect(effect: Effect) {\n\tconst cleanup = effect._cleanup;\n\teffect._cleanup = undefined;\n\n\tif (typeof cleanup === \"function\") {\n\t\t/*@__INLINE__**/ startBatch();\n\n\t\t// Run cleanup functions always outside of any context.\n\t\tconst prevContext = evalContext;\n\t\tevalContext = undefined;\n\t\ttry {\n\t\t\tcleanup();\n\t\t} catch (err) {\n\t\t\teffect._flags &= ~RUNNING;\n\t\t\teffect._flags |= DISPOSED;\n\t\t\tdisposeEffect(effect);\n\t\t\tthrow err;\n\t\t} finally {\n\t\t\tevalContext = prevContext;\n\t\t\tendBatch();\n\t\t}\n\t}\n}\n\nfunction disposeEffect(effect: Effect) {\n\tfor (\n\t\tlet node = effect._sources;\n\t\tnode !== undefined;\n\t\tnode = node._nextSource\n\t) {\n\t\tnode._source._unsubscribe(node);\n\t}\n\teffect._fn = undefined;\n\teffect._sources = undefined;\n\n\tcleanupEffect(effect);\n}\n\nfunction endEffect(this: Effect, prevContext?: Computed | Effect) {\n\tif (evalContext !== this) {\n\t\tthrow new Error(\"Out-of-order effect\");\n\t}\n\tcleanupSources(this);\n\tevalContext = prevContext;\n\n\tthis._flags &= ~RUNNING;\n\tif (this._flags & DISPOSED) {\n\t\tdisposeEffect(this);\n\t}\n\tendBatch();\n}\n\ntype EffectFn =\n\t| ((this: { dispose: () => void }) => void | (() => void))\n\t| (() => void | (() => void));\n\ndeclare class Effect {\n\t_fn?: EffectFn;\n\t_cleanup?: () => void;\n\t_sources?: Node;\n\t_nextBatchedEffect?: Effect;\n\t_flags: number;\n\n\tconstructor(fn: EffectFn);\n\n\t_callback(): void;\n\t_start(): () => void;\n\t_notify(): void;\n\t_dispose(): void;\n\tdispose(): void;\n}\n\nfunction Effect(this: Effect, fn: EffectFn) {\n\tthis._fn = fn;\n\tthis._cleanup = undefined;\n\tthis._sources = undefined;\n\tthis._nextBatchedEffect = undefined;\n\tthis._flags = TRACKING;\n}\n\nEffect.prototype._callback = function () {\n\tconst finish = this._start();\n\ttry {\n\t\tif (this._flags & DISPOSED) return;\n\t\tif (this._fn === undefined) return;\n\n\t\tconst cleanup = this._fn();\n\t\tif (typeof cleanup === \"function\") {\n\t\t\tthis._cleanup = cleanup;\n\t\t}\n\t} finally {\n\t\tfinish();\n\t}\n};\n\nEffect.prototype._start = function () {\n\tif (this._flags & RUNNING) {\n\t\tthrow new Error(\"Cycle detected\");\n\t}\n\tthis._flags |= RUNNING;\n\tthis._flags &= ~DISPOSED;\n\tcleanupEffect(this);\n\tprepareSources(this);\n\n\t/*@__INLINE__**/ startBatch();\n\tconst prevContext = evalContext;\n\tevalContext = this;\n\treturn endEffect.bind(this, prevContext);\n};\n\nEffect.prototype._notify = function () {\n\tif (!(this._flags & NOTIFIED)) {\n\t\tthis._flags |= NOTIFIED;\n\t\tthis._nextBatchedEffect = batchedEffect;\n\t\tbatchedEffect = this;\n\t}\n};\n\nEffect.prototype._dispose = function () {\n\tthis._flags |= DISPOSED;\n\n\tif (!(this._flags & RUNNING)) {\n\t\tdisposeEffect(this);\n\t}\n};\n\nEffect.prototype.dispose = function () {\n\tthis._dispose();\n};\n/**\n * Create an effect to run arbitrary code in response to signal changes.\n *\n * An effect tracks which signals are accessed within the given callback\n * function `fn`, and re-runs the callback when those signals change.\n *\n * The callback may return a cleanup function. The cleanup function gets\n * run once, either when the callback is next called or when the effect\n * gets disposed, whichever happens first.\n *\n * @param fn The effect callback.\n * @returns A function for disposing the effect.\n */\nfunction effect(fn: EffectFn): () => void {\n\tconst effect = new Effect(fn);\n\ttry {\n\t\teffect._callback();\n\t} catch (err) {\n\t\teffect._dispose();\n\t\tthrow err;\n\t}\n\t// Return a bound function instead of a wrapper like `() => effect._dispose()`,\n\t// because bound functions seem to be just as fast and take up a lot less memory.\n\treturn effect._dispose.bind(effect);\n}\n\nexport { computed, effect, batch, untracked, Signal, ReadonlySignal };\n", "import { options, Component, isValidElement } from \"preact\";\nimport { useRef, useMemo, useEffect } from \"preact/hooks\";\nimport {\n\tsignal,\n\tcomputed,\n\tbatch,\n\teffect,\n\tSignal,\n\ttype ReadonlySignal,\n\tuntracked,\n} from \"@preact/signals-core\";\nimport {\n\tVNode,\n\tOptionsTypes,\n\tHookFn,\n\tEffect,\n\tPropertyUpdater,\n\tAugmentedComponent,\n\tAugmentedElement as Element,\n} from \"./internal\";\n\nexport {\n\tsignal,\n\tcomputed,\n\tbatch,\n\teffect,\n\tSignal,\n\ttype ReadonlySignal,\n\tuntracked,\n};\n\nconst HAS_PENDING_UPDATE = 1 << 0;\nconst HAS_HOOK_STATE = 1 << 1;\nconst HAS_COMPUTEDS = 1 << 2;\n\nlet oldNotify: (this: Effect) => void,\n\teffectsQueue: Array<Effect> = [],\n\tdomQueue: Array<Effect> = [];\n\n// Capture the original `Effect.prototype._notify` method so that we can install\n// custom `._notify`s for each different use-case but still call the original\n// implementation in the end. Dispose the temporary effect immediately afterwards.\neffect(function (this: Effect) {\n\toldNotify = this._notify;\n})();\n\n// Install a Preact options hook\nfunction hook<T extends OptionsTypes>(hookName: T, hookFn: HookFn<T>) {\n\t// @ts-ignore-next-line private options hooks usage\n\toptions[hookName] = hookFn.bind(null, options[hookName] || (() => {}));\n}\n\nlet currentComponent: AugmentedComponent | undefined;\nlet finishUpdate: (() => void) | undefined;\n\nfunction setCurrentUpdater(updater?: Effect) {\n\t// end tracking for the current update:\n\tif (finishUpdate) finishUpdate();\n\t// start tracking the new update:\n\tfinishUpdate = updater && updater._start();\n}\n\nfunction createUpdater(update: () => void) {\n\tlet updater!: Effect;\n\teffect(function (this: Effect) {\n\t\tupdater = this;\n\t});\n\tupdater._callback = update;\n\treturn updater;\n}\n\n/** @todo This may be needed for complex prop value detection. */\n// function isSignalValue(value: any): value is Signal {\n// \tif (typeof value !== \"object\" || value == null) return false;\n// \tif (value instanceof Signal) return true;\n// \t// @TODO: uncomment this when we land Reactive (ideally behind a brand check)\n// \t// for (let i in value) if (value[i] instanceof Signal) return true;\n// \treturn false;\n// }\n\n/**\n * A wrapper component that renders a Signal directly as a Text node.\n * @todo: in Preact 11, just decorate Signal with `type:null`\n */\nfunction SignalValue(this: AugmentedComponent, { data }: { data: Signal }) {\n\t// hasComputeds.add(this);\n\n\t// Store the props.data signal in another signal so that\n\t// passing a new signal reference re-runs the text computed:\n\tconst currentSignal = useSignal(data);\n\tcurrentSignal.value = data;\n\n\tconst [isText, s] = useMemo(() => {\n\t\tlet self = this;\n\t\t// mark the parent component as having computeds so it gets optimized\n\t\tlet v = this.__v;\n\t\twhile ((v = v.__!)) {\n\t\t\tif (v.__c) {\n\t\t\t\tv.__c._updateFlags |= HAS_COMPUTEDS;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tconst wrappedSignal = computed(() => {\n\t\t\tlet s = currentSignal.value.value;\n\t\t\treturn s === 0 ? 0 : s === true ? \"\" : s || \"\";\n\t\t});\n\n\t\tconst isText = computed(() => !isValidElement(wrappedSignal.value));\n\n\t\t// Update text nodes directly without rerendering when the new value\n\t\t// is also text.\n\t\tconst dispose = effect(function (this: Effect) {\n\t\t\tthis._notify = notifyDomUpdates;\n\n\t\t\t// Subscribe to wrappedSignal updates only when its values are text...\n\t\t\tif (isText.value) {\n\t\t\t\t// ...but regardless of `self.base`'s current value, as it can be\n\t\t\t\t// undefined before mounting or a non-text node. In both of those cases\n\t\t\t\t// the update gets handled by a full rerender.\n\t\t\t\tconst value = wrappedSignal.value;\n\t\t\t\tif (self.__v && self.__v.__e && self.__v.__e.nodeType === 3) {\n\t\t\t\t\t(self.__v.__e as Text).data = value;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// Piggyback this._updater's disposal to ensure that the text updater effect\n\t\t// above also gets disposed on unmount.\n\t\tconst oldDispose = this._updater!._dispose;\n\t\tthis._updater!._dispose = function () {\n\t\t\tdispose();\n\t\t\toldDispose.call(this);\n\t\t};\n\n\t\treturn [isText, wrappedSignal];\n\t}, []);\n\n\t// Rerender the component whenever `data.value` changes from a VNode\n\t// to another VNode, from text to a VNode, or from a VNode to text.\n\t// That is, everything else except text-to-text updates.\n\t//\n\t// This also ensures that the backing DOM node types gets updated to\n\t// text nodes and back when needed.\n\t//\n\t// For text-to-text updates, `.peek()` is used to skip full rerenders,\n\t// leaving them to the optimized path above.\n\treturn isText.value ? s.peek() : s.value;\n}\nSignalValue.displayName = \"_st\";\n\nObject.defineProperties(Signal.prototype, {\n\tconstructor: { configurable: true, value: undefined },\n\ttype: { configurable: true, value: SignalValue },\n\tprops: {\n\t\tconfigurable: true,\n\t\tget() {\n\t\t\treturn { data: this };\n\t\t},\n\t},\n\t// Setting a VNode's _depth to 1 forces Preact to clone it before modifying:\n\t// https://github.com/preactjs/preact/blob/d7a433ee8463a7dc23a05111bb47de9ec729ad4d/src/diff/children.js#L77\n\t// @todo remove this for Preact 11\n\t__b: { configurable: true, value: 1 },\n});\n\n/** Inject low-level property/attribute bindings for Signals into Preact's diff */\nhook(OptionsTypes.DIFF, (old, vnode) => {\n\tif (typeof vnode.type === \"string\") {\n\t\tlet signalProps: Record<string, any> | undefined;\n\n\t\tlet props = vnode.props;\n\t\tfor (let i in props) {\n\t\t\tif (i === \"children\") continue;\n\n\t\t\tlet value = props[i];\n\t\t\tif (value instanceof Signal) {\n\t\t\t\tif (!signalProps) vnode.__np = signalProps = {};\n\t\t\t\tsignalProps[i] = value;\n\t\t\t\tprops[i] = value.peek();\n\t\t\t}\n\t\t}\n\t}\n\n\told(vnode);\n});\n\n/** Set up Updater before rendering a component */\nhook(OptionsTypes.RENDER, (old, vnode) => {\n\tsetCurrentUpdater();\n\n\tlet updater;\n\n\tlet component = vnode.__c;\n\tif (component) {\n\t\tcomponent._updateFlags &= ~HAS_PENDING_UPDATE;\n\n\t\tupdater = component._updater;\n\t\tif (updater === undefined) {\n\t\t\tcomponent._updater = updater = createUpdater(() => {\n\t\t\t\tcomponent._updateFlags |= HAS_PENDING_UPDATE;\n\t\t\t\tcomponent.setState({});\n\t\t\t});\n\t\t}\n\t}\n\n\tcurrentComponent = component;\n\tsetCurrentUpdater(updater);\n\told(vnode);\n});\n\n/** Finish current updater if a component errors */\nhook(OptionsTypes.CATCH_ERROR, (old, error, vnode, oldVNode) => {\n\tsetCurrentUpdater();\n\tcurrentComponent = undefined;\n\told(error, vnode, oldVNode);\n});\n\n/** Finish current updater after rendering any VNode */\nhook(OptionsTypes.DIFFED, (old, vnode) => {\n\tsetCurrentUpdater();\n\tcurrentComponent = undefined;\n\n\tlet dom: Element;\n\n\t// vnode._dom is undefined during string rendering,\n\t// so we use this to skip prop subscriptions during SSR.\n\tif (typeof vnode.type === \"string\" && (dom = vnode.__e as Element)) {\n\t\tlet props = vnode.__np;\n\t\tlet renderedProps = vnode.props;\n\t\tif (props) {\n\t\t\tlet updaters = dom._updaters;\n\t\t\tif (updaters) {\n\t\t\t\tfor (let prop in updaters) {\n\t\t\t\t\tlet updater = updaters[prop];\n\t\t\t\t\tif (updater !== undefined && !(prop in props)) {\n\t\t\t\t\t\tupdater._dispose();\n\t\t\t\t\t\t// @todo we could just always invoke _dispose() here\n\t\t\t\t\t\tupdaters[prop] = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tupdaters = {};\n\t\t\t\tdom._updaters = updaters;\n\t\t\t}\n\t\t\tfor (let prop in props) {\n\t\t\t\tlet updater = updaters[prop];\n\t\t\t\tlet signal = props[prop];\n\t\t\t\tif (updater === undefined) {\n\t\t\t\t\tupdater = createPropUpdater(dom, prop, signal, renderedProps);\n\t\t\t\t\tupdaters[prop] = updater;\n\t\t\t\t} else {\n\t\t\t\t\tupdater._update(signal, renderedProps);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\told(vnode);\n});\n\nfunction createPropUpdater(\n\tdom: Element,\n\tprop: string,\n\tpropSignal: Signal,\n\tprops: Record<string, any>\n): PropertyUpdater {\n\tconst setAsProperty =\n\t\tprop in dom &&\n\t\t// SVG elements need to go through `setAttribute` because they\n\t\t// expect things like SVGAnimatedTransformList instead of strings.\n\t\t// @ts-ignore\n\t\tdom.ownerSVGElement === undefined;\n\n\tconst changeSignal = signal(propSignal);\n\treturn {\n\t\t_update: (newSignal: Signal, newProps: typeof props) => {\n\t\t\tchangeSignal.value = newSignal;\n\t\t\tprops = newProps;\n\t\t},\n\t\t_dispose: effect(function (this: Effect) {\n\t\t\tthis._notify = notifyDomUpdates;\n\t\t\tconst value = changeSignal.value.value;\n\t\t\t// If Preact just rendered this value, don't render it again:\n\t\t\tif (props[prop] === value) return;\n\t\t\tprops[prop] = value;\n\t\t\tif (setAsProperty) {\n\t\t\t\t// @ts-ignore-next-line silly\n\t\t\t\tdom[prop] = value;\n\t\t\t} else if (value) {\n\t\t\t\tdom.setAttribute(prop, value);\n\t\t\t} else {\n\t\t\t\tdom.removeAttribute(prop);\n\t\t\t}\n\t\t}),\n\t};\n}\n\n/** Unsubscribe from Signals when unmounting components/vnodes */\nhook(OptionsTypes.UNMOUNT, (old, vnode: VNode) => {\n\tif (typeof vnode.type === \"string\") {\n\t\tlet dom = vnode.__e as Element | undefined;\n\t\t// vnode._dom is undefined during string rendering\n\t\tif (dom) {\n\t\t\tconst updaters = dom._updaters;\n\t\t\tif (updaters) {\n\t\t\t\tdom._updaters = undefined;\n\t\t\t\tfor (let prop in updaters) {\n\t\t\t\t\tlet updater = updaters[prop];\n\t\t\t\t\tif (updater) updater._dispose();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\tlet component = vnode.__c;\n\t\tif (component) {\n\t\t\tconst updater = component._updater;\n\t\t\tif (updater) {\n\t\t\t\tcomponent._updater = undefined;\n\t\t\t\tupdater._dispose();\n\t\t\t}\n\t\t}\n\t}\n\told(vnode);\n});\n\n/** Mark components that use hook state so we can skip sCU optimization. */\nhook(OptionsTypes.HOOK, (old, component, index, type) => {\n\tif (type < 3 || type === 9)\n\t\t(component as AugmentedComponent)._updateFlags |= HAS_HOOK_STATE;\n\told(component, index, type);\n});\n\n/**\n * Auto-memoize components that use Signals/Computeds.\n * Note: Does _not_ optimize components that use hook/class state.\n */\nComponent.prototype.shouldComponentUpdate = function (\n\tthis: AugmentedComponent,\n\tprops,\n\tstate\n) {\n\t// @todo: Once preactjs/preact#3671 lands, this could just use `currentUpdater`:\n\tconst updater = this._updater;\n\tconst hasSignals = updater && updater._sources !== undefined;\n\n\t// If this is a component using state, rerender\n\t// @ts-ignore\n\tfor (let i in state) return true;\n\n\tif (this.__f || (typeof this.u == \"boolean\" && this.u === true)) {\n\t\tconst hasHooksState = this._updateFlags & HAS_HOOK_STATE;\n\t\t// if this component used no signals or computeds and no hooks state, update:\n\t\tif (!hasSignals && !hasHooksState && !(this._updateFlags & HAS_COMPUTEDS))\n\t\t\treturn true;\n\n\t\t// if there is a pending re-render triggered from Signals,\n\t\t// or if there is hooks state, update:\n\t\tif (this._updateFlags & HAS_PENDING_UPDATE) return true;\n\t} else {\n\t\t// if this component used no signals or computeds, update:\n\t\tif (!hasSignals && !(this._updateFlags & HAS_COMPUTEDS)) return true;\n\n\t\t// if there is a pending re-render triggered from Signals,\n\t\t// or if there is hooks state, update:\n\t\tif (this._updateFlags & (HAS_PENDING_UPDATE | HAS_HOOK_STATE)) return true;\n\t}\n\n\t// if any non-Signal props changed, update:\n\tfor (let i in props) {\n\t\tif (i !== \"__source\" && props[i] !== this.props[i]) return true;\n\t}\n\tfor (let i in this.props) if (!(i in props)) return true;\n\n\t// this is a purely Signal-driven component, don't update:\n\treturn false;\n};\n\nexport function useSignal<T>(value: T): Signal<T>;\nexport function useSignal<T = undefined>(): Signal<T | undefined>;\nexport function useSignal<T>(value?: T) {\n\treturn useMemo(() => signal<T | undefined>(value), []);\n}\n\nexport function useComputed<T>(compute: () => T) {\n\tconst $compute = useRef(compute);\n\t$compute.current = compute;\n\t(currentComponent as AugmentedComponent)._updateFlags |= HAS_COMPUTEDS;\n\treturn useMemo(() => computed<T>(() => $compute.current()), []);\n}\n\nfunction safeRaf(callback: () => void) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tcancelAnimationFrame(raf);\n\t\tcallback();\n\t};\n\n\tconst timeout = setTimeout(done, 100);\n\tconst raf = requestAnimationFrame(done);\n}\n\nconst deferEffects =\n\ttypeof requestAnimationFrame === \"undefined\" ? setTimeout : safeRaf;\n\nconst deferDomUpdates = (cb: any) => {\n\tqueueMicrotask(() => {\n\t\tqueueMicrotask(cb);\n\t});\n};\n\nfunction flushEffects() {\n\tbatch(() => {\n\t\tlet inst: Effect | undefined;\n\t\twhile ((inst = effectsQueue.shift())) {\n\t\t\toldNotify.call(inst);\n\t\t}\n\t});\n}\n\nfunction notifyEffects(this: Effect) {\n\tif (effectsQueue.push(this) === 1) {\n\t\t(options.requestAnimationFrame || deferEffects)(flushEffects);\n\t}\n}\n\nfunction flushDomUpdates() {\n\tbatch(() => {\n\t\tlet inst: Effect | undefined;\n\t\twhile ((inst = domQueue.shift())) {\n\t\t\toldNotify.call(inst);\n\t\t}\n\t});\n}\n\nfunction notifyDomUpdates(this: Effect) {\n\tif (domQueue.push(this) === 1) {\n\t\t(options.requestAnimationFrame || deferDomUpdates)(flushDomUpdates);\n\t}\n}\n\nexport function useSignalEffect(cb: () => void | (() => void)) {\n\tconst callback = useRef(cb);\n\tcallback.current = cb;\n\n\tuseEffect(() => {\n\t\treturn effect(function (this: Effect) {\n\t\t\tthis._notify = notifyEffects;\n\t\t\treturn callback.current();\n\t\t});\n\t}, []);\n}\n\n/**\n * @todo Determine which Reactive implementation we'll be using.\n * @internal\n */\n// export function useReactive<T extends object>(value: T): Reactive<T> {\n// \treturn useMemo(() => reactive<T>(value), []);\n// }\n\n/**\n * @internal\n * Update a Reactive's using the properties of an object or other Reactive.\n * Also works for Signals.\n * @example\n *   // Update a Reactive with Object.assign()-like syntax:\n *   const r = reactive({ name: \"Alice\" });\n *   update(r, { name: \"Bob\" });\n *   update(r, { age: 42 }); // property 'age' does not exist in type '{ name?: string }'\n *   update(r, 2); // '2' has no properties in common with '{ name?: string }'\n *   console.log(r.name.value); // \"Bob\"\n *\n * @example\n *   // Update a Reactive with the properties of another Reactive:\n *   const A = reactive({ name: \"Alice\" });\n *   const B = reactive({ name: \"Bob\", age: 42 });\n *   update(A, B);\n *   console.log(`${A.name} is ${A.age}`); // \"Bob is 42\"\n *\n * @example\n *   // Update a signal with assign()-like syntax:\n *   const s = signal(42);\n *   update(s, \"hi\"); // Argument type 'string' not assignable to type 'number'\n *   update(s, {}); // Argument type '{}' not assignable to type 'number'\n *   update(s, 43);\n *   console.log(s.value); // 43\n *\n * @param obj The Reactive or Signal to be updated\n * @param update The value, Signal, object or Reactive to update `obj` to match\n * @param overwrite If `true`, any properties `obj` missing from `update` are set to `undefined`\n */\n/*\nexport function update<T extends SignalOrReactive>(\n\tobj: T,\n\tupdate: Partial<Unwrap<T>>,\n\toverwrite = false\n) {\n\tif (obj instanceof Signal) {\n\t\tobj.value = peekValue(update);\n\t} else {\n\t\tfor (let i in update) {\n\t\t\tif (i in obj) {\n\t\t\t\tobj[i].value = peekValue(update[i]);\n\t\t\t} else {\n\t\t\t\tlet sig = signal(peekValue(update[i]));\n\t\t\t\tsig[KEY] = i;\n\t\t\t\tobj[i] = sig;\n\t\t\t}\n\t\t}\n\t\tif (overwrite) {\n\t\t\tfor (let i in obj) {\n\t\t\t\tif (!(i in update)) {\n\t\t\t\t\tobj[i].value = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n*/\n"],
  "mappings": "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",
  "names": ["getHookState", "index", "type", "options", "__h", "currentComponent", "currentHook", "hooks", "__H", "__", "length", "push", "useState", "initialState", "useReducer", "invokeOrReturn", "reducer", "init", "hookState", "currentIndex", "_reducer", "__c", "action", "currentValue", "__N", "nextValue", "setState", "__f", "updateHookState", "p", "s", "c", "stateHooks", "filter", "x", "every", "prevScu", "call", "this", "shouldUpdate", "props", "forEach", "hookItem", "shouldComponentUpdate", "prevCWU", "componentWillUpdate", "__e", "tmp", "useEffect", "callback", "args", "state", "__s", "argsChanged", "_pendingArgs", "useLayoutEffect", "useRef", "initialValue", "useMemo", "current", "useImperativeHandle", "ref", "createHandle", "result", "concat", "factory", "useCallback", "useContext", "context", "provider", "sub", "value", "useDebugValue", "formatter", "n", "useErrorBoundary", "cb", "errState", "componentDidCatch", "err", "errorInfo", "undefined", "useId", "root", "__v", "__m", "mask", "flushAfterPaintEffects", "component", "afterPaintEffects", "shift", "__P", "invokeCleanup", "invokeEffect", "e", "afterNextFrame", "raf", "done", "clearTimeout", "timeout", "HAS_RAF", "cancelAnimationFrame", "setTimeout", "requestAnimationFrame", "hook", "comp", "cleanup", "oldArgs", "newArgs", "some", "arg", "f", "previousComponent", "prevRaf", "oldBeforeDiff", "oldBeforeRender", "oldAfterDiff", "oldCommit", "oldBeforeUnmount", "oldRoot", "_options", "__b", "__r", "diffed", "unmount", "vnode", "parentDom", "__k", "commitQueue", "hasErrored", "assign", "obj", "props", "i", "shallowDiffers", "a", "b", "useSyncExternalStore", "subscribe", "getSnapshot", "value", "_useState", "useState", "_instance", "__", "_getSnapshot", "forceUpdate", "useLayoutEffect", "didSnapshotChange", "useEffect", "inst", "x", "y", "latestGetSnapshot", "prevValue", "nextValue", "error", "startTransition", "cb", "useDeferredValue", "val", "useTransition", "PureComponent", "p", "c", "this", "context", "memo", "comparer", "shouldUpdate", "nextProps", "ref", "updateRef", "call", "current", "Memoed", "shouldComponentUpdate", "createElement", "displayName", "name", "prototype", "isReactComponent", "__f", "forwardRef", "fn", "Forwarded", "clone", "$$typeof", "REACT_FORWARD_SYMBOL", "render", "detachedClone", "vnode", "detachedParent", "parentDom", "__c", "__H", "forEach", "effect", "__P", "__k", "map", "child", "removeOriginal", "originalParent", "__v", "__e", "appendChild", "Suspense", "__u", "_suspenders", "__b", "suspended", "component", "__a", "lazy", "loader", "prom", "Lazy", "then", "exports", "default", "e", "SuspenseList", "_next", "_map", "ContextProvider", "getChildContext", "children", "Portal", "_this", "container", "_container", "componentWillUnmount", "_temp", "nodeType", "parentNode", "childNodes", "contains", "push", "insertBefore", "before", "removeChild", "splice", "indexOf", "createPortal", "el", "containerInfo", "parent", "callback", "textContent", "preactRender", "hydrate", "preactHydrate", "empty", "isPropagationStopped", "cancelBubble", "isDefaultPrevented", "defaultPrevented", "createFactory", "type", "bind", "isValidElement", "element", "REACT_ELEMENT_TYPE", "isFragment", "Fragment", "isMemo", "String", "startsWith", "cloneElement", "preactCloneElement", "apply", "arguments", "unmountComponentAtNode", "findDOMNode", "base", "useInsertionEffect", "oldDiffHook", "mapFn", "Children", "oldCatchError", "oldUnmount", "resolve", "CAMEL_PROPS", "ON_ANI", "CAMEL_REPLACE", "IS_DOM", "onChangeInputType", "oldEventHook", "currentComponent", "classNameDescriptorNonEnumberable", "oldVNodeHook", "oldBeforeRender", "oldDiffed", "__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED", "version", "unstable_batchedUpdates", "flushSync", "StrictMode", "isElement", "index", "Component", "isPureReactComponent", "state", "options", "Symbol", "for", "toChildArray", "count", "length", "only", "normalized", "toArray", "newVNode", "oldVNode", "errorInfo", "unmount", "__R", "promise", "suspendingVNode", "suspendingComponent", "resolved", "onResolved", "onSuspensionComplete", "suspendedVNode", "__O", "setState", "pop", "document", "detachedComponent", "fallback", "list", "node", "delete", "revealOrder", "size", "delegated", "get", "unsuspend", "wrappedUnsuspend", "Map", "reverse", "set", "componentDidUpdate", "componentDidMount", "test", "key", "Object", "defineProperty", "configurable", "v", "writable", "event", "persist", "nativeEvent", "enumerable", "class", "normalizedProps", "isNonDashedType", "lowerCased", "toLowerCase", "replace", "multiple", "Array", "isArray", "selected", "defaultValue", "className", "__r", "diffed", "dom", "ReactCurrentDispatcher", "readContext", "__n", "useCallback", "useContext", "useDebugValue", "useId", "useImperativeHandle", "useMemo", "useReducer", "useRef", "arg", "createContext", "createRef", "endBatch", "batchDepth", "error", "hasError", "batchedEffect", "effect", "batchIteration", "next", "_nextBatchedEffect", "_flags", "needsToRecompute", "_callback", "err", "batch", "fn", "untracked", "prevContext", "evalContext", "addDependency", "signal", "node", "_node", "_target", "_version", "_source", "_prevSource", "_sources", "_nextSource", "_prevTarget", "_nextTarget", "_rollbackNode", "_subscribe", "Signal", "value", "options", "this", "_value", "_targets", "_watched", "watched", "_unwatched", "unwatched", "target", "_refresh", "prepareSources", "rollbackNode", "cleanupSources", "head", "prev", "_unsubscribe", "Computed", "call", "undefined", "_fn", "_globalVersion", "globalVersion", "computed", "cleanupEffect", "cleanup", "_cleanup", "disposeEffect", "endEffect", "Error", "Effect", "_dispose", "bind", "BRAND_SYMBOL", "Symbol", "prototype", "brand", "_this", "targets", "_this$_watched", "_this2", "_this2$_unwatched", "subscribe", "_this3", "valueOf", "toString", "toJSON", "peek", "Object", "defineProperty", "get", "set", "_notify", "OUTDATED", "finish", "_start", "dispose", "hook", "hookName", "hookFn", "options", "bind", "setCurrentUpdater", "updater", "finishUpdate", "_start", "SignalValue", "_ref", "_this", "this", "data", "currentSignal", "useSignal", "value", "_useMemo", "useMemo", "self", "v", "__v", "__", "__c", "_updateFlags", "wrappedSignal", "computed", "s", "isText", "isValidElement", "dispose", "effect", "_notify", "notifyDomUpdates", "__e", "nodeType", "oldDispose", "_updater", "_dispose", "call", "peek", "createPropUpdater", "dom", "prop", "propSignal", "props", "setAsProperty", "ownerSVGElement", "changeSignal", "signal", "_update", "newSignal", "newProps", "setAttribute", "removeAttribute", "useComputed", "compute", "$compute", "useRef", "current", "currentComponent", "flushEffects", "batch", "inst", "effectsQueue", "shift", "oldNotify", "notifyEffects", "push", "requestAnimationFrame", "deferEffects", "flushDomUpdates", "domQueue", "deferDomUpdates", "useSignalEffect", "cb", "callback", "useEffect", "displayName", "Object", "defineProperties", "Signal", "prototype", "constructor", "configurable", "undefined", "type", "get", "__b", "old", "vnode", "signalProps", "i", "__np", "component", "update", "_callback", "setState", "createUpdater", "error", "oldVNode", "renderedProps", "updaters", "_updaters", "index", "Component", "shouldComponentUpdate", "state", "hasSignals", "_sources", "__f", "u", "hasHooksState", "setTimeout", "done", "clearTimeout", "timeout", "cancelAnimationFrame", "raf", "queueMicrotask"]
}
